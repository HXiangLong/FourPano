{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js??ref--5-0!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\SWCameraModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\SWCameraModule.js","mtime":1531468139737},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\.babelrc","mtime":1526554899270},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../tool/SWConstants');\n\nvar _SWTool = require('../tool/SWTool');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TWEEN = require('@tweenjs/tween.js');\n\n/**\r\n * 相机控制类只有旋转和缩放，没有平移\r\n */\n\nvar SWCameraModule = function () {\n        function SWCameraModule() {\n                _classCallCheck(this, SWCameraModule);\n\n                /**相机状态枚举 */\n                this.STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n                /**相机目前状态 */\n                this.state = this.STATE.NONE;\n\n                /**鼠标按钮 */\n                this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n                //这个选项实际上可以使进出进入; 为了向后兼容，保留为“缩放”。\n                /**设置为false以禁用缩放 */\n                this.enableZoom = true;\n                /**缩放速度 */\n                this.zoomSpeed = 4.0;\n\n                /**设置为false以禁用旋转 */\n                this.enableRotate = true;\n                /**旋转速度 */\n                this.rotateSpeed = 0.4;\n\n                /**自动旋转 */\n                this.autoRotate = true;\n                /**自动旋转速度，当fps为60时，每轮30秒 */\n                this.autoRotateSpeed = 2.0;\n\n                //设置为true以启用阻尼（惯性）\n                //如果启用阻尼，则必须在动画循环中调用controls.update（）\n                this.enableDamping = false;\n                this.dampingFactor = 0.25;\n                this.dampingTime = 0;\n\n                //旋转坐标值\n                this.rotateStart = new THREE.Vector2();\n                this.rotateEnd = new THREE.Vector2();\n                this.rotateDelta = new THREE.Vector2();\n\n                this.startTime = undefined;\n                this.speed = { yaw: 0, pitch: 0 };\n\n                //缩放坐标值\n                this.dollyStart = new THREE.Vector2();\n                this.dollyEnd = new THREE.Vector2();\n                this.dollyDelta = new THREE.Vector2();\n\n                this.rotateYaw = 0;\n                this.rotatePitch = 0;\n\n                //围绕Y轴旋转，也叫偏航角\n                this.yaw_Camera = 0;\n                //围绕X轴旋转，也叫做俯仰角\n                this.picth_Camera = 0;\n                //围绕Z轴旋转，也叫翻滚角\n                this.roll_Camera = 0;\n\n                /**是否启用陀螺仪 */\n                this.enabledGyro = true;\n\n                this.deviceOrientation = {};\n                this.screenOrientation = 0;\n\n                this.alphaOffset = 0; // radians\n\n                this.zee = new THREE.Vector3(0, 0, 1);\n\n                this.euler = new THREE.Euler();\n\n                this.q0 = new THREE.Quaternion();\n\n                this.q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)); // - PI/2 around the x-axis\n\n                this.startAlpha = 0;\n                this.startBeta = 0;\n                this.startGamma = 0;\n\n                this.lon = this.lat = 0;\n                this.moothFactor = 10;\n                this.boundary = 320;\n                this.lastLon = this.lastLat = undefined;\n\n                /**相机是否推进放大 */\n                this.ifCameraEnlarge = false;\n\n                this.setHousesViewAngle(0, 0);\n        }\n\n        _createClass(SWCameraModule, [{\n                key: 'update',\n                value: function update() {\n\n                        if (this.enableDamping) {\n\n                                this.speed.yaw = this.getAutoRotationAngle(this.speed.yaw);\n\n                                this.speed.pitch = this.getAutoRotationAngle(this.speed.pitch);\n\n                                if (Math.abs(this.speed.yaw) <= 0.2 && Math.abs(this.speed.pitch) <= 0.2) {\n\n                                        this.enableDamping = false;\n\n                                        return;\n                                }\n\n                                this.setOverlayViewAngle(parseFloat(this.speed.yaw.toFixed(2)), Math.floor(this.speed.pitch));\n                        }\n                }\n\n                /**获得自动旋转角度 */\n\n        }, {\n                key: 'getAutoRotationAngle',\n                value: function getAutoRotationAngle(speed) {\n                        if (speed !== 0) {\n                                if (speed > 0) {\n                                        speed -= this.dampingFactor;\n                                        speed < 0 && (speed = 0);\n                                } else {\n                                        speed += this.dampingFactor;\n                                        speed > 0 && (speed = 0);\n                                }\n                        }\n                        return speed;\n                }\n\n                /**设置缩放比例 */\n\n        }, {\n                key: 'getZoomScale',\n                value: function getZoomScale() {\n                        return Math.pow(2, this.zoomSpeed);\n                }\n\n                /**缩小 */\n\n        }, {\n                key: 'dollyIn',\n                value: function dollyIn(dollyScale) {\n\n                        if (_SWConstants.camera.isPerspectiveCamera) {\n\n                                var fov = Math.max(_SWConstants.c_Minfov, Math.min(_SWConstants.c_Maxfov, _SWConstants.camera.fov + dollyScale));\n\n                                if (_SWConstants.camera.fov > (_SWConstants.c_Maxfov + _SWConstants.c_Minfov) * 0.5) {\n\n                                        this.ifCameraEnlarge = false;\n\n                                        _SWConstants.sw_skyBox.panoBox.clearFaceTiles();\n                                }\n\n                                var from = { x: _SWConstants.camera.fov };\n\n                                var to = { x: fov };\n\n                                new TWEEN.Tween(from).to(to, 800).easing(TWEEN.Easing.Quadratic.Out).onUpdate(function () {\n                                        _SWConstants.camera.fov = this._object.x;\n                                }).onComplete(function () {}).start();\n\n                                _SWConstants.camera.updateProjectionMatrix();\n                        }\n                }\n\n                /**放大 */\n\n        }, {\n                key: 'dollyOut',\n                value: function dollyOut(dollyScale) {\n\n                        if (_SWConstants.camera.isPerspectiveCamera) {\n\n                                var fov = Math.max(_SWConstants.c_Minfov, Math.min(_SWConstants.c_Maxfov, _SWConstants.camera.fov - dollyScale));\n\n                                _SWConstants.camera.updateProjectionMatrix();\n\n                                if (_SWConstants.camera.fov < (_SWConstants.c_Maxfov + _SWConstants.c_Minfov) * 0.5) {\n\n                                        this.ifCameraEnlarge = true;\n\n                                        _SWConstants.sw_skyBox.panoBox.addFaceTiles();\n                                }\n\n                                var from = { x: _SWConstants.camera.fov };\n\n                                var to = { x: fov };\n\n                                new TWEEN.Tween(from).to(to, 800).easing(TWEEN.Easing.Quadratic.Out).onUpdate(function () {\n                                        _SWConstants.camera.fov = this._object.x;\n                                }).onComplete(function () {}).start();\n                        }\n                }\n\n                /**\r\n                 * 鼠标按下\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onMouseDown',\n                value: function onMouseDown(event) {\n\n                        event.preventDefault();\n\n                        if (event.button == this.mouseButtons.ORBIT) {\n\n                                if (this.enableRotate === false) return;\n\n                                this.rotateStart.set(event.clientX, event.clientY);\n\n                                this.startTime = Date.now();\n\n                                this.state = this.STATE.ROTATE;\n                        }\n                }\n\n                /**\r\n                 * 鼠标移动\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onMouseMove',\n                value: function onMouseMove(event) {\n\n                        event.preventDefault();\n\n                        if (this.state == this.STATE.ROTATE) {\n\n                                if (this.enableRotate === false) return;\n\n                                this.rotateEnd.set(event.clientX, event.clientY);\n\n                                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed);\n\n                                this.rotateYaw = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.x / window.innerWidth); // 显示区域\n\n                                this.rotatePitch = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.y / window.innerHeight);\n\n                                this.setOverlayViewAngle(this.rotateYaw, this.rotatePitch);\n\n                                this.slowMove(10);\n\n                                this.rotateStart.copy(this.rotateEnd);\n                        }\n                }\n\n                /**\r\n                 * 鼠标弹起,旋转拖尾效果\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onMouseUp',\n                value: function onMouseUp(event) {\n\n                        this.state = this.STATE.NONE;\n                }\n\n                /**\r\n                 * 滚轮缩放\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onMouseWheel',\n                value: function onMouseWheel(event) {\n\n                        if (this.enableZoom === false || this.state !== this.STATE.NONE && this.state !== this.STATE.ROTATE) return;\n\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        if (event.deltaY < 0) {\n\n                                this.dollyOut(this.getZoomScale());\n                        } else if (event.deltaY > 0) {\n\n                                this.dollyIn(this.getZoomScale());\n                        }\n                }\n\n                /**\r\n                 * 手指按下\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onTouchStart',\n                value: function onTouchStart(event) {\n\n                        event.preventDefault();\n\n                        switch (event.touches.length) {\n\n                                case 1:\n                                        // 单指触摸：旋转\n\n                                        if (this.enableRotate === false) return;\n\n                                        this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n                                        this.startTime = Date.now();\n\n                                        this.state = this.STATE.TOUCH_ROTATE;\n\n                                        break;\n\n                                case 2:\n                                        // 双指触摸：移动/缩放\n\n                                        if (this.enableZoom === false && this.enablePan === false) return;\n\n                                        if (this.enableZoom) {\n\n                                                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                                                var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                                                var distance = Math.sqrt(dx * dx + dy * dy);\n\n                                                this.dollyStart.set(0, distance);\n                                        }\n\n                                        this.state = this.STATE.TOUCH_DOLLY_PAN;\n\n                                        break;\n\n                                default:\n                                        this.state = this.STATE.NONE;\n\n                        }\n                }\n\n                /**\r\n                 * 手指移动\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onTouchMove',\n                value: function onTouchMove(event) {\n\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        switch (event.touches.length) {\n\n                                case 1:\n                                        // 单指触摸：旋转\n\n                                        if (this.enableRotate === false || this.state !== this.STATE.TOUCH_ROTATE) return;\n\n                                        this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n                                        this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed);\n\n                                        this.rotateYaw = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.x / window.innerWidth); // 显示区域\n\n                                        this.rotatePitch = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.y / window.innerHeight);\n\n                                        this.setOverlayViewAngle(parseFloat(this.rotateYaw.toFixed(2)), Math.floor(this.rotatePitch));\n\n                                        this.slowMove(20);\n\n                                        this.rotateStart.copy(this.rotateEnd);\n\n                                        break;\n\n                                case 2:\n                                        // 双指触摸：移动/缩放\n\n                                        if (this.enableZoom === false || this.state !== this.STATE.TOUCH_DOLLY_PAN) return;\n\n                                        var dx = event.touches[0].pageX - event.touches[1].pageX;\n                                        var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                                        var distance = Math.sqrt(dx * dx + dy * dy);\n\n                                        this.dollyEnd.set(0, distance);\n\n                                        this.dollyDelta.set(0, -(this.dollyEnd.y - this.dollyStart.y) * 0.5 / this.zoomSpeed);\n\n                                        this.dollyIn(this.dollyDelta.y);\n\n                                        this.dollyStart.copy(this.dollyEnd);\n                                        break;\n\n                                default:\n\n                                        this.state = this.STATE.NONE;\n                        }\n                }\n\n                /**\r\n                 * 手指弹起\r\n                 * @param {MouseEvent} event \r\n                 */\n\n        }, {\n                key: 'onTouchEnd',\n                value: function onTouchEnd(event) {\n\n                        if (event.touches.length === 1) {\n\n                                this.state = this.STATE.TOUCH_ROTATE;\n\n                                this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n                                this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                        } else if (event.touches.length === 0) {\n\n                                this.state = this.STATE.NONE;\n                        }\n                }\n\n                /**\r\n                 * 帮助转动，使转动更加轻松\r\n                 * @param {Number} card 缓动值\r\n                 */\n\n        }, {\n                key: 'slowMove',\n                value: function slowMove(card) {\n\n                        this.speed = { yaw: this.rotateEnd.x - this.rotateStart.x, pitch: this.rotateEnd.y - this.rotateStart.y };\n\n                        this.dampingTime = (Date.now() - this.startTime) / card;\n\n                        var yy = this.speed.yaw / this.dampingTime > 0 ? this.speed.yaw / this.dampingTime > 8 ? 8 : this.speed.yaw / this.dampingTime : this.speed.yaw / this.dampingTime < -8 ? -8 : this.speed.yaw / this.dampingTime;\n\n                        var pp = this.speed.pitch / this.dampingTime > 0 ? this.speed.pitch / this.dampingTime > 3 ? 3 : this.speed.pitch / this.dampingTime : this.speed.pitch / this.dampingTime < -3 ? -3 : this.speed.pitch / this.dampingTime;\n\n                        this.speed = { yaw: yy, pitch: pp };\n\n                        this.enableDamping = true;\n                }\n\n                /**\r\n                 * 监听并接收设备方向变化信息,检测手机倾斜旋转\r\n                 *         z   \r\n                 *         |   y\r\n                 *         |  /   \r\n                 *         | /\r\n                 *          ————————X\r\n                 * @param {*} event \r\n                 */\n\n        }, {\n                key: 'onDeviceOrientationChangeEvent',\n                value: function onDeviceOrientationChangeEvent(event) {\n                        if (this.enabledGyro) {\n\n                                if (event) {\n\n                                        var alpha = event.alpha ? THREE.Math.degToRad(parseFloat((event.alpha - this.startAlpha).toFixed(2))) + this.alphaOffset : 0; // Z\n\n                                        var beta = event.beta ? THREE.Math.degToRad(parseFloat((event.beta - this.startBeta).toFixed(2))) : 0; // X'\n\n                                        var gamma = event.gamma ? THREE.Math.degToRad(parseFloat(event.gamma.toFixed(2))) : 0; // Y''\n\n                                        var orient = this.screenOrientation ? THREE.Math.degToRad(this.screenOrientation) : 0; // O\n\n                                        this.setObjectQuaternion(_SWConstants.camera.quaternion, alpha, beta, gamma, orient);\n                                }\n                        }\n                }\n\n                /**\r\n                 * 浏览器横竖屏切换检测\r\n                 */\n\n        }, {\n                key: 'onScreenOrientationChangeEvent',\n                value: function onScreenOrientationChangeEvent() {\n\n                        this.screenOrientation = window.orientation || 0;\n                }\n\n                /**\r\n                 * 重新定义相机的四元素\r\n                 * @param {Quaternion} quaternion 相机的旋转四元素\r\n                 * @param {Number} alpha 设备沿 Z 轴旋转的弧度值\r\n                 * @param {Number} beta 设备在 x 轴上的旋转弧度值\r\n                 * @param {Number} gamma 设备在 y 轴上的旋转弧度值\r\n                 * @param {Number} orient 浏览器横竖屏朝向的弧度值\r\n                 */\n\n        }, {\n                key: 'setObjectQuaternion',\n                value: function setObjectQuaternion(quaternion, alpha, beta, gamma, orient) {\n\n                        this.euler.set(beta, alpha, -gamma, 'YXZ'); //欧拉角是绕坐标轴旋转的角度和顺序,按照heading , pitch , roll 的顺序，应该是 YXZ\n\n                        quaternion.setFromEuler(this.euler); // 从欧拉角设置四元数\n\n                        quaternion.multiply(this.q1); //四元数的乘法\n\n                        quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient)); // 从任意轴的旋转角设置四元数\n                }\n\n                /**\r\n                 * 有激光点云时点击墙面会放大\r\n                 */\n\n        }, {\n                key: 'setWallWheel',\n                value: function setWallWheel() {\n                        if (_SWConstants.camera.isPerspectiveCamera) {\n\n                                if (_SWConstants.camera.fov > _SWConstants.c_Minfov) {\n                                        //放大\n\n                                        this.dollyOut((_SWConstants.c_Maxfov - _SWConstants.c_Minfov) / 3);\n                                } else if (_SWConstants.camera.fov == _SWConstants.c_Minfov) {\n                                        //还原\n\n                                        this.dollyIn(100);\n                                }\n                        }\n                }\n\n                /**\r\n                 * 这个是直接设置相机视角值\r\n                 * @param {*} yaws 经度\r\n                 * @param {*} pitch 纬度\r\n                 */\n\n        }, {\n                key: 'setHousesViewAngle',\n                value: function setHousesViewAngle(yaws, pitch) {\n\n                        if (yaws) this.yaw_Camera = yaws;\n\n                        if (pitch) this.picth_Camera = pitch;\n\n                        _SWConstants.camera.lookAt((0, _SWTool.YPRToVector3)(this.yaw_Camera, this.picth_Camera));\n\n                        if (this.ifCameraEnlarge) {\n\n                                _SWConstants.sw_skyBox.panoBox.addFaceTiles();\n                        }\n                }\n\n                /**\r\n                 * 叠加相机角度\r\n                 * @param {*} yaws 经度\r\n                 * @param {*} pitch 纬度\r\n                 */\n\n        }, {\n                key: 'setOverlayViewAngle',\n                value: function setOverlayViewAngle(yaws, pitch) {\n\n                        this.picth_Camera = Math.max(_SWConstants.c_minPitch, Math.min(_SWConstants.c_maxPitch, this.picth_Camera + pitch));\n\n                        this.yaw_Camera = (0, _SWTool.getNumberMax360)(this.yaw_Camera + yaws);\n\n                        if (isNaN(this.picth_Camera)) this.picth_Camera = 0;\n\n                        if (isNaN(this.yaw_Camera)) this.yaw_Camera = 0;\n\n                        this.setHousesViewAngle();\n                }\n        }]);\n\n        return SWCameraModule;\n}();\n\nexports.default = SWCameraModule;",{"version":3,"sources":["app\\src\\module\\SWCameraModule.js"],"names":["TWEEN","require","SWCameraModule","STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","state","mouseButtons","ORBIT","THREE","MOUSE","LEFT","ZOOM","MIDDLE","RIGHT","enableZoom","zoomSpeed","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableDamping","dampingFactor","dampingTime","rotateStart","Vector2","rotateEnd","rotateDelta","startTime","undefined","speed","yaw","pitch","dollyStart","dollyEnd","dollyDelta","rotateYaw","rotatePitch","yaw_Camera","picth_Camera","roll_Camera","enabledGyro","deviceOrientation","screenOrientation","alphaOffset","zee","Vector3","euler","Euler","q0","Quaternion","q1","Math","sqrt","startAlpha","startBeta","startGamma","lon","lat","moothFactor","boundary","lastLon","lastLat","ifCameraEnlarge","setHousesViewAngle","getAutoRotationAngle","abs","setOverlayViewAngle","parseFloat","toFixed","floor","pow","dollyScale","camera","isPerspectiveCamera","fov","max","c_Minfov","min","c_Maxfov","sw_skyBox","panoBox","clearFaceTiles","from","x","to","Tween","easing","Easing","Quadratic","Out","onUpdate","_object","onComplete","start","updateProjectionMatrix","addFaceTiles","event","preventDefault","button","set","clientX","clientY","Date","now","subVectors","multiplyScalar","radToDeg","PI","window","innerWidth","y","innerHeight","slowMove","copy","stopPropagation","deltaY","dollyOut","getZoomScale","dollyIn","touches","length","pageX","pageY","enablePan","dx","dy","distance","card","yy","pp","alpha","degToRad","beta","gamma","orient","setObjectQuaternion","quaternion","orientation","setFromEuler","multiply","setFromAxisAngle","yaws","lookAt","c_minPitch","c_maxPitch","isNaN"],"mappings":"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","file":"SWCameraModule.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport { camera, c_Maxfov, c_Minfov, c_maxPitch, c_minPitch, sw_skyBox } from \"../tool/SWConstants\";\r\nimport { YPRToVector3, getNumberMax360 } from '../tool/SWTool';\r\nconst TWEEN = require('@tweenjs/tween.js');\r\n\r\n/**\r\n * 相机控制类只有旋转和缩放，没有平移\r\n */\r\nclass SWCameraModule {\r\n    constructor() {\r\n        /**相机状态枚举 */\r\n        this.STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\r\n\r\n        /**相机目前状态 */\r\n        this.state = this.STATE.NONE;\r\n\r\n        /**鼠标按钮 */\r\n        this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\r\n\r\n        //这个选项实际上可以使进出进入; 为了向后兼容，保留为“缩放”。\r\n        /**设置为false以禁用缩放 */\r\n        this.enableZoom = true;\r\n        /**缩放速度 */\r\n        this.zoomSpeed = 4.0;\r\n\r\n        /**设置为false以禁用旋转 */\r\n        this.enableRotate = true;\r\n        /**旋转速度 */\r\n        this.rotateSpeed = 0.4;\r\n\r\n        /**自动旋转 */\r\n        this.autoRotate = true;\r\n        /**自动旋转速度，当fps为60时，每轮30秒 */\r\n        this.autoRotateSpeed = 2.0;\r\n\r\n        //设置为true以启用阻尼（惯性）\r\n        //如果启用阻尼，则必须在动画循环中调用controls.update（）\r\n        this.enableDamping = false;\r\n        this.dampingFactor = 0.25;\r\n        this.dampingTime = 0;\r\n\r\n        //旋转坐标值\r\n        this.rotateStart = new THREE.Vector2();\r\n        this.rotateEnd = new THREE.Vector2();\r\n        this.rotateDelta = new THREE.Vector2();\r\n\r\n        this.startTime = undefined;\r\n        this.speed = { yaw: 0, pitch: 0 };\r\n\r\n        //缩放坐标值\r\n        this.dollyStart = new THREE.Vector2();\r\n        this.dollyEnd = new THREE.Vector2();\r\n        this.dollyDelta = new THREE.Vector2();\r\n\r\n        this.rotateYaw = 0;\r\n        this.rotatePitch = 0;\r\n\r\n        //围绕Y轴旋转，也叫偏航角\r\n        this.yaw_Camera = 0;\r\n        //围绕X轴旋转，也叫做俯仰角\r\n        this.picth_Camera = 0;\r\n        //围绕Z轴旋转，也叫翻滚角\r\n        this.roll_Camera = 0;\r\n\r\n        /**是否启用陀螺仪 */\r\n        this.enabledGyro = true;\r\n\r\n        this.deviceOrientation = {};\r\n        this.screenOrientation = 0;\r\n\r\n        this.alphaOffset = 0; // radians\r\n\r\n        this.zee = new THREE.Vector3(0, 0, 1);\r\n\r\n        this.euler = new THREE.Euler();\r\n\r\n        this.q0 = new THREE.Quaternion();\r\n\r\n        this.q1 = new THREE.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)); // - PI/2 around the x-axis\r\n\r\n        this.startAlpha = 0;\r\n        this.startBeta = 0;\r\n        this.startGamma = 0;\r\n\r\n        this.lon = this.lat = 0;\r\n        this.moothFactor = 10;\r\n        this.boundary = 320;\r\n        this.lastLon = this.lastLat = undefined;\r\n\r\n        /**相机是否推进放大 */\r\n        this.ifCameraEnlarge = false;\r\n\r\n        this.setHousesViewAngle(0, 0);\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        if (this.enableDamping) {\r\n\r\n            this.speed.yaw = this.getAutoRotationAngle(this.speed.yaw);\r\n\r\n            this.speed.pitch = this.getAutoRotationAngle(this.speed.pitch);\r\n\r\n            if (Math.abs(this.speed.yaw) <= 0.2 && Math.abs(this.speed.pitch) <= 0.2) {\r\n\r\n                this.enableDamping = false;\r\n\r\n                return;\r\n            }\r\n\r\n            this.setOverlayViewAngle(parseFloat(this.speed.yaw.toFixed(2)), Math.floor(this.speed.pitch));\r\n\r\n        }\r\n    }\r\n\r\n    /**获得自动旋转角度 */\r\n    getAutoRotationAngle(speed) {\r\n        if (speed !== 0) {\r\n            if (speed > 0) {\r\n                speed -= this.dampingFactor;\r\n                speed < 0 && (speed = 0);\r\n            } else {\r\n                speed += this.dampingFactor;\r\n                speed > 0 && (speed = 0);\r\n            }\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    /**设置缩放比例 */\r\n    getZoomScale() {\r\n        return Math.pow(2, this.zoomSpeed);\r\n    }\r\n\r\n    /**缩小 */\r\n    dollyIn(dollyScale) {\r\n\r\n        if (camera.isPerspectiveCamera) {\r\n\r\n            let fov = Math.max(c_Minfov, Math.min(c_Maxfov, camera.fov + dollyScale));\r\n\r\n            if (camera.fov > (c_Maxfov + c_Minfov) * 0.5) {\r\n\r\n                this.ifCameraEnlarge = false;\r\n\r\n                sw_skyBox.panoBox.clearFaceTiles();\r\n\r\n            }\r\n\r\n            let from = { x: camera.fov };\r\n\r\n            let to = { x: fov };\r\n\r\n            new TWEEN.Tween(from)\r\n                .to(to, 800)\r\n                .easing(TWEEN.Easing.Quadratic.Out)\r\n                .onUpdate(function() { camera.fov = this._object.x; }).onComplete(() => {}).start();\r\n\r\n            camera.updateProjectionMatrix();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**放大 */\r\n    dollyOut(dollyScale) {\r\n\r\n        if (camera.isPerspectiveCamera) {\r\n\r\n            let fov = Math.max(c_Minfov, Math.min(c_Maxfov, camera.fov - dollyScale));\r\n\r\n            camera.updateProjectionMatrix();\r\n\r\n            if (camera.fov < (c_Maxfov + c_Minfov) * 0.5) {\r\n\r\n                this.ifCameraEnlarge = true;\r\n\r\n                sw_skyBox.panoBox.addFaceTiles();\r\n\r\n            }\r\n\r\n            let from = { x: camera.fov };\r\n\r\n            let to = { x: fov };\r\n\r\n            new TWEEN.Tween(from)\r\n                .to(to, 800)\r\n                .easing(TWEEN.Easing.Quadratic.Out)\r\n                .onUpdate(function() { camera.fov = this._object.x; }).onComplete(() => {}).start();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 鼠标按下\r\n     * @param {MouseEvent} event \r\n     */\r\n    onMouseDown(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        if (event.button == this.mouseButtons.ORBIT) {\r\n\r\n            if (this.enableRotate === false) return;\r\n\r\n            this.rotateStart.set(event.clientX, event.clientY);\r\n\r\n            this.startTime = Date.now();\r\n\r\n            this.state = this.STATE.ROTATE;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标移动\r\n     * @param {MouseEvent} event \r\n     */\r\n    onMouseMove(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        if (this.state == this.STATE.ROTATE) {\r\n\r\n            if (this.enableRotate === false) return;\r\n\r\n            this.rotateEnd.set(event.clientX, event.clientY);\r\n\r\n            this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed);\r\n\r\n            this.rotateYaw = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.x / window.innerWidth); // 显示区域\r\n\r\n            this.rotatePitch = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.y / window.innerHeight);\r\n\r\n            this.setOverlayViewAngle(this.rotateYaw, this.rotatePitch);\r\n\r\n            this.slowMove(10);\r\n\r\n            this.rotateStart.copy(this.rotateEnd);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标弹起,旋转拖尾效果\r\n     * @param {MouseEvent} event \r\n     */\r\n    onMouseUp(event) {\r\n\r\n        this.state = this.STATE.NONE;\r\n\r\n    }\r\n\r\n    /**\r\n     * 滚轮缩放\r\n     * @param {MouseEvent} event \r\n     */\r\n    onMouseWheel(event) {\r\n\r\n        if (this.enableZoom === false || (this.state !== this.STATE.NONE && this.state !== this.STATE.ROTATE)) return;\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (event.deltaY < 0) {\r\n\r\n            this.dollyOut(this.getZoomScale());\r\n\r\n        } else if (event.deltaY > 0) {\r\n\r\n            this.dollyIn(this.getZoomScale());\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手指按下\r\n     * @param {MouseEvent} event \r\n     */\r\n    onTouchStart(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        switch (event.touches.length) {\r\n\r\n            case 1: // 单指触摸：旋转\r\n\r\n                if (this.enableRotate === false) return;\r\n\r\n                this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n                this.startTime = Date.now();\r\n\r\n                this.state = this.STATE.TOUCH_ROTATE;\r\n\r\n                break;\r\n\r\n            case 2: // 双指触摸：移动/缩放\r\n\r\n                if (this.enableZoom === false && this.enablePan === false) return;\r\n\r\n                if (this.enableZoom) {\r\n\r\n                    let dx = event.touches[0].pageX - event.touches[1].pageX;\r\n                    let dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n                    let distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                    this.dollyStart.set(0, distance);\r\n                }\r\n\r\n                this.state = this.STATE.TOUCH_DOLLY_PAN;\r\n\r\n                break;\r\n\r\n            default:\r\n                this.state = this.STATE.NONE;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 手指移动\r\n     * @param {MouseEvent} event \r\n     */\r\n    onTouchMove(event) {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        switch (event.touches.length) {\r\n\r\n            case 1: // 单指触摸：旋转\r\n\r\n                if (this.enableRotate === false || this.state !== this.STATE.TOUCH_ROTATE) return;\r\n\r\n                this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed);\r\n\r\n                this.rotateYaw = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.x / window.innerWidth); // 显示区域\r\n\r\n                this.rotatePitch = THREE.Math.radToDeg(2 * Math.PI * this.rotateDelta.y / window.innerHeight);\r\n\r\n                this.setOverlayViewAngle(parseFloat(this.rotateYaw.toFixed(2)), Math.floor(this.rotatePitch));\r\n\r\n                this.slowMove(20);\r\n\r\n                this.rotateStart.copy(this.rotateEnd);\r\n\r\n                break;\r\n\r\n            case 2: // 双指触摸：移动/缩放\r\n\r\n                if (this.enableZoom === false || this.state !== this.STATE.TOUCH_DOLLY_PAN) return;\r\n\r\n                let dx = event.touches[0].pageX - event.touches[1].pageX;\r\n                let dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n                let distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                this.dollyEnd.set(0, distance);\r\n\r\n                this.dollyDelta.set(0, -(this.dollyEnd.y - this.dollyStart.y) * 0.5 / this.zoomSpeed);\r\n\r\n                this.dollyIn(this.dollyDelta.y);\r\n\r\n                this.dollyStart.copy(this.dollyEnd);\r\n                break;\r\n\r\n            default:\r\n\r\n                this.state = this.STATE.NONE;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 手指弹起\r\n     * @param {MouseEvent} event \r\n     */\r\n    onTouchEnd(event) {\r\n\r\n        if (event.touches.length === 1) {\r\n\r\n            this.state = this.STATE.TOUCH_ROTATE;\r\n\r\n            this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n            this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n        } else if (event.touches.length === 0) {\r\n\r\n            this.state = this.STATE.NONE;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 帮助转动，使转动更加轻松\r\n     * @param {Number} card 缓动值\r\n     */\r\n    slowMove(card) {\r\n\r\n        this.speed = { yaw: (this.rotateEnd.x - this.rotateStart.x), pitch: (this.rotateEnd.y - this.rotateStart.y) };\r\n\r\n        this.dampingTime = (Date.now() - this.startTime) / card;\r\n\r\n        let yy = (this.speed.yaw / this.dampingTime) > 0 ?\r\n            ((this.speed.yaw / this.dampingTime) > 8 ? 8 : (this.speed.yaw / this.dampingTime)) :\r\n            ((this.speed.yaw / this.dampingTime) < -8 ? -8 : (this.speed.yaw / this.dampingTime));\r\n\r\n        let pp = (this.speed.pitch / this.dampingTime) > 0 ?\r\n            ((this.speed.pitch / this.dampingTime) > 3 ? 3 : (this.speed.pitch / this.dampingTime)) :\r\n            ((this.speed.pitch / this.dampingTime) < -3 ? -3 : (this.speed.pitch / this.dampingTime));\r\n\r\n        this.speed = { yaw: yy, pitch: pp };\r\n\r\n        this.enableDamping = true;\r\n    }\r\n\r\n    /**\r\n     * 监听并接收设备方向变化信息,检测手机倾斜旋转\r\n     *         z   \r\n     *         |   y\r\n     *         |  /   \r\n     *         | /\r\n     *          ————————X\r\n     * @param {*} event \r\n     */\r\n    onDeviceOrientationChangeEvent(event) {\r\n        if (this.enabledGyro) {\r\n\r\n            if (event) {\r\n\r\n                let alpha = event.alpha ? THREE.Math.degToRad(parseFloat((event.alpha - this.startAlpha).toFixed(2))) + this.alphaOffset : 0; // Z\r\n\r\n                let beta = event.beta ? THREE.Math.degToRad(parseFloat((event.beta - this.startBeta).toFixed(2))) : 0; // X'\r\n\r\n                let gamma = event.gamma ? THREE.Math.degToRad(parseFloat((event.gamma).toFixed(2))) : 0; // Y''\r\n\r\n                let orient = this.screenOrientation ? THREE.Math.degToRad(this.screenOrientation) : 0; // O\r\n\r\n                this.setObjectQuaternion(camera.quaternion, alpha, beta, gamma, orient);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 浏览器横竖屏切换检测\r\n     */\r\n    onScreenOrientationChangeEvent() {\r\n\r\n        this.screenOrientation = window.orientation || 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * 重新定义相机的四元素\r\n     * @param {Quaternion} quaternion 相机的旋转四元素\r\n     * @param {Number} alpha 设备沿 Z 轴旋转的弧度值\r\n     * @param {Number} beta 设备在 x 轴上的旋转弧度值\r\n     * @param {Number} gamma 设备在 y 轴上的旋转弧度值\r\n     * @param {Number} orient 浏览器横竖屏朝向的弧度值\r\n     */\r\n    setObjectQuaternion(quaternion, alpha, beta, gamma, orient) {\r\n\r\n        this.euler.set(beta, alpha, -gamma, 'YXZ'); //欧拉角是绕坐标轴旋转的角度和顺序,按照heading , pitch , roll 的顺序，应该是 YXZ\r\n\r\n        quaternion.setFromEuler(this.euler); // 从欧拉角设置四元数\r\n\r\n        quaternion.multiply(this.q1); //四元数的乘法\r\n\r\n        quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient)); // 从任意轴的旋转角设置四元数\r\n    }\r\n\r\n    /**\r\n     * 有激光点云时点击墙面会放大\r\n     */\r\n    setWallWheel() {\r\n        if (camera.isPerspectiveCamera) {\r\n\r\n            if (camera.fov > c_Minfov) { //放大\r\n\r\n                this.dollyOut((c_Maxfov - c_Minfov) / 3);\r\n\r\n            } else if (camera.fov == c_Minfov) { //还原\r\n\r\n                this.dollyIn(100);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 这个是直接设置相机视角值\r\n     * @param {*} yaws 经度\r\n     * @param {*} pitch 纬度\r\n     */\r\n    setHousesViewAngle(yaws, pitch) {\r\n\r\n        if (yaws) this.yaw_Camera = yaws;\r\n\r\n        if (pitch) this.picth_Camera = pitch;\r\n\r\n        camera.lookAt(YPRToVector3(this.yaw_Camera, this.picth_Camera));\r\n\r\n        if (this.ifCameraEnlarge) {\r\n\r\n            sw_skyBox.panoBox.addFaceTiles();\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 叠加相机角度\r\n     * @param {*} yaws 经度\r\n     * @param {*} pitch 纬度\r\n     */\r\n    setOverlayViewAngle(yaws, pitch) {\r\n\r\n        this.picth_Camera = Math.max(c_minPitch, Math.min(c_maxPitch, this.picth_Camera + pitch));\r\n\r\n        this.yaw_Camera = getNumberMax360(this.yaw_Camera + yaws);\r\n\r\n        if (isNaN(this.picth_Camera)) this.picth_Camera = 0;\r\n\r\n        if (isNaN(this.yaw_Camera)) this.yaw_Camera = 0;\r\n\r\n        this.setHousesViewAngle();\r\n    }\r\n}\r\n\r\nexport default SWCameraModule;"]}]}