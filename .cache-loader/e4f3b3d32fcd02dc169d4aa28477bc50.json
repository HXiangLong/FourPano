{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js??ref--5-0!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerMoreModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerMoreModule.js","mtime":1531473284685},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\.babelrc","mtime":1533282871391},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _SWMarkerModule2 = require('./SWMarkerModule');\n\nvar _SWMarkerModule3 = _interopRequireDefault(_SWMarkerModule2);\n\nvar _SWTool = require('../../tool/SWTool');\n\nvar _SWViewGesture = require('../../tool/SWViewGesture');\n\nvar _SWViewGesture2 = _interopRequireDefault(_SWViewGesture);\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global THREE,$*/\n\n\n/**\r\n * 多点绘面标注\r\n */\nvar SWMarkerMoreModule = function (_SWMarkerModule) {\n        _inherits(SWMarkerMoreModule, _SWMarkerModule);\n\n        /**\r\n         * 构造函数\r\n         * @param {SWMarkerInfo} obj 标注数据对象\r\n         */\n        function SWMarkerMoreModule(obj) {\n                _classCallCheck(this, SWMarkerMoreModule);\n\n                var _this = _possibleConstructorReturn(this, (SWMarkerMoreModule.__proto__ || Object.getPrototypeOf(SWMarkerMoreModule)).call(this));\n\n                _this.mouseDownBoo = false;\n\n                if (obj) {\n                        _this.markerObj = obj;\n\n                        _this.createPolygon(obj.points);\n\n                        _this.addMouseEvent();\n                }\n                return _this;\n        }\n\n        /**\r\n         * 创建多边形\r\n         * @param {Array} vertices 顶点信息\r\n         */\n\n\n        _createClass(SWMarkerMoreModule, [{\n                key: 'createPolygon',\n                value: function createPolygon(points) {\n\n                        var holes = [],\n                            triangles = void 0,\n                            vertices = [];\n\n                        //所有点由空间坐标转三维坐标\n                        points.map(function (data) {\n\n                                var v3 = (0, _SWTool.VPToVector3)(new _SWViewGesture2.default(data.yaw, parseFloat(data.pitch) + 20, 0));\n\n                                vertices.push(v3.subScalar(0.8));\n                        });\n\n                        this.geometry = new THREE.Geometry();\n\n                        this.geometry.vertices = vertices;\n\n                        //构建面顶点信息\n                        triangles = THREE.ShapeUtils.triangulateShape(vertices, holes);\n\n                        //三点构建面\n                        for (var i = 0; i < triangles.length; i++) {\n\n                                this.geometry.faces.push(new THREE.Face3(triangles[i][0], triangles[i][1], triangles[i][2]));\n                        }\n\n                        this.geometry.computeFaceNormals();\n\n                        this.material = new THREE.MeshLambertMaterial({\n                                color: 0x06FFFF,\n                                depthTest: true,\n                                transparent: true,\n                                colorWrite: true,\n                                side: 2,\n                                opacity: 0.5\n                        });\n\n                        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n                        this.mesh.lookAt(_SWConstants.camera.position);\n\n                        this.mesh.name = \"markerMesh\";\n\n                        this.mesh.userData.depthlevel = 1;\n\n                        _SWConstants.scene.add(this.mesh);\n                }\n\n                /**\r\n                 * 添加鼠标事件\r\n                 */\n\n        }, {\n                key: 'addMouseEvent',\n                value: function addMouseEvent() {\n                        var _this2 = this;\n\n                        this.mesh.mouseDown = function (e, obj) {\n\n                                _this2.mouseDownBoo = true;\n                        };\n\n                        this.mesh.mouseUp = function (e, obj) {\n\n                                if (_this2.mouseDownBoo) {\n\n                                        _this2.mouseDownBoo = false;\n\n                                        console.log(\"鼠标弹起啦~~~~~\" + _this2.markerObj.name);\n                                }\n                        };\n\n                        //鼠标进入\n                        this.mesh.mouseOver = function (e, obj) {\n\n                                _this2.showTextDiv(obj, _this2.markerObj.name);\n                        };\n\n                        //出去\n                        this.mesh.mouseOut = function (e, obj) {\n\n                                _this2.hideTextDiv();\n                        };\n                }\n        }]);\n\n        return SWMarkerMoreModule;\n}(_SWMarkerModule3.default);\n\nexports.default = SWMarkerMoreModule;",null]}