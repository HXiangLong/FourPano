{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","mtime":1537497574676},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537425210134},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LoadPreviewImage = LoadPreviewImage;\nexports.deleteAll = deleteAll;\nexports.deleteMarker = deleteMarker;\nexports.AddOldArrow = AddOldArrow;\nexports.AddNewArrow = AddNewArrow;\nexports.jumpSite = jumpSite;\nexports.AddMarkerMesh = AddMarkerMesh;\nexports.AddSmallVideo = AddSmallVideo;\nexports.InitialOrientation = InitialOrientation;\nexports.rotateByWallClick = rotateByWallClick;\nexports.JumpLookMarker = JumpLookMarker;\n\nvar _SWConstants = require('./SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWTool = require('./SWTool');\n\nvar _SWMarkerArrowModule = require('../module/marker/SWMarkerArrowModule');\n\nvar _SWMarkerArrowModule2 = _interopRequireDefault(_SWMarkerArrowModule);\n\nvar _SWMarkerSingleModule = require('../module/marker/SWMarkerSingleModule');\n\nvar _SWMarkerSingleModule2 = _interopRequireDefault(_SWMarkerSingleModule);\n\nvar _SWMarkerMoreModule = require('../module/marker/SWMarkerMoreModule');\n\nvar _SWMarkerMoreModule2 = _interopRequireDefault(_SWMarkerMoreModule);\n\nvar _SWMarkerVideoModule = require('../module/marker/SWMarkerVideoModule');\n\nvar _SWMarkerVideoModule2 = _interopRequireDefault(_SWMarkerVideoModule);\n\nvar _store = require('../../views/PC/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _action = require('../../views/PC/redux/action');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**加载完成之后调用 */\nfunction LoadPreviewImage() {\n\n    AddMarkerMesh();\n\n    var waitTime = setTimeout(function () {\n\n        if (constants.c_isWallClickRotateBoo) {\n\n            constants.c_isWallClickRotateBoo = false;\n\n            rotateByWallClick();\n        }\n\n        InitialOrientation();\n\n        AddSmallVideo();\n\n        clearTimeout(waitTime);\n    }, 500);\n}\n\n/**跳转时需要清除所有的东西 */\nfunction deleteAll() {\n\n    deleteMarker();\n\n    //清除箭头\n    constants.c_arrowArr.forEach(function (item) {\n\n        if (item) item.clearArrow();\n    });\n    constants.c_arrowArr.length = 0;\n\n    //清除墙面片\n    constants.sw_wallMesh.clear();\n\n    //隐藏探面\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\n\n    constants.sw_measure.clear();\n\n    constants.c_smallVideoArr.forEach(function (item) {\n\n        if (item) item.clearSmallVideo();\n    });\n    constants.c_smallVideoArr.length = 0;\n}\n\nfunction deleteMarker() {\n    //清理标注\n    constants.c_markerMeshArr.forEach(function (item) {\n\n        item.clear();\n    });\n    constants.c_markerMeshArr.length = 0;\n}\n\n/**\r\n * 添加老箭头数据\r\n * */\nfunction AddOldArrow() {\n    constants.c_AdjacentPanoInfoArr.forEach(function (obj) {\n\n        constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n    });\n\n    constants.sw_getService.getNewArrow();\n}\n\n/**\r\n * 添加新箭头数据\r\n * */\nfunction AddNewArrow() {\n\n    var boo = true;\n\n    if (constants.c_arrowArr.length == 0) {\n\n        boo = false;\n    }\n\n    constants.c_ArrowPanoInfoArr.forEach(function (obj) {\n\n        if (boo) {\n\n            constants.c_arrowArr.forEach(function (item) {\n\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\n\n                    item.updateLocation(obj);\n                }\n            });\n        } else {\n\n            constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n        }\n    });\n}\n\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\nfunction jumpSite(panoID) {\n\n    deleteAll();\n\n    constants.sw_getService.getPanoByID(panoID);\n}\n\n/**\r\n * 添加标注\r\n * */\nfunction AddMarkerMesh() {\n\n    constants.c_markerInfoArr.forEach(function (obj) {\n\n        if (obj.centerX != 0 && obj.centerY != 0) {\n\n            constants.c_markerMeshArr.push(new _SWMarkerSingleModule2.default(obj));\n        } else {\n\n            constants.c_markerMeshArr.push(new _SWMarkerMoreModule2.default(obj));\n        }\n\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\n\n            constants.c_JumpMarkerID = \"\";\n\n            JumpLookMarker(obj);\n        }\n    });\n}\n\n/**\r\n * 添加视频\r\n * */\nfunction AddSmallVideo() {\n\n    var tableValue = constants.c_allVideoTable.getValues();\n\n    var vboo = false;\n\n    constants.c_isDisplayFace = true;\n\n    tableValue.forEach(function (obj) {\n\n        if (obj.panoID == constants.c_StationInfo.panoID) {\n\n            vboo = true;\n\n            var details = JSON.parse(obj.details);\n\n            constants.c_smallVideoArr.push(new _SWMarkerVideoModule2.default(details, obj.panoID));\n\n            var yp = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(details.posX, details.posY, details.posZ));\n\n            (0, _SWTool.setCameraAngle)(yp.Yaw, yp.Pitch, true);\n\n            constants.c_isDisplayFace = details.openBox || false;\n        }\n    });\n\n    if (vboo) {\n\n        var store = (0, _store2.default)();\n\n        store.dispatch((0, _action.background_music_fun)({\n            bgMusicOff: false\n        }));\n    }\n};\n\n/**初始朝向 */\nfunction InitialOrientation() {\n\n    if (constants.c_panoObj.length == 0) {\n\n        constants.c_panoObj.push({\n            \"panoid\": \"G101-20180619000001\",\n            \"yaw\": 147.32,\n            \"pitch\": 2.9\n        });\n\n        constants.c_panoObj.push({\n            \"panoid\": \"A101-20180102000001\",\n            \"yaw\": 239.6,\n            \"pitch\": 3.05\n        });\n\n        constants.c_panoObj.push({\n            \"panoid\": \"C301-20180103000001\",\n            \"yaw\": 240.59,\n            \"pitch\": -2.14\n        });\n    }\n\n    constants.c_panoObj.forEach(function (obj, idx) {\n\n        if (obj.panoid == constants.c_StationInfo.panoID) {\n\n            (0, _SWTool.setCameraAngle)(obj.yaw, obj.pitch, true);\n        }\n    });\n}\n\n/**\r\n * 跳转之后看向某一个点\r\n * */\nfunction rotateByWallClick() {\n\n    var aa = constants.c_wallClickRotateV3.clone().sub(constants.c_StationInfo.point.clone());\n\n    var bb = aa.clone().applyMatrix4(constants.c_DS3ToOpenGLMx4);\n\n    var swvg = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(bb.z, -bb.y, bb.x));\n\n    (0, _SWTool.setCameraAngle)(swvg.Yaw, swvg.Pitch, true);\n};\n\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\nfunction JumpLookMarker(obj) {\n\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\n\n        (0, _SWTool.setCameraAngle)(obj.centerX, obj.centerY, true);\n    } else {\n\n        var yaw = [],\n            pitch = [];\n\n        obj.points.forEach(function (objs) {\n\n            yaw.push(parseFloat(objs.yaw));\n\n            pitch.push(parseFloat(objs.pitch));\n        });\n\n        var yawArr = yaw.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var pitchArr = pitch.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var num = yawArr[yawArr.length - 1];\n\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\n\n            num = 360 - yawArr[yawArr.length - 1];\n        }\n\n        var yy = yawArr[0] + (num - yawArr[0]) * 0.5;\n\n        var pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\n\n        (0, _SWTool.setCameraAngle)(yy, pp, true);\n    }\n}",null]}