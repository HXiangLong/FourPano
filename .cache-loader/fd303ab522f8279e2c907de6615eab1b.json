{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js??ref--5-0!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","mtime":1531703444508},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\.babelrc","mtime":1526554899270},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.AddOldArrow = AddOldArrow;\nexports.AddNewArrow = AddNewArrow;\nexports.deleteAllArrow = deleteAllArrow;\nexports.jumpSite = jumpSite;\nexports.deleteAll = deleteAll;\nexports.AddMarkerMesh = AddMarkerMesh;\nexports.JumpLookMarker = JumpLookMarker;\n\nvar _SWConstants = require('./SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWTool = require('./SWTool');\n\nvar _SWMarkerArrowModule = require('../module/marker/SWMarkerArrowModule');\n\nvar _SWMarkerArrowModule2 = _interopRequireDefault(_SWMarkerArrowModule);\n\nvar _SWMarkerSingleModule = require('../module/marker/SWMarkerSingleModule');\n\nvar _SWMarkerSingleModule2 = _interopRequireDefault(_SWMarkerSingleModule);\n\nvar _SWMarkerMoreModule = require('../module/marker/SWMarkerMoreModule');\n\nvar _SWMarkerMoreModule2 = _interopRequireDefault(_SWMarkerMoreModule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\r\n * 初始化实例对象\r\n */\n\n/**\r\n * 添加老箭头数据\r\n * */\nfunction AddOldArrow() {\n    constants.c_AdjacentPanoInfoArr.map(function (obj) {\n\n        constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n    });\n\n    constants.sw_getService.getNewArrow();\n}\n\n/**\r\n * 添加新箭头数据\r\n * */\nfunction AddNewArrow() {\n\n    var boo = true;\n\n    if (constants.c_arrowArr.length == 0) {\n\n        boo = false;\n    }\n\n    constants.c_ArrowPanoInfoArr.map(function (obj) {\n\n        if (boo) {\n\n            constants.c_arrowArr.map(function (item) {\n\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\n\n                    item.updateLocation(obj);\n                }\n            });\n        } else {\n\n            constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n        }\n    });\n}\n\n/**\r\n * 清除所有箭头\r\n * */\nfunction deleteAllArrow() {\n\n    constants.c_arrowArr.map(function (item) {\n\n        if (item) item.clearArrow();\n    });\n    constants.c_arrowArr.length = 0;\n}\n\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\nfunction jumpSite(panoID) {\n\n    deleteAll();\n\n    constants.sw_getService.getPanoByID(panoID);\n}\n\n/**跳转时需要清除所有的东西 */\nfunction deleteAll() {\n\n    deleteAllArrow();\n\n    constants.sw_wallMesh.clear();\n\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\n\n    constants.c_markerMeshArr.map(function (item) {\n\n        item.clear();\n    });\n\n    constants.sw_measure.clear();\n}\n\n/**\r\n * 添加标注\r\n * */\nfunction AddMarkerMesh() {\n\n    constants.c_markerInfoArr.map(function (obj) {\n\n        if (obj.centerX != 0 && obj.centerY != 0) {\n\n            constants.c_markerMeshArr.push(new _SWMarkerSingleModule2.default(obj));\n        } else {\n\n            constants.c_markerMeshArr.push(new _SWMarkerMoreModule2.default(obj));\n        }\n\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\n\n            constants.c_JumpMarkerID = \"\";\n\n            JumpLookMarker(obj);\n        }\n    });\n}\n\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\nfunction JumpLookMarker(obj) {\n\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\n\n        (0, _SWTool.setCameraAngle)(obj.centerX, obj.centerY);\n    } else {\n\n        var yaw = [],\n            pitch = [];\n\n        obj.points.map(function (objs) {\n\n            yaw.push(parseFloat(objs.yaw));\n\n            pitch.push(parseFloat(objs.pitch));\n        });\n\n        var yawArr = yaw.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var pitchArr = pitch.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var num = yawArr[yawArr.length - 1];\n\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\n\n            num = 360 - yawArr[yawArr.length - 1];\n        }\n\n        var yy = yawArr[0] + (num - yawArr[0]) * 0.5;\n\n        var pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\n\n        (0, _SWTool.setCameraAngle)(yy, pp);\n    }\n}",null]}