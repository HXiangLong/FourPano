{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxFaceModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxFaceModule.js","mtime":1545630428877},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar _SWTool = require('../../tool/SWTool');\n\nvar _SWBoxTilesModule = require('./SWBoxTilesModule');\n\nvar _SWBoxTilesModule2 = _interopRequireDefault(_SWBoxTilesModule);\n\nvar _SWHashTable = require('../../tool/SWHashTable');\n\nvar _SWHashTable2 = _interopRequireDefault(_SWHashTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//import SWBoxPreloadingImage from './SWBoxPreloadingImage';\n/**\r\n * 全景盒子面对象\r\n */\nvar SWBoxFaceModule = function () {\n        /**\r\n         * 构造函数\r\n         * @param {Number} no 面编号\r\n         * @param {THREE.Group} faceGroup 全景盒子对象\r\n         * @param {THREE.Group} texture 全景贴图\r\n         * @param {THREE.Group} path 图片链接的前半截地址\r\n         * @param {Function} callfun 加载完毕回调\r\n         */\n        function SWBoxFaceModule(no, faceGroup, texture, path, callfun) {\n                _classCallCheck(this, SWBoxFaceModule);\n\n                this.faceNo = no; //面编号\n\n                this.boxPath = path; //总路径\n\n                this.levelplaneTable = new _SWHashTable2.default(); //4等级面数组\n\n                this.levelThreeplaneArr = []; //3等级面数组\n\n                this.fourPoint = []; //面的四个顶点坐标\n\n\n                this.faceGroup = faceGroup; //全部盒子对象\n\n                // this.callFun = callfun;\n\n                this.geometry = new THREE.PlaneGeometry(_SWConstants.c_FaceDistance, _SWConstants.c_FaceDistance, 1, 1);\n\n                this.material = new THREE.MeshBasicMaterial({\n                        map: texture,\n                        depthTest: true\n                });\n\n                this.thumbnails = new THREE.Mesh(this.geometry, this.material);\n\n                this.thumbnails.name = \"\" + this.faceNo;\n\n                this.thumbnails.userData.depthlevel = 100;\n\n                this.faceGroup.add(this.thumbnails);\n\n                // this.loadTexture();\n\n                this.facePosition();\n\n                this.tiles_4_PointArr = this.faceFourVertices(4); //所有瓦片四个顶点坐标\n                this.tiles_8_PointArr = this.faceFourVertices(8); //所有瓦片四个顶点坐标\n\n                callfun();\n        }\n\n        /**\r\n         * 面位置及旋转\r\n         */\n\n\n        _createClass(SWBoxFaceModule, [{\n                key: 'facePosition',\n                value: function facePosition() {\n                        switch (this.faceNo) {\n                                case 0:\n                                        this.thumbnails.position.x = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(-90);\n                                        break;\n                                case 1:\n                                        this.thumbnails.position.z = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(180);\n                                        break;\n                                case 2:\n                                        this.thumbnails.position.x = -_SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(90);\n                                        break;\n                                case 3:\n                                        this.thumbnails.position.z = -_SWConstants.c_FaceDistance / 2;\n                                        break;\n                                case 4:\n                                        this.thumbnails.position.y = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.x = THREE.Math.degToRad(90);\n                                        this.thumbnails.rotation.z = THREE.Math.degToRad(180);\n                                        break;\n                                case 5:\n                                        this.thumbnails.position.y = -_SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.x = THREE.Math.degToRad(-90);\n                                        this.thumbnails.rotation.z = THREE.Math.degToRad(180);\n                                        break;\n                                default:\n                                        break;\n                        }\n                }\n\n                /**\r\n                 * 当前瓦片四个顶点世界坐标及所有小瓦片世界坐标\r\n                 * @param {int} tilesNum 每列数量\r\n                 */\n\n        }, {\n                key: 'faceFourVertices',\n                value: function faceFourVertices(tilesNum) {\n                        var fourPointV3 = [];\n                        var tilesPointArr = [];\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[0]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[1]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[2]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[3]));\n\n                        this.fourPoint = [(0, _SWTool.Vector3ToVP)(fourPointV3[0]), (0, _SWTool.Vector3ToVP)(fourPointV3[1]), (0, _SWTool.Vector3ToVP)(fourPointV3[2]), (0, _SWTool.Vector3ToVP)(fourPointV3[3])];\n\n                        var yawDis = -90 / tilesNum;\n                        var minYaw = this.fourPoint[0].Yaw;\n\n                        var minPitch = this.fourPoint[0].Pitch;\n                        var pitchDis = -(this.fourPoint[0].Pitch - this.fourPoint[this.fourPoint.length - 1].Pitch) / tilesNum;\n\n                        for (var y = 0; y < tilesNum; y++) {\n\n                                for (var x = 0; x < tilesNum; x++) {\n\n                                        var y1 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * x);\n                                        var p1 = minPitch + pitchDis * y;\n\n                                        var y2 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * (x + 1));\n                                        var p2 = minPitch + pitchDis * y;\n\n                                        var y3 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * x);\n                                        var p3 = minPitch + pitchDis * (y + 1);\n\n                                        var y4 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * (x + 1));\n                                        var p4 = minPitch + pitchDis * (y + 1);\n\n                                        tilesPointArr.push([[y1, p1], [y2, p2], [y3, p3], [y4, p4]]);\n                                }\n                        }\n                        return tilesPointArr;\n                }\n\n                /**矩阵计算世界坐标 */\n\n        }, {\n                key: 'faceMatrix4',\n                value: function faceMatrix4(v3) {\n                        var aa = v3.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.thumbnails.rotation));\n\n                        var v0 = aa.clone().add(this.thumbnails.position);\n\n                        var d = v0.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.faceGroup.rotation));\n\n                        var b = d.clone().applyMatrix4(this.faceGroup.matrixWorld);\n\n                        return b;\n                }\n\n                /**\r\n                 * 加载高清图\r\n                 */\n\n        }, {\n                key: 'loadTexture',\n                value: function loadTexture() {\n\n                        // let imageName = `sw_${this.faceNo}.jpg`;\n                        // new SWBoxPreloadingImage(c_StationInfo.panoID, 2, imageName, (texture) => {\n\n                        //     texture.mapping = THREE.UVMapping;\n\n                        //     texture.magFilter = THREE.LinearFilter;\n\n                        //     texture.minFilter = THREE.LinearFilter;\n\n                        //     this.thumbnails.material.map = texture;\n\n                        //     this.thumbnails.material.map.needsUpdate = true;\n\n\n                        this.createThreeTiles();\n                        // });\n                }\n\n                /**生成第三级瓦片 */\n\n        }, {\n                key: 'createThreeTiles',\n                value: function createThreeTiles() {\n\n                        var lineNum = 4;\n\n                        for (var y = 0; y < lineNum; y++) {\n\n                                for (var x = 0; x < lineNum; x++) {\n\n                                        var key = lineNum + '_' + y + '_' + x;\n\n                                        var tiles = new _SWBoxTilesModule2.default(this.faceNo, y + 1, x + 1, lineNum, 3, this.thumbnails, this.boxPath);\n\n                                        this.levelThreeplaneArr.push(tiles);\n                                }\n                        }\n                        this.callFun();\n                }\n\n                /**生成第四级瓦片 */\n\n        }, {\n                key: 'createTiles',\n                value: function createTiles(minYaw, maxYaw, minPitch, maxPitch) {\n                        var _this = this;\n\n                        var lineNum = 4;\n                        var level = 3;\n                        var tilesPointArr = this.tiles_4_PointArr;\n\n                        if (_SWConstants.camera.fov < (_SWConstants.c_Maxfov + _SWConstants.c_Minfov) * 0.5 && _SWConstants.c_currentState != _SWConstants.c_currentStateEnum.phoneStatus) {\n                                //TODO 手机版只有第三级\n                                lineNum = 8;\n                                level = 4;\n                                tilesPointArr = this.tiles_8_PointArr;\n                        }\n\n                        var _loop = function _loop(y) {\n                                var _loop2 = function _loop2(x) {\n\n                                        var pointArr = tilesPointArr[y * lineNum + x];\n\n                                        pointArr.forEach(function (item) {\n\n                                                var boo = false;\n\n                                                if (maxYaw - minYaw > 120) {\n                                                        //圆的0和360是同一个点\n\n                                                        if ((0 < item[0] && item[0] < minYaw || maxYaw < item[0] && item[0] < 360) && minPitch < item[1] && item[1] < maxPitch) {\n                                                                boo = true;\n                                                        }\n                                                } else {\n\n                                                        if (minYaw < item[0] && item[0] < maxYaw && minPitch < item[1] && item[1] < maxPitch) {\n                                                                boo = true;\n                                                        }\n                                                }\n\n                                                if (boo) {\n                                                        var key = level + '_' + y + '_' + x;\n\n                                                        if (!_this.levelplaneTable.containsKey(key)) {\n\n                                                                var tiles = new _SWBoxTilesModule2.default(_this.faceNo, y + 1, x + 1, lineNum, level, _this.thumbnails, _this.boxPath);\n\n                                                                _this.levelplaneTable.add(key, tiles);\n                                                        }\n                                                }\n                                        });\n                                };\n\n                                for (var x = 0; x < lineNum; x++) {\n                                        _loop2(x);\n                                }\n                        };\n\n                        for (var y = 0; y < lineNum; y++) {\n                                _loop(y);\n                        }\n                }\n\n                /**\r\n                 * 清除瓦片及自身\r\n                 */\n\n        }, {\n                key: 'clearTiles',\n                value: function clearTiles() {\n                        var boo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n                        //TODO 不需要提前清除面片，代码先保留\n                        // if (camera.fov > (c_Maxfov + c_Minfov) * 0.5 && c_currentState != c_currentStateEnum.phoneStatus) {\n                        //     lineNum = 8;\n                        //     level = 4;\n\n                        //     for (let y = 0; y < lineNum; y++) {\n\n                        //         for (let x = 0; x < lineNum; x++) {\n\n                        //             let key = `${level}_${y}_${x}`;\n\n                        //             if (this.levelplaneTable.containsKey(key)) {\n\n                        //                 let tile = this.levelplaneTable.getValue(key);\n\n                        //                 tile.clearTile();\n                        //             }\n                        //         }\n                        //     }\n                        // }\n\n                        if (boo) {\n\n                                var tilesArr = this.levelplaneTable.getValues();\n\n                                tilesArr.forEach(function (tile) {\n\n                                        tile.clearTile();\n                                });\n\n                                this.levelplaneTable.clear();\n\n                                (0, _SWTool.disposeNode)(this.thumbnails, true);\n                        }\n                }\n        }]);\n\n        return SWBoxFaceModule;\n}();\n\nexports.default = SWBoxFaceModule;",null]}