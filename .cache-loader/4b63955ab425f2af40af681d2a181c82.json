{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxFaceModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxFaceModule.js","mtime":1545630428877},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar _SWTool = require('../../tool/SWTool');\n\nvar _SWBoxTilesModule = require('./SWBoxTilesModule');\n\nvar _SWBoxTilesModule2 = _interopRequireDefault(_SWBoxTilesModule);\n\nvar _SWHashTable = require('../../tool/SWHashTable');\n\nvar _SWHashTable2 = _interopRequireDefault(_SWHashTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//import SWBoxPreloadingImage from './SWBoxPreloadingImage';\n/**\r\n * 全景盒子面对象\r\n */\nvar SWBoxFaceModule = function () {\n        /**\r\n         * 构造函数\r\n         * @param {Number} no 面编号\r\n         * @param {THREE.Group} faceGroup 全景盒子对象\r\n         * @param {THREE.Group} texture 全景贴图\r\n         * @param {THREE.Group} path 图片链接的前半截地址\r\n         * @param {Function} callfun 加载完毕回调\r\n         */\n        function SWBoxFaceModule(no, faceGroup, texture, path, callfun) {\n                _classCallCheck(this, SWBoxFaceModule);\n\n                this.faceNo = no; //面编号\n\n                this.boxPath = path; //总路径\n\n                this.levelplaneTable = new _SWHashTable2.default(); //4等级面数组\n\n                this.levelThreeplaneArr = []; //3等级面数组\n\n                this.fourPoint = []; //面的四个顶点坐标\n\n\n                this.faceGroup = faceGroup; //全部盒子对象\n\n                // this.callFun = callfun;\n\n                this.geometry = new THREE.PlaneGeometry(_SWConstants.c_FaceDistance, _SWConstants.c_FaceDistance, 1, 1);\n\n                this.material = new THREE.MeshBasicMaterial({\n                        map: texture,\n                        depthTest: true\n                });\n\n                this.thumbnails = new THREE.Mesh(this.geometry, this.material);\n\n                this.thumbnails.name = \"\" + this.faceNo;\n\n                this.thumbnails.userData.depthlevel = 100;\n\n                this.faceGroup.add(this.thumbnails);\n\n                // this.loadTexture();\n\n                this.facePosition();\n\n                this.tiles_4_PointArr = this.faceFourVertices(4); //所有瓦片四个顶点坐标\n                this.tiles_8_PointArr = this.faceFourVertices(8); //所有瓦片四个顶点坐标\n\n                callfun();\n        }\n\n        /**\r\n         * 面位置及旋转\r\n         */\n\n\n        _createClass(SWBoxFaceModule, [{\n                key: 'facePosition',\n                value: function facePosition() {\n                        switch (this.faceNo) {\n                                case 0:\n                                        this.thumbnails.position.x = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(-90);\n                                        break;\n                                case 1:\n                                        this.thumbnails.position.z = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(180);\n                                        break;\n                                case 2:\n                                        this.thumbnails.position.x = -_SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.y = THREE.Math.degToRad(90);\n                                        break;\n                                case 3:\n                                        this.thumbnails.position.z = -_SWConstants.c_FaceDistance / 2;\n                                        break;\n                                case 4:\n                                        this.thumbnails.position.y = _SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.x = THREE.Math.degToRad(90);\n                                        this.thumbnails.rotation.z = THREE.Math.degToRad(180);\n                                        break;\n                                case 5:\n                                        this.thumbnails.position.y = -_SWConstants.c_FaceDistance / 2;\n                                        this.thumbnails.rotation.x = THREE.Math.degToRad(-90);\n                                        this.thumbnails.rotation.z = THREE.Math.degToRad(180);\n                                        break;\n                                default:\n                                        break;\n                        }\n                }\n\n                /**\r\n                 * 当前瓦片四个顶点世界坐标及所有小瓦片世界坐标\r\n                 * @param {int} tilesNum 每列数量\r\n                 */\n\n        }, {\n                key: 'faceFourVertices',\n                value: function faceFourVertices(tilesNum) {\n                        var fourPointV3 = [];\n                        var tilesPointArr = [];\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[0]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[1]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[2]));\n\n                        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[3]));\n\n                        this.fourPoint = [(0, _SWTool.Vector3ToVP)(fourPointV3[0]), (0, _SWTool.Vector3ToVP)(fourPointV3[1]), (0, _SWTool.Vector3ToVP)(fourPointV3[2]), (0, _SWTool.Vector3ToVP)(fourPointV3[3])];\n\n                        var yawDis = -90 / tilesNum;\n                        var minYaw = this.fourPoint[0].Yaw;\n\n                        var minPitch = this.fourPoint[0].Pitch;\n                        var pitchDis = -(this.fourPoint[0].Pitch - this.fourPoint[this.fourPoint.length - 1].Pitch) / tilesNum;\n\n                        for (var y = 0; y < tilesNum; y++) {\n\n                                for (var x = 0; x < tilesNum; x++) {\n\n                                        var y1 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * x);\n                                        var p1 = minPitch + pitchDis * y;\n\n                                        var y2 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * (x + 1));\n                                        var p2 = minPitch + pitchDis * y;\n\n                                        var y3 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * x);\n                                        var p3 = minPitch + pitchDis * (y + 1);\n\n                                        var y4 = (0, _SWTool.getNumberMax360)(minYaw + yawDis * (x + 1));\n                                        var p4 = minPitch + pitchDis * (y + 1);\n\n                                        tilesPointArr.push([[y1, p1], [y2, p2], [y3, p3], [y4, p4]]);\n                                }\n                        }\n                        return tilesPointArr;\n                }\n\n                /**矩阵计算世界坐标 */\n\n        }, {\n                key: 'faceMatrix4',\n                value: function faceMatrix4(v3) {\n                        var aa = v3.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.thumbnails.rotation));\n\n                        var v0 = aa.clone().add(this.thumbnails.position);\n\n                        var d = v0.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.faceGroup.rotation));\n\n                        var b = d.clone().applyMatrix4(this.faceGroup.matrixWorld);\n\n                        return b;\n                }\n\n                /**\r\n                 * 加载高清图\r\n                 */\n\n        }, {\n                key: 'loadTexture',\n                value: function loadTexture() {\n\n                        // let imageName = `sw_${this.faceNo}.jpg`;\n                        // new SWBoxPreloadingImage(c_StationInfo.panoID, 2, imageName, (texture) => {\n\n                        //     texture.mapping = THREE.UVMapping;\n\n                        //     texture.magFilter = THREE.LinearFilter;\n\n                        //     texture.minFilter = THREE.LinearFilter;\n\n                        //     this.thumbnails.material.map = texture;\n\n                        //     this.thumbnails.material.map.needsUpdate = true;\n\n\n                        this.createThreeTiles();\n                        // });\n                }\n\n                /**生成第三级瓦片 */\n\n        }, {\n                key: 'createThreeTiles',\n                value: function createThreeTiles() {\n\n                        var lineNum = 4;\n\n                        for (var y = 0; y < lineNum; y++) {\n\n                                for (var x = 0; x < lineNum; x++) {\n\n                                        var key = lineNum + '_' + y + '_' + x;\n\n                                        var tiles = new _SWBoxTilesModule2.default(this.faceNo, y + 1, x + 1, lineNum, 3, this.thumbnails, this.boxPath);\n\n                                        this.levelThreeplaneArr.push(tiles);\n                                }\n                        }\n                        this.callFun();\n                }\n\n                /**生成第四级瓦片 */\n\n        }, {\n                key: 'createTiles',\n                value: function createTiles(minYaw, maxYaw, minPitch, maxPitch) {\n                        var _this = this;\n\n                        var lineNum = 4;\n                        var level = 3;\n                        var tilesPointArr = this.tiles_4_PointArr;\n\n                        if (_SWConstants.camera.fov < (_SWConstants.c_Maxfov + _SWConstants.c_Minfov) * 0.5 && _SWConstants.c_currentState != _SWConstants.c_currentStateEnum.phoneStatus) {\n                                //TODO 手机版只有第三级\n                                lineNum = 8;\n                                level = 4;\n                                tilesPointArr = this.tiles_8_PointArr;\n                        }\n\n                        var _loop = function _loop(y) {\n                                var _loop2 = function _loop2(x) {\n\n                                        var pointArr = tilesPointArr[y * lineNum + x];\n\n                                        pointArr.forEach(function (item) {\n\n                                                var boo = false;\n\n                                                if (maxYaw - minYaw > 120) {\n                                                        //圆的0和360是同一个点\n\n                                                        if ((0 < item[0] && item[0] < minYaw || maxYaw < item[0] && item[0] < 360) && minPitch < item[1] && item[1] < maxPitch) {\n                                                                boo = true;\n                                                        }\n                                                } else {\n\n                                                        if (minYaw < item[0] && item[0] < maxYaw && minPitch < item[1] && item[1] < maxPitch) {\n                                                                boo = true;\n                                                        }\n                                                }\n\n                                                if (boo) {\n                                                        var key = level + '_' + y + '_' + x;\n\n                                                        if (!_this.levelplaneTable.containsKey(key)) {\n\n                                                                var tiles = new _SWBoxTilesModule2.default(_this.faceNo, y + 1, x + 1, lineNum, level, _this.thumbnails, _this.boxPath);\n\n                                                                _this.levelplaneTable.add(key, tiles);\n                                                        }\n                                                }\n                                        });\n                                };\n\n                                for (var x = 0; x < lineNum; x++) {\n                                        _loop2(x);\n                                }\n                        };\n\n                        for (var y = 0; y < lineNum; y++) {\n                                _loop(y);\n                        }\n                }\n\n                /**\r\n                 * 清除瓦片及自身\r\n                 */\n\n        }, {\n                key: 'clearTiles',\n                value: function clearTiles() {\n                        var boo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n                        //TODO 不需要提前清除面片，代码先保留\n                        // if (camera.fov > (c_Maxfov + c_Minfov) * 0.5 && c_currentState != c_currentStateEnum.phoneStatus) {\n                        //     lineNum = 8;\n                        //     level = 4;\n\n                        //     for (let y = 0; y < lineNum; y++) {\n\n                        //         for (let x = 0; x < lineNum; x++) {\n\n                        //             let key = `${level}_${y}_${x}`;\n\n                        //             if (this.levelplaneTable.containsKey(key)) {\n\n                        //                 let tile = this.levelplaneTable.getValue(key);\n\n                        //                 tile.clearTile();\n                        //             }\n                        //         }\n                        //     }\n                        // }\n\n                        if (boo) {\n\n                                var tilesArr = this.levelplaneTable.getValues();\n\n                                tilesArr.forEach(function (tile) {\n\n                                        tile.clearTile();\n                                });\n\n                                this.levelplaneTable.clear();\n\n                                (0, _SWTool.disposeNode)(this.thumbnails, true);\n                        }\n                }\n        }]);\n\n        return SWBoxFaceModule;\n}();\n\nexports.default = SWBoxFaceModule;",{"version":3,"sources":["app\\src\\module\\panoBox\\SWBoxFaceModule.js"],"names":["SWBoxFaceModule","no","faceGroup","texture","path","callfun","faceNo","boxPath","levelplaneTable","HashTable","levelThreeplaneArr","fourPoint","geometry","THREE","PlaneGeometry","c_FaceDistance","material","MeshBasicMaterial","map","depthTest","thumbnails","Mesh","name","userData","depthlevel","add","facePosition","tiles_4_PointArr","faceFourVertices","tiles_8_PointArr","position","x","rotation","y","Math","degToRad","z","tilesNum","fourPointV3","tilesPointArr","push","faceMatrix4","vertices","yawDis","minYaw","Yaw","minPitch","Pitch","pitchDis","length","y1","p1","y2","p2","y3","p3","y4","p4","v3","aa","clone","applyMatrix4","Matrix4","makeRotationFromEuler","v0","d","b","matrixWorld","createThreeTiles","lineNum","key","tiles","SWBoxTilesModule","callFun","maxYaw","maxPitch","level","camera","fov","c_Maxfov","c_Minfov","c_currentState","c_currentStateEnum","phoneStatus","pointArr","forEach","item","boo","containsKey","tilesArr","getValues","tile","clearTile","clear"],"mappings":"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","file":"SWBoxFaceModule.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport {\r\n    c_FaceDistance,\r\n    camera,\r\n    c_Minfov,\r\n    c_Maxfov,\r\n    c_currentState,\r\n    c_currentStateEnum\r\n} from '../../tool/SWConstants'\r\nimport {\r\n    disposeNode,\r\n    Vector3ToVP,\r\n    getNumberMax360\r\n} from '../../tool/SWTool'\r\nimport SWBoxTilesModule from './SWBoxTilesModule'\r\nimport HashTable from '../../tool/SWHashTable';\r\n//import SWBoxPreloadingImage from './SWBoxPreloadingImage';\r\n/**\r\n * 全景盒子面对象\r\n */\r\nclass SWBoxFaceModule {\r\n    /**\r\n     * 构造函数\r\n     * @param {Number} no 面编号\r\n     * @param {THREE.Group} faceGroup 全景盒子对象\r\n     * @param {THREE.Group} texture 全景贴图\r\n     * @param {THREE.Group} path 图片链接的前半截地址\r\n     * @param {Function} callfun 加载完毕回调\r\n     */\r\n    constructor(no, faceGroup, texture, path, callfun) {\r\n\r\n        this.faceNo = no; //面编号\r\n\r\n        this.boxPath = path; //总路径\r\n\r\n        this.levelplaneTable = new HashTable(); //4等级面数组\r\n\r\n        this.levelThreeplaneArr = []; //3等级面数组\r\n\r\n        this.fourPoint = []; //面的四个顶点坐标\r\n\r\n\r\n        this.faceGroup = faceGroup; //全部盒子对象\r\n\r\n        // this.callFun = callfun;\r\n\r\n        this.geometry = new THREE.PlaneGeometry(c_FaceDistance, c_FaceDistance, 1, 1);\r\n\r\n        this.material = new THREE.MeshBasicMaterial({\r\n            map: texture,\r\n            depthTest: true\r\n        });\r\n\r\n        this.thumbnails = new THREE.Mesh(this.geometry, this.material);\r\n\r\n        this.thumbnails.name = \"\" + this.faceNo;\r\n\r\n        this.thumbnails.userData.depthlevel = 100;\r\n\r\n        this.faceGroup.add(this.thumbnails);\r\n\r\n        // this.loadTexture();\r\n\r\n        this.facePosition();\r\n\r\n        this.tiles_4_PointArr = this.faceFourVertices(4); //所有瓦片四个顶点坐标\r\n        this.tiles_8_PointArr = this.faceFourVertices(8); //所有瓦片四个顶点坐标\r\n\r\n        callfun();\r\n    }\r\n\r\n    /**\r\n     * 面位置及旋转\r\n     */\r\n    facePosition() {\r\n        switch (this.faceNo) {\r\n            case 0:\r\n                this.thumbnails.position.x = c_FaceDistance / 2;\r\n                this.thumbnails.rotation.y = THREE.Math.degToRad(-90);\r\n                break;\r\n            case 1:\r\n                this.thumbnails.position.z = c_FaceDistance / 2;\r\n                this.thumbnails.rotation.y = THREE.Math.degToRad(180);\r\n                break;\r\n            case 2:\r\n                this.thumbnails.position.x = -c_FaceDistance / 2;\r\n                this.thumbnails.rotation.y = THREE.Math.degToRad(90);\r\n                break;\r\n            case 3:\r\n                this.thumbnails.position.z = -c_FaceDistance / 2;\r\n                break;\r\n            case 4:\r\n                this.thumbnails.position.y = c_FaceDistance / 2;\r\n                this.thumbnails.rotation.x = THREE.Math.degToRad(90);\r\n                this.thumbnails.rotation.z = THREE.Math.degToRad(180);\r\n                break;\r\n            case 5:\r\n                this.thumbnails.position.y = -c_FaceDistance / 2;\r\n                this.thumbnails.rotation.x = THREE.Math.degToRad(-90);\r\n                this.thumbnails.rotation.z = THREE.Math.degToRad(180);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 当前瓦片四个顶点世界坐标及所有小瓦片世界坐标\r\n     * @param {int} tilesNum 每列数量\r\n     */\r\n    faceFourVertices(tilesNum) {\r\n        let fourPointV3 = [];\r\n        let tilesPointArr = [];\r\n\r\n        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[0]));\r\n\r\n        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[1]));\r\n\r\n        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[2]));\r\n\r\n        fourPointV3.push(this.faceMatrix4(this.thumbnails.geometry.vertices[3]));\r\n\r\n        this.fourPoint = [Vector3ToVP(fourPointV3[0]),\r\n            Vector3ToVP(fourPointV3[1]),\r\n            Vector3ToVP(fourPointV3[2]),\r\n            Vector3ToVP(fourPointV3[3])\r\n        ];\r\n\r\n        let yawDis = -90 / tilesNum;\r\n        let minYaw = this.fourPoint[0].Yaw;\r\n\r\n        let minPitch = this.fourPoint[0].Pitch;\r\n        let pitchDis = -(this.fourPoint[0].Pitch - this.fourPoint[this.fourPoint.length - 1].Pitch) / tilesNum;\r\n\r\n        for (let y = 0; y < tilesNum; y++) {\r\n\r\n            for (let x = 0; x < tilesNum; x++) {\r\n\r\n                let y1 = getNumberMax360(minYaw + yawDis * x);\r\n                let p1 = minPitch + pitchDis * y;\r\n\r\n                let y2 = getNumberMax360(minYaw + yawDis * (x + 1));\r\n                let p2 = minPitch + pitchDis * y;\r\n\r\n                let y3 = getNumberMax360(minYaw + yawDis * x);\r\n                let p3 = minPitch + pitchDis * (y + 1);\r\n\r\n                let y4 = getNumberMax360(minYaw + yawDis * (x + 1));\r\n                let p4 = minPitch + pitchDis * (y + 1);\r\n\r\n                tilesPointArr.push([\r\n                    [y1, p1],\r\n                    [y2, p2],\r\n                    [y3, p3],\r\n                    [y4, p4]\r\n                ]);\r\n            }\r\n        }\r\n        return tilesPointArr;\r\n    }\r\n\r\n    /**矩阵计算世界坐标 */\r\n    faceMatrix4(v3) {\r\n        let aa = v3.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.thumbnails.rotation));\r\n\r\n        let v0 = aa.clone().add(this.thumbnails.position);\r\n\r\n        let d = v0.clone().applyMatrix4(new THREE.Matrix4().makeRotationFromEuler(this.faceGroup.rotation));\r\n\r\n        let b = d.clone().applyMatrix4(this.faceGroup.matrixWorld);\r\n\r\n        return b;\r\n    }\r\n\r\n    /**\r\n     * 加载高清图\r\n     */\r\n    loadTexture() {\r\n\r\n        // let imageName = `sw_${this.faceNo}.jpg`;\r\n        // new SWBoxPreloadingImage(c_StationInfo.panoID, 2, imageName, (texture) => {\r\n\r\n        //     texture.mapping = THREE.UVMapping;\r\n\r\n        //     texture.magFilter = THREE.LinearFilter;\r\n\r\n        //     texture.minFilter = THREE.LinearFilter;\r\n\r\n        //     this.thumbnails.material.map = texture;\r\n\r\n        //     this.thumbnails.material.map.needsUpdate = true;\r\n\r\n\r\n\r\n        this.createThreeTiles();\r\n        // });\r\n    }\r\n\r\n    /**生成第三级瓦片 */\r\n    createThreeTiles() {\r\n\r\n        let lineNum = 4;\r\n\r\n        for (let y = 0; y < lineNum; y++) {\r\n\r\n            for (let x = 0; x < lineNum; x++) {\r\n\r\n                let key = `${lineNum}_${y}_${x}`;\r\n\r\n                let tiles = new SWBoxTilesModule(this.faceNo, y + 1, x + 1, lineNum, 3, this.thumbnails, this.boxPath);\r\n\r\n                this.levelThreeplaneArr.push(tiles);\r\n            }\r\n        }\r\n        this.callFun();\r\n    }\r\n\r\n    /**生成第四级瓦片 */\r\n    createTiles(minYaw, maxYaw, minPitch, maxPitch) {\r\n\r\n        let lineNum = 4;\r\n        let level = 3;\r\n        let tilesPointArr = this.tiles_4_PointArr;\r\n\r\n        if (camera.fov < (c_Maxfov + c_Minfov) * 0.5 && c_currentState != c_currentStateEnum.phoneStatus) {//TODO 手机版只有第三级\r\n            lineNum = 8;\r\n            level = 4;\r\n            tilesPointArr = this.tiles_8_PointArr;\r\n        }\r\n\r\n        for (let y = 0; y < lineNum; y++) {\r\n\r\n            for (let x = 0; x < lineNum; x++) {\r\n\r\n                let pointArr = tilesPointArr[y * lineNum + x];\r\n\r\n                pointArr.forEach((item) => {\r\n\r\n                    let boo = false;\r\n\r\n                    if ((maxYaw - minYaw) > 120) { //圆的0和360是同一个点\r\n\r\n                        if (((0 < item[0] && item[0] < minYaw) || (maxYaw < item[0] && item[0] < 360)) && (minPitch < item[1] && item[1] < maxPitch)) {\r\n                            boo = true;\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (minYaw < item[0] && item[0] < maxYaw && minPitch < item[1] && item[1] < maxPitch) {\r\n                            boo = true;\r\n                        }\r\n                    }\r\n\r\n                    if (boo) {\r\n                        let key = `${level}_${y}_${x}`;\r\n\r\n                        if (!this.levelplaneTable.containsKey(key)) {\r\n\r\n                            let tiles = new SWBoxTilesModule(this.faceNo, y + 1, x + 1, lineNum, level, this.thumbnails, this.boxPath);\r\n\r\n                            this.levelplaneTable.add(key, tiles);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除瓦片及自身\r\n     */\r\n    clearTiles(boo = true) {\r\n        //TODO 不需要提前清除面片，代码先保留\r\n        // if (camera.fov > (c_Maxfov + c_Minfov) * 0.5 && c_currentState != c_currentStateEnum.phoneStatus) {\r\n        //     lineNum = 8;\r\n        //     level = 4;\r\n\r\n        //     for (let y = 0; y < lineNum; y++) {\r\n\r\n        //         for (let x = 0; x < lineNum; x++) {\r\n\r\n        //             let key = `${level}_${y}_${x}`;\r\n\r\n        //             if (this.levelplaneTable.containsKey(key)) {\r\n\r\n        //                 let tile = this.levelplaneTable.getValue(key);\r\n\r\n        //                 tile.clearTile();\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        if (boo) {\r\n\r\n            let tilesArr = this.levelplaneTable.getValues();\r\n\r\n            tilesArr.forEach((tile) => {\r\n\r\n                tile.clearTile();\r\n\r\n            });\r\n\r\n            this.levelplaneTable.clear();\r\n\r\n            disposeNode(this.thumbnails, true);\r\n        }\r\n    }\r\n}\r\n\r\nexport default SWBoxFaceModule;"]}]}