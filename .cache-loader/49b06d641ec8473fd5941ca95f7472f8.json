{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTool.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTool.js","mtime":1536825491031},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getSceneToWorld = getSceneToWorld;\nexports.getWorldToScene = getWorldToScene;\nexports.Vector3ToVP = Vector3ToVP;\nexports.VPToVector3 = VPToVector3;\nexports.YPRToVector3 = YPRToVector3;\nexports.getNumberMax360 = getNumberMax360;\nexports.getDistance = getDistance;\nexports.getHfov = getHfov;\nexports.getWfov = getWfov;\nexports.getFaceTileMatrixWH = getFaceTileMatrixWH;\nexports.getRandomColor = getRandomColor;\nexports.getWallProbeSurfaceAngle = getWallProbeSurfaceAngle;\nexports.getProbeSurfaceDistance = getProbeSurfaceDistance;\nexports.getPanoRealPoint = getPanoRealPoint;\nexports.getWallRealPoint = getWallRealPoint;\nexports.getJudgeOrZoom = getJudgeOrZoom;\nexports.getArrowsAngle = getArrowsAngle;\nexports.disposeNode = disposeNode;\nexports.getFullScreen = getFullScreen;\nexports.TextDiv = TextDiv;\nexports.delectTextDiv = delectTextDiv;\nexports.getFont = getFont;\nexports.setCameraAngle = setCameraAngle;\n\nvar _SWConstants = require('./SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWViewGesture = require('./SWViewGesture');\n\nvar _SWViewGesture2 = _interopRequireDefault(_SWViewGesture);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/* global THREE,$*/\n\n/**所有共用方法 */\n\nvar TWEEN = require('@tweenjs/tween.js');\n\n/**\r\n * 屏幕坐标转世界坐标\r\n * @param {number} dx 鼠标X坐标\r\n * @param {number} dy 鼠标Y坐标\r\n */\nfunction getSceneToWorld(dx, dy) {\n\n    var vector = new THREE.Vector3();\n\n    var raycaster = new THREE.Raycaster();\n\n    var div = new THREE.Vector3(0, 0, 0);\n\n    vector.set(dx / window.innerWidth * 2 - 1, -(dy / window.innerHeight) * 2 + 1, 0.5); // z = 0.5 important!\n\n    vector.unproject(constants.camera);\n\n    raycaster.set(constants.camera.position, vector.sub(constants.camera.position).normalize());\n\n    var intersects = raycaster.intersectObjects(constants.scene.children, true);\n\n    if (intersects) {\n        div = intersects[0].point.clone();\n    }\n    return div;\n}\n\n/**\r\n * 世界坐标转屏幕坐标\r\n * @param {THREE.Vector3} v3 世界坐标\r\n */\nfunction getWorldToScene(v3) {\n\n    var vector = v3.clone();\n\n    var windowWidth = window.innerWidth;\n\n    var minWidth = 1280;\n\n    if (windowWidth < minWidth) {\n\n        windowWidth = minWidth;\n    }\n\n    var widthHalf = windowWidth / 2;\n\n    var heightHalf = window.innerHeight / 2;\n\n    vector.project(constants.camera);\n\n    vector.x = vector.x * widthHalf + widthHalf;\n\n    vector.y = -(vector.y * heightHalf) + heightHalf;\n\n    return vector;\n}\n\n/**\r\n * 三维坐标转视点坐标\r\n * @param {THREE.Vector3} v3 \r\n */\nfunction Vector3ToVP(v3) {\n    var yaw = Math.atan2(v3.x, v3.z);\n\n    var pitch = Math.atan2(v3.y, v3.x / Math.sin(yaw));\n\n    yaw = THREE.Math.radToDeg(yaw);\n\n    if (yaw < 0) {\n\n        yaw = 360 + yaw;\n    }\n    yaw = (yaw + 90) % 360;\n\n    var swvg = new _SWViewGesture2.default(yaw, THREE.Math.radToDeg(pitch), 0);\n\n    return swvg;\n}\n\n/**\r\n * 视点转三维坐标,P是从球面和Z轴的交点绕Y轴旋转theta，\r\n * 然后在Y轴和其本身组成的平面上绕其过原点的法向量旋转phi得到，那么点P的坐标如下:\r\n * x = r*cos(phi)*sin(theta);\r\n * y = r*sin(phi);\r\n * z = r*cos(phi)*cos(theta);\r\n * @param {SWViewGesture} vp 球面坐标 yaw,pitch\r\n */\nfunction VPToVector3(vp) {\n    var vec = new THREE.Vector3(0, 0, 0);\n\n    vec.y = Math.sin(THREE.Math.degToRad(vp.Pitch)) * constants.c_FaceDistance * 0.5;\n\n    var m = Math.cos(THREE.Math.degToRad(vp.Pitch)) * constants.c_FaceDistance * 0.5;\n\n    vec.x = Math.sin(THREE.Math.degToRad(vp.Yaw - 90)) * m;\n\n    vec.z = Math.cos(THREE.Math.degToRad(vp.Yaw - 90)) * m;\n\n    return vec;\n}\n\n/**\r\n * 相机看向球面坐标转三维坐标\r\n * @param {Number} yaw 经度\r\n * @param {Number} pitch 纬度\r\n */\nfunction YPRToVector3(yaw, pitch) {\n\n    var vec = new THREE.Vector3(0, 0, 0);\n\n    vec.y = Math.sin(THREE.Math.degToRad(pitch)) * constants.c_FaceDistance * 0.5;\n\n    var m = Math.cos(THREE.Math.degToRad(pitch)) * constants.c_FaceDistance * 0.5;\n\n    vec.x = Math.sin(THREE.Math.degToRad(yaw - 90)) * m;\n\n    vec.z = Math.cos(THREE.Math.degToRad(yaw - 90)) * m;\n\n    return vec;\n}\n\n/**\r\n * 让数值在0~360之间\r\n * @param {number} n \r\n */\nfunction getNumberMax360(n) {\n\n    n = n % 360;\n\n    if (n < 0) {\n\n        n = 360 + n;\n    }\n    return n;\n}\n\n/**\r\n * 两点距离\r\n * @param {number} x1 \r\n * @param {number} y1 \r\n * @param {number} x2 \r\n * @param {number} y2 \r\n */\nfunction getDistance(x1, y1, x2, y2) {\n\n    var xx = x2 - x1;\n\n    var yy = y2 - y1;\n\n    return Math.pow(xx * xx + yy * yy, 0.5);\n}\n\n/**\r\n * 通过水平fov获得垂直fov\r\n * @param {number} wfov \r\n * @param {number} aspect \r\n */\nfunction getHfov(wfov, aspect) {\n\n    return THREE.Math.radToDeg(Math.atan(Math.tan(THREE.Math.degToRad(wfov) / 2) / aspect) * 2);\n}\n\n/**\r\n * 通过垂直fov获得水平fov\r\n * @param {number} hfov \r\n * @param {number} aspect \r\n */\nfunction getWfov(hfov, aspect) {\n\n    return THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(hfov) / 2) * aspect));\n}\n\n/**\r\n * 获取当前面当前放大值瓦片WH数\r\n * @param {number} lzoom \r\n */\nfunction getFaceTileMatrixWH(lzoom) {\n\n    var wh = new THREE.Vector3();\n\n    wh.x = wh.y = Math.pow(2, lzoom);\n\n    return wh;\n}\n\n/**\r\n * 获取随机颜色值\r\n * */\nfunction getRandomColor() {\n\n    return '#' + (Math.random() * 0xffffff << 0).toString(16);\n}\n\n/**\r\n * 墙面探面角度值\r\n * @param {THREE.Object} obj \r\n */\nfunction getWallProbeSurfaceAngle(obj) {\n\n    var normal = obj.face.normal.clone();\n\n    var vv = new THREE.Vector3(0, 0, 1);\n\n    var angle = THREE.Math.radToDeg(vv.angleTo(normal));\n\n    var tan = vv.clone().cross(normal).dot(new THREE.Vector3(0, 1, 0));\n\n    if (tan > 0) {\n\n        angle = 360 - angle;\n    }\n\n    return angle;\n}\n\n/**\r\n * 获取显示的距离\r\n * @param {THREE.Object} obj \r\n */\nfunction getProbeSurfaceDistance(obj) {\n\n    return Math.abs(1.5 * obj.distance / obj.point.y);\n}\n\n/**\r\n * 获取现实中的坐标\r\n * @param {THREE.Object} obj \r\n * @param {number} rph \r\n */\nfunction getPanoRealPoint(obj, rph) {\n\n    var v = Math.asin(obj.point.y / obj.distance); //垂直角度\n\n    var h = Math.atan2(obj.point.z, obj.point.x) - THREE.Math.degToRad(90); //水平角度\n\n    var rp = Math.abs(rph / Math.tan(v));\n\n    var x = rp * Math.cos(h);\n\n    var z = -rp * Math.sin(h);\n\n    var y = rph;\n\n    var v3 = new THREE.Vector3(x, y, z).applyMatrix4(constants.c_OpenGLToDS3Mx4);\n\n    var realPoint = constants.c_StationInfo.point.clone().add(v3);\n\n    return realPoint;\n}\n\n/**\r\n * 获得墙面点击的真实坐标\r\n * @param {THREE.Object} obj \r\n */\nfunction getWallRealPoint(obj) {\n\n    var drc = obj.point.clone().applyMatrix4(obj.object.matrix).applyMatrix4(constants.c_OpenGLToDS3Mx4);\n\n    var dx = drc.x / constants.c_WallDisplaySize * 2;\n\n    var dy = drc.y / constants.c_WallDisplaySize * 2;\n\n    var dz = drc.z / constants.c_WallDisplaySize * 2;\n\n    var realPoint = constants.c_StationInfo.point.clone().add(new THREE.Vector3(dx, dy, dz));\n\n    return realPoint;\n}\n\n/**\r\n * 获取是否跳转还是放大\r\n * @param {THREE.Object} obj 射线对象\r\n * @param {int} type 1-地面片检测 2-墙面片检测\r\n */\nfunction getJudgeOrZoom(obj, type) {\n\n    var distances = void 0;\n\n    var dis = 0;\n\n    if (type == 1) {\n\n        distances = getPanoRealPoint(obj, 2.5);\n\n        dis = -1;\n    } else {\n        distances = getWallRealPoint(obj);\n    }\n    var dis0 = Math.sqrt(Math.pow(distances.x - constants.c_StationInfo.nx, 2) + Math.pow(distances.y - constants.c_StationInfo.ny, 2)) + dis;\n\n    for (var i = 0; i < constants.c_AdjacentPanoInfoArr.length; i++) {\n\n        var dis1 = Math.sqrt(Math.pow(distances.x - constants.c_AdjacentPanoInfoArr[i].nX, 2) + Math.pow(distances.y - constants.c_AdjacentPanoInfoArr[i].nY, 2));\n\n        if (dis1 <= dis0) {\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\r\n * 获取两个站点坐标点的夹角\r\n * @param v1 当前站点\r\n * @param v2 下一站点\r\n * */\nfunction getArrowsAngle(v1, v2) {\n    var p2 = new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z).applyMatrix4(constants.c_DS3ToOpenGLMx4);\n    var v4 = new THREE.Vector3(-1, 0, 0);\n    var angle = p2.angleTo(v4);\n    angle = THREE.Math.radToDeg(angle); //转换为角度\n    var tan = p2.clone().cross(v4).dot(new THREE.Vector3(0, 1, 0));\n    if (tan > 0) {\n        angle = 360 - angle;\n    }\n    return angle;\n}\n\n/**\r\n * 清空对象缓存\r\n * @param node 对象\r\n * @param ifParent 是否用父类删除自己\r\n * */\nfunction disposeNode(node) {\n    var ifParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (node instanceof THREE.Mesh || node instanceof THREE.Sprite || node instanceof THREE.Line || node instanceof THREE.BoxHelper) {\n        if (node.geometry) {\n            node.geometry.dispose();\n        }\n        if (node.material) {\n            if (node.material instanceof THREE.MeshFaceMaterial || node.material instanceof THREE.MultiMaterial) {\n                $.each(node.material.materials, function (idx, mtrl) {\n                    if (mtrl.map) mtrl.map.dispose();\n                    if (mtrl.lightMap) mtrl.lightMap.dispose();\n                    if (mtrl.bumpMap) mtrl.bumpMap.dispose();\n                    if (mtrl.normalMap) mtrl.normalMap.dispose();\n                    if (mtrl.specularMap) mtrl.specularMap.dispose();\n                    if (mtrl.envMap) mtrl.envMap.dispose();\n\n                    mtrl.dispose(); // disposes any programs associated with the material\n                });\n            } else {\n                if (node.material.map) node.material.map.dispose();\n                if (node.material.lightMap) node.material.lightMap.dispose();\n                if (node.material.bumpMap) node.material.bumpMap.dispose();\n                if (node.material.normalMap) node.material.normalMap.dispose();\n                if (node.material.specularMap) node.material.specularMap.dispose();\n                if (node.material.envMap) node.material.envMap.dispose();\n\n                node.material.dispose(); // disposes any programs associated with the material\n            }\n        }\n        if (ifParent) {\n            if (node.parent) {\n                node.parent.remove(node);\n            }\n            node = null;\n        }\n    }\n}\n\n/**\r\n * 全屏\r\n * */\nfunction getFullScreen() {\n    if (!document.fullscreenElement // alternative standard method\n    && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n        // current working methods\n        if (document.documentElement.requestFullscreen) {\n            document.documentElement.requestFullscreen();\n        } else if (document.documentElement.msRequestFullscreen) {\n            document.documentElement.msRequestFullscreen();\n        } else if (document.documentElement.mozRequestFullScreen) {\n            document.documentElement.mozRequestFullScreen();\n        } else if (document.documentElement.msRequestFullscreen) {\n            //IE11\n            document.documentElement.msRequestFullscreen();\n        } else if (document.documentElement.webkitRequestFullscreen) {\n            document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        }\n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n}\n\n/**\r\n * DIV文本显示\r\n * @param {*} labelPos \r\n * @param {*} fontSize \r\n * @param {*} text \r\n */\nfunction TextDiv(labelPos, fontSize, text) {\n\n    labelPos.copy(getWorldToScene(labelPos));\n\n    this.textDiv = document.createElement(\"div\");\n\n    var fs = fontSize || 14;\n\n    this.textDiv.style.fontSize = fs + \"px\";\n\n    this.textDiv.style.color = \"#fff\";\n\n    this.textDiv.style.position = \"absolute\";\n\n    this.textDiv.id = \"\" + text;\n\n    this.textDiv.style.pointerEvents = \"none\";\n\n    if (!text) {\n\n        this.textDiv.style.left = \"-100px\";\n\n        this.textDiv.style.top = \"-100px\";\n    } else {\n\n        this.textDiv.style.left = labelPos.x + \"px\";\n\n        this.textDiv.style.top = labelPos.y + \"px\";\n    }\n    this.textDiv.innerHTML = text;\n\n    document.body.appendChild(this.textDiv);\n\n    return this.textDiv;\n}\n\n/**\r\n * 清楚新增文本div层\r\n * @param {*} textdiv \r\n */\nfunction delectTextDiv(textdiv) {\n\n    if (textdiv && textdiv.parent != null) {\n\n        textdiv.parent.removeChild(textdiv);\n\n        textdiv = null;\n    }\n}\n\n/**\r\n * 获取字体\r\n * @param {string} fontUrl 字体地址 '../../../commons/font/optimer_regular.typeface.json'\r\n * @param {Function} callFun 回调函数\r\n */\nfunction getFont(fontUrl) {\n    return new Promise(function (resolve, reject) {\n        var loader = new THREE.FontLoader();\n        loader.load(fontUrl, function (response) {\n            resolve(response);\n        });\n    });\n}\n\n/**\r\n * 设置相机视角\r\n * @param {Number} yaw 偏航角\r\n * @param {Number} pitch 俯仰角\r\n * @param {boolean} move 是否动画旋转\r\n */\nfunction setCameraAngle(yaw, pitch, move) {\n    if (move) {\n        var r1 = void 0,\n            r2 = void 0;\n        r1 = constants.sw_cameraManage.yaw_Camera - yaw;\n        if (r1 > 0) {\n            r2 = 360 - constants.sw_cameraManage.yaw_Camera + yaw;\n        } else {\n            r2 = 360 + constants.sw_cameraManage.yaw_Camera - yaw;\n        }\n\n        var from = {\n            x: constants.sw_cameraManage.yaw_Camera,\n            y: constants.sw_cameraManage.picth_Camera,\n            z: 0\n        };\n        var to = {\n            x: r1 > 0 ? Math.abs(r1) > Math.abs(r2) ? yaw + 360 : yaw : Math.abs(r1) > Math.abs(r2) ? yaw - 360 : yaw,\n            y: pitch,\n            z: 0\n        };\n        new TWEEN.Tween(from).to(to, 1000).easing(TWEEN.Easing.Exponential.Out).onUpdate(function () {\n            constants.sw_cameraManage.setHousesViewAngle(from.x, from.y, true);\n        }).onComplete(function () {\n            constants.sw_cameraManage.setHousesViewAngle(to.x, to.y, true);\n        }).start();\n    } else {\n        constants.sw_cameraManage.setHousesViewAngle(yaw, pitch, true);\n    }\n}",{"version":3,"sources":["app\\src\\tool\\SWTool.js"],"names":["getSceneToWorld","getWorldToScene","Vector3ToVP","VPToVector3","YPRToVector3","getNumberMax360","getDistance","getHfov","getWfov","getFaceTileMatrixWH","getRandomColor","getWallProbeSurfaceAngle","getProbeSurfaceDistance","getPanoRealPoint","getWallRealPoint","getJudgeOrZoom","getArrowsAngle","disposeNode","getFullScreen","TextDiv","delectTextDiv","getFont","setCameraAngle","constants","TWEEN","require","dx","dy","vector","THREE","Vector3","raycaster","Raycaster","div","set","window","innerWidth","innerHeight","unproject","camera","position","sub","normalize","intersects","intersectObjects","scene","children","point","clone","v3","windowWidth","minWidth","widthHalf","heightHalf","project","x","y","yaw","Math","atan2","z","pitch","sin","radToDeg","swvg","SWViewGesture","vp","vec","degToRad","Pitch","c_FaceDistance","m","cos","Yaw","n","x1","y1","x2","y2","xx","yy","pow","wfov","aspect","atan","tan","hfov","lzoom","wh","random","toString","obj","normal","face","vv","angle","angleTo","cross","dot","abs","distance","rph","v","asin","h","rp","applyMatrix4","c_OpenGLToDS3Mx4","realPoint","c_StationInfo","add","drc","object","matrix","c_WallDisplaySize","dz","type","distances","dis","dis0","sqrt","nx","ny","i","c_AdjacentPanoInfoArr","length","dis1","nX","nY","v1","v2","p2","c_DS3ToOpenGLMx4","v4","node","ifParent","Mesh","Sprite","Line","BoxHelper","geometry","dispose","material","MeshFaceMaterial","MultiMaterial","$","each","materials","idx","mtrl","map","lightMap","bumpMap","normalMap","specularMap","envMap","parent","remove","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","labelPos","fontSize","text","copy","textDiv","createElement","fs","style","color","id","pointerEvents","left","top","innerHTML","body","appendChild","textdiv","removeChild","fontUrl","Promise","resolve","reject","loader","FontLoader","load","response","move","r1","r2","sw_cameraManage","yaw_Camera","from","picth_Camera","to","Tween","easing","Easing","Exponential","Out","onUpdate","setHousesViewAngle","onComplete","start"],"mappings":";;;;;QAagBA,e,GAAAA,e;QA0BAC,e,GAAAA,e;QA+BAC,W,GAAAA,W;QA2BAC,W,GAAAA,W;QAmBAC,Y,GAAAA,Y;QAmBAC,e,GAAAA,e;QAmBAC,W,GAAAA,W;QAcAC,O,GAAAA,O;QAWAC,O,GAAAA,O;QAUAC,mB,GAAAA,mB;QAYAC,c,GAAAA,c;QAUAC,wB,GAAAA,wB;QAuBAC,uB,GAAAA,uB;QAWAC,gB,GAAAA,gB;QAyBAC,gB,GAAAA,gB;QAoBAC,c,GAAAA,c;QAmCAC,c,GAAAA,c;QAiBAC,W,GAAAA,W;QAwCAC,a,GAAAA,a;QAsCAC,O,GAAAA,O;QA0CAC,a,GAAAA,a;QAgBAC,O,GAAAA,O;QAeAC,c,GAAAA,c;;AAzehB;;IAAYC,S;;AACZ;;;;;;;;AALA;;AAEA;;AAIA,IAAMC,QAAQC,QAAQ,mBAAR,CAAd;;AAEA;;;;;AAKO,SAASzB,eAAT,CAAyB0B,EAAzB,EAA6BC,EAA7B,EAAiC;;AAEpC,QAAIC,SAAS,IAAIC,MAAMC,OAAV,EAAb;;AAEA,QAAIC,YAAY,IAAIF,MAAMG,SAAV,EAAhB;;AAEA,QAAIC,MAAM,IAAIJ,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAV;;AAEAF,WAAOM,GAAP,CAAYR,KAAKS,OAAOC,UAAb,GAA2B,CAA3B,GAA+B,CAA1C,EAA6C,EAAET,KAAKQ,OAAOE,WAAd,IAA6B,CAA7B,GAAiC,CAA9E,EAAiF,GAAjF,EARoC,CAQmD;;AAEvFT,WAAOU,SAAP,CAAiBf,UAAUgB,MAA3B;;AAEAR,cAAUG,GAAV,CAAcX,UAAUgB,MAAV,CAAiBC,QAA/B,EAAyCZ,OAAOa,GAAP,CAAWlB,UAAUgB,MAAV,CAAiBC,QAA5B,EAAsCE,SAAtC,EAAzC;;AAEA,QAAIC,aAAaZ,UAAUa,gBAAV,CAA2BrB,UAAUsB,KAAV,CAAgBC,QAA3C,EAAqD,IAArD,CAAjB;;AAEA,QAAIH,UAAJ,EAAgB;AACZV,cAAMU,WAAW,CAAX,EAAcI,KAAd,CAAoBC,KAApB,EAAN;AACH;AACD,WAAOf,GAAP;AACH;;AAED;;;;AAIO,SAAShC,eAAT,CAAyBgD,EAAzB,EAA6B;;AAEhC,QAAIrB,SAASqB,GAAGD,KAAH,EAAb;;AAEA,QAAIE,cAAcf,OAAOC,UAAzB;;AAEA,QAAIe,WAAW,IAAf;;AAEA,QAAID,cAAcC,QAAlB,EAA4B;;AAExBD,sBAAcC,QAAd;AAEH;;AAED,QAAIC,YAAaF,cAAc,CAA/B;;AAEA,QAAIG,aAAclB,OAAOE,WAAP,GAAqB,CAAvC;;AAEAT,WAAO0B,OAAP,CAAe/B,UAAUgB,MAAzB;;AAEAX,WAAO2B,CAAP,GAAY3B,OAAO2B,CAAP,GAAWH,SAAZ,GAAyBA,SAApC;;AAEAxB,WAAO4B,CAAP,GAAW,EAAE5B,OAAO4B,CAAP,GAAWH,UAAb,IAA2BA,UAAtC;;AAEA,WAAOzB,MAAP;AACH;;AAED;;;;AAIO,SAAS1B,WAAT,CAAqB+C,EAArB,EAAyB;AAC5B,QAAIQ,MAAMC,KAAKC,KAAL,CAAWV,GAAGM,CAAd,EAAiBN,GAAGW,CAApB,CAAV;;AAEA,QAAIC,QAAQH,KAAKC,KAAL,CAAWV,GAAGO,CAAd,EAAkBP,GAAGM,CAAH,GAAOG,KAAKI,GAAL,CAASL,GAAT,CAAzB,CAAZ;;AAEAA,UAAM5B,MAAM6B,IAAN,CAAWK,QAAX,CAAoBN,GAApB,CAAN;;AAEA,QAAIA,MAAM,CAAV,EAAa;;AAETA,cAAM,MAAMA,GAAZ;AAEH;AACDA,UAAM,CAACA,MAAM,EAAP,IAAa,GAAnB;;AAEA,QAAIO,OAAO,IAAIC,uBAAJ,CAAkBR,GAAlB,EAAuB5B,MAAM6B,IAAN,CAAWK,QAAX,CAAoBF,KAApB,CAAvB,EAAmD,CAAnD,CAAX;;AAEA,WAAOG,IAAP;AACH;;AAED;;;;;;;;AAQO,SAAS7D,WAAT,CAAqB+D,EAArB,EAAyB;AAC5B,QAAIC,MAAM,IAAItC,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAV;;AAEAqC,QAAIX,CAAJ,GAAQE,KAAKI,GAAL,CAASjC,MAAM6B,IAAN,CAAWU,QAAX,CAAoBF,GAAGG,KAAvB,CAAT,IAA0C9C,UAAU+C,cAApD,GAAqE,GAA7E;;AAEA,QAAIC,IAAIb,KAAKc,GAAL,CAAS3C,MAAM6B,IAAN,CAAWU,QAAX,CAAoBF,GAAGG,KAAvB,CAAT,IAA0C9C,UAAU+C,cAApD,GAAqE,GAA7E;;AAEAH,QAAIZ,CAAJ,GAAQG,KAAKI,GAAL,CAASjC,MAAM6B,IAAN,CAAWU,QAAX,CAAoBF,GAAGO,GAAH,GAAS,EAA7B,CAAT,IAA6CF,CAArD;;AAEAJ,QAAIP,CAAJ,GAAQF,KAAKc,GAAL,CAAS3C,MAAM6B,IAAN,CAAWU,QAAX,CAAoBF,GAAGO,GAAH,GAAS,EAA7B,CAAT,IAA6CF,CAArD;;AAEA,WAAOJ,GAAP;AACH;;AAED;;;;;AAKO,SAAS/D,YAAT,CAAsBqD,GAAtB,EAA2BI,KAA3B,EAAkC;;AAErC,QAAIM,MAAM,IAAItC,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAV;;AAEAqC,QAAIX,CAAJ,GAAQE,KAAKI,GAAL,CAASjC,MAAM6B,IAAN,CAAWU,QAAX,CAAoBP,KAApB,CAAT,IAAuCtC,UAAU+C,cAAjD,GAAkE,GAA1E;;AAEA,QAAIC,IAAIb,KAAKc,GAAL,CAAS3C,MAAM6B,IAAN,CAAWU,QAAX,CAAoBP,KAApB,CAAT,IAAuCtC,UAAU+C,cAAjD,GAAkE,GAA1E;;AAEAH,QAAIZ,CAAJ,GAAQG,KAAKI,GAAL,CAASjC,MAAM6B,IAAN,CAAWU,QAAX,CAAqBX,MAAM,EAA3B,CAAT,IAA4Cc,CAApD;;AAEAJ,QAAIP,CAAJ,GAAQF,KAAKc,GAAL,CAAS3C,MAAM6B,IAAN,CAAWU,QAAX,CAAqBX,MAAM,EAA3B,CAAT,IAA4Cc,CAApD;;AAEA,WAAOJ,GAAP;AACH;;AAED;;;;AAIO,SAAS9D,eAAT,CAAyBqE,CAAzB,EAA4B;;AAE/BA,QAAIA,IAAI,GAAR;;AAEA,QAAIA,IAAI,CAAR,EAAW;;AAEPA,YAAI,MAAMA,CAAV;AAEH;AACD,WAAOA,CAAP;AACH;;AAED;;;;;;;AAOO,SAASpE,WAAT,CAAqBqE,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqC;;AAExC,QAAIC,KAAKF,KAAKF,EAAd;;AAEA,QAAIK,KAAKF,KAAKF,EAAd;;AAEA,WAAOlB,KAAKuB,GAAL,CAAUF,KAAKA,EAAL,GAAUC,KAAKA,EAAzB,EAA8B,GAA9B,CAAP;AACH;;AAED;;;;;AAKO,SAASzE,OAAT,CAAiB2E,IAAjB,EAAuBC,MAAvB,EAA+B;;AAElC,WAAOtD,MAAM6B,IAAN,CAAWK,QAAX,CAAoBL,KAAK0B,IAAL,CAAU1B,KAAK2B,GAAL,CAASxD,MAAM6B,IAAN,CAAWU,QAAX,CAAoBc,IAApB,IAA4B,CAArC,IAA0CC,MAApD,IAA8D,CAAlF,CAAP;AAEH;;AAED;;;;;AAKO,SAAS3E,OAAT,CAAiB8E,IAAjB,EAAuBH,MAAvB,EAA+B;;AAElC,WAAOtD,MAAM6B,IAAN,CAAWK,QAAX,CAAoB,IAAIL,KAAK0B,IAAL,CAAU1B,KAAK2B,GAAL,CAASxD,MAAM6B,IAAN,CAAWU,QAAX,CAAoBkB,IAApB,IAA4B,CAArC,IAA0CH,MAApD,CAAxB,CAAP;AAEH;;AAED;;;;AAIO,SAAS1E,mBAAT,CAA6B8E,KAA7B,EAAoC;;AAEvC,QAAIC,KAAK,IAAI3D,MAAMC,OAAV,EAAT;;AAEA0D,OAAGjC,CAAH,GAAOiC,GAAGhC,CAAH,GAAOE,KAAKuB,GAAL,CAAS,CAAT,EAAYM,KAAZ,CAAd;;AAEA,WAAOC,EAAP;AACH;;AAED;;;AAGO,SAAS9E,cAAT,GAA0B;;AAE7B,WAAO,MAAM,CAACgD,KAAK+B,MAAL,KAAgB,QAAhB,IAA4B,CAA7B,EAAgCC,QAAhC,CAAyC,EAAzC,CAAb;AAEH;;AAED;;;;AAIO,SAAS/E,wBAAT,CAAkCgF,GAAlC,EAAuC;;AAE1C,QAAIC,SAASD,IAAIE,IAAJ,CAASD,MAAT,CAAgB5C,KAAhB,EAAb;;AAEA,QAAI8C,KAAK,IAAIjE,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAT;;AAEA,QAAIiE,QAAQlE,MAAM6B,IAAN,CAAWK,QAAX,CAAoB+B,GAAGE,OAAH,CAAWJ,MAAX,CAApB,CAAZ;;AAEA,QAAIP,MAAMS,GAAG9C,KAAH,GAAWiD,KAAX,CAAiBL,MAAjB,EAAyBM,GAAzB,CAA6B,IAAIrE,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAA7B,CAAV;;AAEA,QAAIuD,MAAM,CAAV,EAAa;;AAETU,gBAAQ,MAAMA,KAAd;AAEH;;AAED,WAAOA,KAAP;AACH;;AAED;;;;AAIO,SAASnF,uBAAT,CAAiC+E,GAAjC,EAAsC;;AAEzC,WAAOjC,KAAKyC,GAAL,CAAS,MAAMR,IAAIS,QAAV,GAAqBT,IAAI5C,KAAJ,CAAUS,CAAxC,CAAP;AAEH;;AAED;;;;;AAKO,SAAS3C,gBAAT,CAA0B8E,GAA1B,EAA+BU,GAA/B,EAAoC;;AAEvC,QAAIC,IAAI5C,KAAK6C,IAAL,CAAUZ,IAAI5C,KAAJ,CAAUS,CAAV,GAAcmC,IAAIS,QAA5B,CAAR,CAFuC,CAEQ;;AAE/C,QAAII,IAAI9C,KAAKC,KAAL,CAAWgC,IAAI5C,KAAJ,CAAUa,CAArB,EAAwB+B,IAAI5C,KAAJ,CAAUQ,CAAlC,IAAuC1B,MAAM6B,IAAN,CAAWU,QAAX,CAAoB,EAApB,CAA/C,CAJuC,CAIiC;;AAExE,QAAIqC,KAAK/C,KAAKyC,GAAL,CAASE,MAAM3C,KAAK2B,GAAL,CAASiB,CAAT,CAAf,CAAT;;AAEA,QAAI/C,IAAIkD,KAAK/C,KAAKc,GAAL,CAASgC,CAAT,CAAb;;AAEA,QAAI5C,IAAI,CAAC6C,EAAD,GAAM/C,KAAKI,GAAL,CAAS0C,CAAT,CAAd;;AAEA,QAAIhD,IAAI6C,GAAR;;AAEA,QAAIpD,KAAK,IAAIpB,MAAMC,OAAV,CAAkByB,CAAlB,EAAqBC,CAArB,EAAwBI,CAAxB,EAA2B8C,YAA3B,CAAwCnF,UAAUoF,gBAAlD,CAAT;;AAEA,QAAIC,YAAYrF,UAAUsF,aAAV,CAAwB9D,KAAxB,CAA8BC,KAA9B,GAAsC8D,GAAtC,CAA0C7D,EAA1C,CAAhB;;AAEA,WAAO2D,SAAP;AACH;;AAED;;;;AAIO,SAAS9F,gBAAT,CAA0B6E,GAA1B,EAA+B;;AAElC,QAAIoB,MAAMpB,IAAI5C,KAAJ,CAAUC,KAAV,GAAkB0D,YAAlB,CAA+Bf,IAAIqB,MAAJ,CAAWC,MAA1C,EAAkDP,YAAlD,CAA+DnF,UAAUoF,gBAAzE,CAAV;;AAEA,QAAIjF,KAAKqF,IAAIxD,CAAJ,GAAQhC,UAAU2F,iBAAlB,GAAsC,CAA/C;;AAEA,QAAIvF,KAAKoF,IAAIvD,CAAJ,GAAQjC,UAAU2F,iBAAlB,GAAsC,CAA/C;;AAEA,QAAIC,KAAKJ,IAAInD,CAAJ,GAAQrC,UAAU2F,iBAAlB,GAAsC,CAA/C;;AAEA,QAAIN,YAAYrF,UAAUsF,aAAV,CAAwB9D,KAAxB,CAA8BC,KAA9B,GAAsC8D,GAAtC,CAA0C,IAAIjF,MAAMC,OAAV,CAAkBJ,EAAlB,EAAsBC,EAAtB,EAA0BwF,EAA1B,CAA1C,CAAhB;;AAEA,WAAOP,SAAP;AACH;;AAED;;;;;AAKO,SAAS7F,cAAT,CAAwB4E,GAAxB,EAA6ByB,IAA7B,EAAmC;;AAEtC,QAAIC,kBAAJ;;AAEA,QAAIC,MAAM,CAAV;;AAEA,QAAIF,QAAQ,CAAZ,EAAe;;AAEXC,oBAAYxG,iBAAiB8E,GAAjB,EAAsB,GAAtB,CAAZ;;AAEA2B,cAAM,CAAC,CAAP;AACH,KALD,MAKO;AACHD,oBAAYvG,iBAAiB6E,GAAjB,CAAZ;AACH;AACD,QAAI4B,OAAO7D,KAAK8D,IAAL,CAAU9D,KAAKuB,GAAL,CAAUoC,UAAU9D,CAAV,GAAchC,UAAUsF,aAAV,CAAwBY,EAAhD,EAAqD,CAArD,IAA0D/D,KAAKuB,GAAL,CAAUoC,UAAU7D,CAAV,GAAcjC,UAAUsF,aAAV,CAAwBa,EAAhD,EAAqD,CAArD,CAApE,IAA+HJ,GAA1I;;AAEA,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIpG,UAAUqG,qBAAV,CAAgCC,MAApD,EAA4DF,GAA5D,EAAiE;;AAE7D,YAAIG,OAAOpE,KAAK8D,IAAL,CAAU9D,KAAKuB,GAAL,CAAUoC,UAAU9D,CAAV,GAAchC,UAAUqG,qBAAV,CAAgCD,CAAhC,EAAmCI,EAA3D,EAAgE,CAAhE,IAAqErE,KAAKuB,GAAL,CAAUoC,UAAU7D,CAAV,GAAcjC,UAAUqG,qBAAV,CAAgCD,CAAhC,EAAmCK,EAA3D,EAAgE,CAAhE,CAA/E,CAAX;;AAEA,YAAIF,QAAQP,IAAZ,EAAkB;;AAEd,mBAAO,IAAP;AAEH;AACJ;;AAED,WAAO,KAAP;AACH;;AAED;;;;;AAKO,SAASvG,cAAT,CAAwBiH,EAAxB,EAA4BC,EAA5B,EAAgC;AACnC,QAAIC,KAAK,IAAItG,MAAMC,OAAV,CAAkBoG,GAAG3E,CAAH,GAAO0E,GAAG1E,CAA5B,EAA+B2E,GAAG1E,CAAH,GAAOyE,GAAGzE,CAAzC,EAA4C0E,GAAGtE,CAAH,GAAOqE,GAAGrE,CAAtD,EAAyD8C,YAAzD,CAAsEnF,UAAU6G,gBAAhF,CAAT;AACA,QAAIC,KAAK,IAAIxG,MAAMC,OAAV,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAT;AACA,QAAIiE,QAAQoC,GAAGnC,OAAH,CAAWqC,EAAX,CAAZ;AACAtC,YAAQlE,MAAM6B,IAAN,CAAWK,QAAX,CAAoBgC,KAApB,CAAR,CAJmC,CAIC;AACpC,QAAIV,MAAM8C,GAAGnF,KAAH,GAAWiD,KAAX,CAAiBoC,EAAjB,EAAqBnC,GAArB,CAAyB,IAAIrE,MAAMC,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAzB,CAAV;AACA,QAAIuD,MAAM,CAAV,EAAa;AACTU,gBAAQ,MAAMA,KAAd;AACH;AACD,WAAOA,KAAP;AACH;;AAED;;;;;AAKO,SAAS9E,WAAT,CAAqBqH,IAArB,EAA4C;AAAA,QAAjBC,QAAiB,uEAAN,IAAM;;AAC/C,QAAID,gBAAgBzG,MAAM2G,IAAtB,IAA8BF,gBAAgBzG,MAAM4G,MAApD,IAA8DH,gBAAgBzG,MAAM6G,IAApF,IAA4FJ,gBAAgBzG,MAAM8G,SAAtH,EAAiI;AAC7H,YAAIL,KAAKM,QAAT,EAAmB;AACfN,iBAAKM,QAAL,CAAcC,OAAd;AACH;AACD,YAAIP,KAAKQ,QAAT,EAAmB;AACf,gBAAIR,KAAKQ,QAAL,YAAyBjH,MAAMkH,gBAA/B,IAAmDT,KAAKQ,QAAL,YAAyBjH,MAAMmH,aAAtF,EAAqG;AACjGC,kBAAEC,IAAF,CAAOZ,KAAKQ,QAAL,CAAcK,SAArB,EAAgC,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACjD,wBAAIA,KAAKC,GAAT,EAAcD,KAAKC,GAAL,CAAST,OAAT;AACd,wBAAIQ,KAAKE,QAAT,EAAmBF,KAAKE,QAAL,CAAcV,OAAd;AACnB,wBAAIQ,KAAKG,OAAT,EAAkBH,KAAKG,OAAL,CAAaX,OAAb;AAClB,wBAAIQ,KAAKI,SAAT,EAAoBJ,KAAKI,SAAL,CAAeZ,OAAf;AACpB,wBAAIQ,KAAKK,WAAT,EAAsBL,KAAKK,WAAL,CAAiBb,OAAjB;AACtB,wBAAIQ,KAAKM,MAAT,EAAiBN,KAAKM,MAAL,CAAYd,OAAZ;;AAEjBQ,yBAAKR,OAAL,GARiD,CAQjC;AACnB,iBATD;AAUH,aAXD,MAWO;AACH,oBAAIP,KAAKQ,QAAL,CAAcQ,GAAlB,EAAuBhB,KAAKQ,QAAL,CAAcQ,GAAd,CAAkBT,OAAlB;AACvB,oBAAIP,KAAKQ,QAAL,CAAcS,QAAlB,EAA4BjB,KAAKQ,QAAL,CAAcS,QAAd,CAAuBV,OAAvB;AAC5B,oBAAIP,KAAKQ,QAAL,CAAcU,OAAlB,EAA2BlB,KAAKQ,QAAL,CAAcU,OAAd,CAAsBX,OAAtB;AAC3B,oBAAIP,KAAKQ,QAAL,CAAcW,SAAlB,EAA6BnB,KAAKQ,QAAL,CAAcW,SAAd,CAAwBZ,OAAxB;AAC7B,oBAAIP,KAAKQ,QAAL,CAAcY,WAAlB,EAA+BpB,KAAKQ,QAAL,CAAcY,WAAd,CAA0Bb,OAA1B;AAC/B,oBAAIP,KAAKQ,QAAL,CAAca,MAAlB,EAA0BrB,KAAKQ,QAAL,CAAca,MAAd,CAAqBd,OAArB;;AAE1BP,qBAAKQ,QAAL,CAAcD,OAAd,GARG,CAQsB;AAC5B;AACJ;AACD,YAAIN,QAAJ,EAAc;AACV,gBAAID,KAAKsB,MAAT,EAAiB;AACbtB,qBAAKsB,MAAL,CAAYC,MAAZ,CAAmBvB,IAAnB;AACH;AACDA,mBAAO,IAAP;AACH;AACJ;AACJ;;AAED;;;AAGO,SAASpH,aAAT,GAAyB;AAC5B,QAAI,CAAC4I,SAASC,iBAAV,CAA4B;AAA5B,OAEA,CAACD,SAASE,oBAFV,IAGA,CAACF,SAASG,uBAHV,IAIA,CAACH,SAASI,mBAJd,EAImC;AAAE;AACjC,YAAIJ,SAASK,eAAT,CAAyBC,iBAA7B,EAAgD;AAC5CN,qBAASK,eAAT,CAAyBC,iBAAzB;AACH,SAFD,MAEO,IAAIN,SAASK,eAAT,CAAyBE,mBAA7B,EAAkD;AACrDP,qBAASK,eAAT,CAAyBE,mBAAzB;AACH,SAFM,MAEA,IAAIP,SAASK,eAAT,CAAyBG,oBAA7B,EAAmD;AACtDR,qBAASK,eAAT,CAAyBG,oBAAzB;AACH,SAFM,MAEA,IAAIR,SAASK,eAAT,CAAyBE,mBAA7B,EAAkD;AAAE;AACvDP,qBAASK,eAAT,CAAyBE,mBAAzB;AACH,SAFM,MAEA,IAAIP,SAASK,eAAT,CAAyBI,uBAA7B,EAAsD;AACzDT,qBAASK,eAAT,CAAyBI,uBAAzB,CAAiDC,QAAQC,oBAAzD;AACH;AACJ,KAhBD,MAgBO;AACH,YAAIX,SAASY,cAAb,EAA6B;AACzBZ,qBAASY,cAAT;AACH,SAFD,MAEO,IAAIZ,SAASa,gBAAb,EAA+B;AAClCb,qBAASa,gBAAT;AACH,SAFM,MAEA,IAAIb,SAASc,mBAAb,EAAkC;AACrCd,qBAASc,mBAAT;AACH,SAFM,MAEA,IAAId,SAASa,gBAAb,EAA+B;AAClCb,qBAASa,gBAAT;AACH,SAFM,MAEA,IAAIb,SAASe,oBAAb,EAAmC;AACtCf,qBAASe,oBAAT;AACH;AACJ;AACJ;;AAED;;;;;;AAMO,SAAS1J,OAAT,CAAiB2J,QAAjB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2C;;AAE9CF,aAASG,IAAT,CAAchL,gBAAgB6K,QAAhB,CAAd;;AAEA,SAAKI,OAAL,GAAepB,SAASqB,aAAT,CAAuB,KAAvB,CAAf;;AAEA,QAAIC,KAAKL,YAAY,EAArB;;AAEA,SAAKG,OAAL,CAAaG,KAAb,CAAmBN,QAAnB,GAA8BK,KAAK,IAAnC;;AAEA,SAAKF,OAAL,CAAaG,KAAb,CAAmBC,KAAnB,GAA2B,MAA3B;;AAEA,SAAKJ,OAAL,CAAaG,KAAb,CAAmB7I,QAAnB,GAA8B,UAA9B;;AAEA,SAAK0I,OAAL,CAAaK,EAAb,GAAkB,KAAKP,IAAvB;;AAEA,SAAKE,OAAL,CAAaG,KAAb,CAAmBG,aAAnB,GAAmC,MAAnC;;AAEA,QAAI,CAACR,IAAL,EAAW;;AAEP,aAAKE,OAAL,CAAaG,KAAb,CAAmBI,IAAnB,GAA0B,QAA1B;;AAEA,aAAKP,OAAL,CAAaG,KAAb,CAAmBK,GAAnB,GAAyB,QAAzB;AAEH,KAND,MAMO;;AAEH,aAAKR,OAAL,CAAaG,KAAb,CAAmBI,IAAnB,GAA0BX,SAASvH,CAAT,GAAa,IAAvC;;AAEA,aAAK2H,OAAL,CAAaG,KAAb,CAAmBK,GAAnB,GAAyBZ,SAAStH,CAAT,GAAa,IAAtC;AAEH;AACD,SAAK0H,OAAL,CAAaS,SAAb,GAAyBX,IAAzB;;AAEAlB,aAAS8B,IAAT,CAAcC,WAAd,CAA0B,KAAKX,OAA/B;;AAEA,WAAO,KAAKA,OAAZ;AACH;;AAED;;;;AAIO,SAAS9J,aAAT,CAAuB0K,OAAvB,EAAgC;;AAEnC,QAAIA,WAAWA,QAAQlC,MAAR,IAAkB,IAAjC,EAAuC;;AAEnCkC,gBAAQlC,MAAR,CAAemC,WAAf,CAA2BD,OAA3B;;AAEAA,kBAAU,IAAV;AAEH;AACJ;;AAED;;;;;AAKO,SAASzK,OAAT,CAAiB2K,OAAjB,EAA0B;AAC7B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,SAAS,IAAIvK,MAAMwK,UAAV,EAAb;AACAD,eAAOE,IAAP,CAAYN,OAAZ,EAAqB,UAACO,QAAD,EAAc;AAC/BL,oBAAQK,QAAR;AACH,SAFD;AAGH,KALM,CAAP;AAMH;;AAED;;;;;;AAMO,SAASjL,cAAT,CAAwBmC,GAAxB,EAA6BI,KAA7B,EAAoC2I,IAApC,EAA0C;AAC7C,QAAIA,IAAJ,EAAU;AACN,YAAIC,WAAJ;AAAA,YAAQC,WAAR;AACAD,aAAKlL,UAAUoL,eAAV,CAA0BC,UAA1B,GAAuCnJ,GAA5C;AACA,YAAIgJ,KAAK,CAAT,EAAY;AACRC,iBAAK,MAAMnL,UAAUoL,eAAV,CAA0BC,UAAhC,GAA6CnJ,GAAlD;AACH,SAFD,MAEO;AACHiJ,iBAAK,MAAMnL,UAAUoL,eAAV,CAA0BC,UAAhC,GAA6CnJ,GAAlD;AACH;;AAED,YAAIoJ,OAAO;AACPtJ,eAAGhC,UAAUoL,eAAV,CAA0BC,UADtB;AAEPpJ,eAAGjC,UAAUoL,eAAV,CAA0BG,YAFtB;AAGPlJ,eAAG;AAHI,SAAX;AAKA,YAAImJ,KAAK;AACLxJ,eAAIkJ,KAAK,CAAL,GAAU/I,KAAKyC,GAAL,CAASsG,EAAT,IAAe/I,KAAKyC,GAAL,CAASuG,EAAT,CAAf,GAA+BjJ,MAAM,GAArC,GAA4CA,GAAtD,GAA8DC,KAAKyC,GAAL,CAASsG,EAAT,IAAe/I,KAAKyC,GAAL,CAASuG,EAAT,CAAf,GAA+BjJ,MAAM,GAArC,GAA4CA,GADzG;AAELD,eAAGK,KAFE;AAGLD,eAAG;AAHE,SAAT;AAKA,YAAIpC,MAAMwL,KAAV,CAAgBH,IAAhB,EACKE,EADL,CACQA,EADR,EACY,IADZ,EAEKE,MAFL,CAEYzL,MAAM0L,MAAN,CAAaC,WAAb,CAAyBC,GAFrC,EAGKC,QAHL,CAGc,YAAY;AAClB9L,sBAAUoL,eAAV,CAA0BW,kBAA1B,CAA6CT,KAAKtJ,CAAlD,EAAqDsJ,KAAKrJ,CAA1D,EAA6D,IAA7D;AACH,SALL,EAMK+J,UANL,CAMgB,YAAY;AACpBhM,sBAAUoL,eAAV,CAA0BW,kBAA1B,CAA6CP,GAAGxJ,CAAhD,EAAmDwJ,GAAGvJ,CAAtD,EAAyD,IAAzD;AACH,SARL,EASKgK,KATL;AAUH,KA7BD,MA6BO;AACHjM,kBAAUoL,eAAV,CAA0BW,kBAA1B,CAA6C7J,GAA7C,EAAkDI,KAAlD,EAAyD,IAAzD;AACH;AACJ","file":"SWTool.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE,$*/\r\n\r\n/**所有共用方法 */\r\n\r\nimport * as constants from './SWConstants';\r\nimport SWViewGesture from './SWViewGesture';\r\nconst TWEEN = require('@tweenjs/tween.js');\r\n\r\n/**\r\n * 屏幕坐标转世界坐标\r\n * @param {number} dx 鼠标X坐标\r\n * @param {number} dy 鼠标Y坐标\r\n */\r\nexport function getSceneToWorld(dx, dy) {\r\n\r\n    let vector = new THREE.Vector3();\r\n\r\n    let raycaster = new THREE.Raycaster();\r\n\r\n    let div = new THREE.Vector3(0, 0, 0);\r\n\r\n    vector.set((dx / window.innerWidth) * 2 - 1, -(dy / window.innerHeight) * 2 + 1, 0.5); // z = 0.5 important!\r\n\r\n    vector.unproject(constants.camera);\r\n\r\n    raycaster.set(constants.camera.position, vector.sub(constants.camera.position).normalize());\r\n\r\n    let intersects = raycaster.intersectObjects(constants.scene.children, true);\r\n\r\n    if (intersects) {\r\n        div = intersects[0].point.clone();\r\n    }\r\n    return div;\r\n}\r\n\r\n/**\r\n * 世界坐标转屏幕坐标\r\n * @param {THREE.Vector3} v3 世界坐标\r\n */\r\nexport function getWorldToScene(v3) {\r\n\r\n    let vector = v3.clone();\r\n\r\n    let windowWidth = window.innerWidth;\r\n\r\n    let minWidth = 1280;\r\n\r\n    if (windowWidth < minWidth) {\r\n\r\n        windowWidth = minWidth;\r\n\r\n    }\r\n\r\n    let widthHalf = (windowWidth / 2);\r\n\r\n    let heightHalf = (window.innerHeight / 2);\r\n\r\n    vector.project(constants.camera);\r\n\r\n    vector.x = (vector.x * widthHalf) + widthHalf;\r\n\r\n    vector.y = -(vector.y * heightHalf) + heightHalf;\r\n\r\n    return vector;\r\n}\r\n\r\n/**\r\n * 三维坐标转视点坐标\r\n * @param {THREE.Vector3} v3 \r\n */\r\nexport function Vector3ToVP(v3) {\r\n    let yaw = Math.atan2(v3.x, v3.z);\r\n\r\n    let pitch = Math.atan2(v3.y, (v3.x / Math.sin(yaw)));\r\n\r\n    yaw = THREE.Math.radToDeg(yaw);\r\n\r\n    if (yaw < 0) {\r\n\r\n        yaw = 360 + yaw;\r\n\r\n    }\r\n    yaw = (yaw + 90) % 360;\r\n\r\n    let swvg = new SWViewGesture(yaw, THREE.Math.radToDeg(pitch), 0);\r\n\r\n    return swvg;\r\n}\r\n\r\n/**\r\n * 视点转三维坐标,P是从球面和Z轴的交点绕Y轴旋转theta，\r\n * 然后在Y轴和其本身组成的平面上绕其过原点的法向量旋转phi得到，那么点P的坐标如下:\r\n * x = r*cos(phi)*sin(theta);\r\n * y = r*sin(phi);\r\n * z = r*cos(phi)*cos(theta);\r\n * @param {SWViewGesture} vp 球面坐标 yaw,pitch\r\n */\r\nexport function VPToVector3(vp) {\r\n    let vec = new THREE.Vector3(0, 0, 0);\r\n\r\n    vec.y = Math.sin(THREE.Math.degToRad(vp.Pitch)) * constants.c_FaceDistance * 0.5;\r\n\r\n    let m = Math.cos(THREE.Math.degToRad(vp.Pitch)) * constants.c_FaceDistance * 0.5;\r\n\r\n    vec.x = Math.sin(THREE.Math.degToRad(vp.Yaw - 90)) * m;\r\n\r\n    vec.z = Math.cos(THREE.Math.degToRad(vp.Yaw - 90)) * m;\r\n\r\n    return vec;\r\n}\r\n\r\n/**\r\n * 相机看向球面坐标转三维坐标\r\n * @param {Number} yaw 经度\r\n * @param {Number} pitch 纬度\r\n */\r\nexport function YPRToVector3(yaw, pitch) {\r\n\r\n    let vec = new THREE.Vector3(0, 0, 0);\r\n\r\n    vec.y = Math.sin(THREE.Math.degToRad(pitch)) * constants.c_FaceDistance * 0.5;\r\n\r\n    let m = Math.cos(THREE.Math.degToRad(pitch)) * constants.c_FaceDistance * 0.5;\r\n\r\n    vec.x = Math.sin(THREE.Math.degToRad((yaw - 90))) * m;\r\n\r\n    vec.z = Math.cos(THREE.Math.degToRad((yaw - 90))) * m;\r\n\r\n    return vec;\r\n}\r\n\r\n/**\r\n * 让数值在0~360之间\r\n * @param {number} n \r\n */\r\nexport function getNumberMax360(n) {\r\n\r\n    n = n % 360;\r\n\r\n    if (n < 0) {\r\n\r\n        n = 360 + n;\r\n\r\n    }\r\n    return n;\r\n}\r\n\r\n/**\r\n * 两点距离\r\n * @param {number} x1 \r\n * @param {number} y1 \r\n * @param {number} x2 \r\n * @param {number} y2 \r\n */\r\nexport function getDistance(x1, y1, x2, y2) {\r\n\r\n    let xx = x2 - x1;\r\n\r\n    let yy = y2 - y1;\r\n\r\n    return Math.pow((xx * xx + yy * yy), 0.5);\r\n}\r\n\r\n/**\r\n * 通过水平fov获得垂直fov\r\n * @param {number} wfov \r\n * @param {number} aspect \r\n */\r\nexport function getHfov(wfov, aspect) {\r\n\r\n    return THREE.Math.radToDeg(Math.atan(Math.tan(THREE.Math.degToRad(wfov) / 2) / aspect) * 2);\r\n\r\n}\r\n\r\n/**\r\n * 通过垂直fov获得水平fov\r\n * @param {number} hfov \r\n * @param {number} aspect \r\n */\r\nexport function getWfov(hfov, aspect) {\r\n\r\n    return THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(hfov) / 2) * aspect));\r\n\r\n}\r\n\r\n/**\r\n * 获取当前面当前放大值瓦片WH数\r\n * @param {number} lzoom \r\n */\r\nexport function getFaceTileMatrixWH(lzoom) {\r\n\r\n    let wh = new THREE.Vector3();\r\n\r\n    wh.x = wh.y = Math.pow(2, lzoom);\r\n\r\n    return wh;\r\n}\r\n\r\n/**\r\n * 获取随机颜色值\r\n * */\r\nexport function getRandomColor() {\r\n\r\n    return '#' + (Math.random() * 0xffffff << 0).toString(16);\r\n\r\n}\r\n\r\n/**\r\n * 墙面探面角度值\r\n * @param {THREE.Object} obj \r\n */\r\nexport function getWallProbeSurfaceAngle(obj) {\r\n\r\n    let normal = obj.face.normal.clone();\r\n\r\n    let vv = new THREE.Vector3(0, 0, 1);\r\n\r\n    let angle = THREE.Math.radToDeg(vv.angleTo(normal));\r\n\r\n    let tan = vv.clone().cross(normal).dot(new THREE.Vector3(0, 1, 0));\r\n\r\n    if (tan > 0) {\r\n\r\n        angle = 360 - angle;\r\n\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\n/**\r\n * 获取显示的距离\r\n * @param {THREE.Object} obj \r\n */\r\nexport function getProbeSurfaceDistance(obj) {\r\n\r\n    return Math.abs(1.5 * obj.distance / obj.point.y);\r\n\r\n}\r\n\r\n/**\r\n * 获取现实中的坐标\r\n * @param {THREE.Object} obj \r\n * @param {number} rph \r\n */\r\nexport function getPanoRealPoint(obj, rph) {\r\n\r\n    let v = Math.asin(obj.point.y / obj.distance); //垂直角度\r\n\r\n    let h = Math.atan2(obj.point.z, obj.point.x) - THREE.Math.degToRad(90); //水平角度\r\n\r\n    let rp = Math.abs(rph / Math.tan(v));\r\n\r\n    let x = rp * Math.cos(h);\r\n\r\n    let z = -rp * Math.sin(h);\r\n\r\n    let y = rph;\r\n\r\n    let v3 = new THREE.Vector3(x, y, z).applyMatrix4(constants.c_OpenGLToDS3Mx4);\r\n\r\n    let realPoint = constants.c_StationInfo.point.clone().add(v3);\r\n\r\n    return realPoint;\r\n}\r\n\r\n/**\r\n * 获得墙面点击的真实坐标\r\n * @param {THREE.Object} obj \r\n */\r\nexport function getWallRealPoint(obj) {\r\n\r\n    let drc = obj.point.clone().applyMatrix4(obj.object.matrix).applyMatrix4(constants.c_OpenGLToDS3Mx4);\r\n\r\n    let dx = drc.x / constants.c_WallDisplaySize * 2;\r\n\r\n    let dy = drc.y / constants.c_WallDisplaySize * 2;\r\n\r\n    let dz = drc.z / constants.c_WallDisplaySize * 2;\r\n\r\n    let realPoint = constants.c_StationInfo.point.clone().add(new THREE.Vector3(dx, dy, dz));\r\n\r\n    return realPoint;\r\n}\r\n\r\n/**\r\n * 获取是否跳转还是放大\r\n * @param {THREE.Object} obj 射线对象\r\n * @param {int} type 1-地面片检测 2-墙面片检测\r\n */\r\nexport function getJudgeOrZoom(obj, type) {\r\n\r\n    let distances;\r\n\r\n    let dis = 0;\r\n\r\n    if (type == 1) {\r\n\r\n        distances = getPanoRealPoint(obj, 2.5);\r\n\r\n        dis = -1;\r\n    } else {\r\n        distances = getWallRealPoint(obj);\r\n    }\r\n    let dis0 = Math.sqrt(Math.pow((distances.x - constants.c_StationInfo.nx), 2) + Math.pow((distances.y - constants.c_StationInfo.ny), 2)) + dis;\r\n\r\n    for (let i = 0; i < constants.c_AdjacentPanoInfoArr.length; i++) {\r\n\r\n        let dis1 = Math.sqrt(Math.pow((distances.x - constants.c_AdjacentPanoInfoArr[i].nX), 2) + Math.pow((distances.y - constants.c_AdjacentPanoInfoArr[i].nY), 2));\r\n\r\n        if (dis1 <= dis0) {\r\n\r\n            return true;\r\n\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * 获取两个站点坐标点的夹角\r\n * @param v1 当前站点\r\n * @param v2 下一站点\r\n * */\r\nexport function getArrowsAngle(v1, v2) {\r\n    let p2 = new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z).applyMatrix4(constants.c_DS3ToOpenGLMx4);\r\n    let v4 = new THREE.Vector3(-1, 0, 0);\r\n    let angle = p2.angleTo(v4);\r\n    angle = THREE.Math.radToDeg(angle); //转换为角度\r\n    let tan = p2.clone().cross(v4).dot(new THREE.Vector3(0, 1, 0));\r\n    if (tan > 0) {\r\n        angle = 360 - angle;\r\n    }\r\n    return angle;\r\n}\r\n\r\n/**\r\n * 清空对象缓存\r\n * @param node 对象\r\n * @param ifParent 是否用父类删除自己\r\n * */\r\nexport function disposeNode(node, ifParent = true) {\r\n    if (node instanceof THREE.Mesh || node instanceof THREE.Sprite || node instanceof THREE.Line || node instanceof THREE.BoxHelper) {\r\n        if (node.geometry) {\r\n            node.geometry.dispose();\r\n        }\r\n        if (node.material) {\r\n            if (node.material instanceof THREE.MeshFaceMaterial || node.material instanceof THREE.MultiMaterial) {\r\n                $.each(node.material.materials, function (idx, mtrl) {\r\n                    if (mtrl.map) mtrl.map.dispose();\r\n                    if (mtrl.lightMap) mtrl.lightMap.dispose();\r\n                    if (mtrl.bumpMap) mtrl.bumpMap.dispose();\r\n                    if (mtrl.normalMap) mtrl.normalMap.dispose();\r\n                    if (mtrl.specularMap) mtrl.specularMap.dispose();\r\n                    if (mtrl.envMap) mtrl.envMap.dispose();\r\n\r\n                    mtrl.dispose(); // disposes any programs associated with the material\r\n                });\r\n            } else {\r\n                if (node.material.map) node.material.map.dispose();\r\n                if (node.material.lightMap) node.material.lightMap.dispose();\r\n                if (node.material.bumpMap) node.material.bumpMap.dispose();\r\n                if (node.material.normalMap) node.material.normalMap.dispose();\r\n                if (node.material.specularMap) node.material.specularMap.dispose();\r\n                if (node.material.envMap) node.material.envMap.dispose();\r\n\r\n                node.material.dispose(); // disposes any programs associated with the material\r\n            }\r\n        }\r\n        if (ifParent) {\r\n            if (node.parent) {\r\n                node.parent.remove(node);\r\n            }\r\n            node = null;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 全屏\r\n * */\r\nexport function getFullScreen() {\r\n    if (!document.fullscreenElement // alternative standard method\r\n        &&\r\n        !document.mozFullScreenElement &&\r\n        !document.webkitFullscreenElement &&\r\n        !document.msFullscreenElement) { // current working methods\r\n        if (document.documentElement.requestFullscreen) {\r\n            document.documentElement.requestFullscreen();\r\n        } else if (document.documentElement.msRequestFullscreen) {\r\n            document.documentElement.msRequestFullscreen();\r\n        } else if (document.documentElement.mozRequestFullScreen) {\r\n            document.documentElement.mozRequestFullScreen();\r\n        } else if (document.documentElement.msRequestFullscreen) { //IE11\r\n            document.documentElement.msRequestFullscreen();\r\n        } else if (document.documentElement.webkitRequestFullscreen) {\r\n            document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n        }\r\n    } else {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * DIV文本显示\r\n * @param {*} labelPos \r\n * @param {*} fontSize \r\n * @param {*} text \r\n */\r\nexport function TextDiv(labelPos, fontSize, text) {\r\n\r\n    labelPos.copy(getWorldToScene(labelPos));\r\n\r\n    this.textDiv = document.createElement(\"div\");\r\n\r\n    let fs = fontSize || 14;\r\n\r\n    this.textDiv.style.fontSize = fs + \"px\";\r\n\r\n    this.textDiv.style.color = \"#fff\";\r\n\r\n    this.textDiv.style.position = \"absolute\";\r\n\r\n    this.textDiv.id = \"\" + text;\r\n\r\n    this.textDiv.style.pointerEvents = \"none\";\r\n\r\n    if (!text) {\r\n\r\n        this.textDiv.style.left = \"-100px\";\r\n\r\n        this.textDiv.style.top = \"-100px\";\r\n\r\n    } else {\r\n\r\n        this.textDiv.style.left = labelPos.x + \"px\";\r\n\r\n        this.textDiv.style.top = labelPos.y + \"px\";\r\n\r\n    }\r\n    this.textDiv.innerHTML = text;\r\n\r\n    document.body.appendChild(this.textDiv);\r\n\r\n    return this.textDiv;\r\n}\r\n\r\n/**\r\n * 清楚新增文本div层\r\n * @param {*} textdiv \r\n */\r\nexport function delectTextDiv(textdiv) {\r\n\r\n    if (textdiv && textdiv.parent != null) {\r\n\r\n        textdiv.parent.removeChild(textdiv);\r\n\r\n        textdiv = null;\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 获取字体\r\n * @param {string} fontUrl 字体地址 '../../../commons/font/optimer_regular.typeface.json'\r\n * @param {Function} callFun 回调函数\r\n */\r\nexport function getFont(fontUrl) {\r\n    return new Promise((resolve, reject) => {\r\n        let loader = new THREE.FontLoader();\r\n        loader.load(fontUrl, (response) => {\r\n            resolve(response);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * 设置相机视角\r\n * @param {Number} yaw 偏航角\r\n * @param {Number} pitch 俯仰角\r\n * @param {boolean} move 是否动画旋转\r\n */\r\nexport function setCameraAngle(yaw, pitch, move) {\r\n    if (move) {\r\n        let r1, r2;\r\n        r1 = constants.sw_cameraManage.yaw_Camera - yaw;\r\n        if (r1 > 0) {\r\n            r2 = 360 - constants.sw_cameraManage.yaw_Camera + yaw;\r\n        } else {\r\n            r2 = 360 + constants.sw_cameraManage.yaw_Camera - yaw;\r\n        }\r\n\r\n        let from = {\r\n            x: constants.sw_cameraManage.yaw_Camera,\r\n            y: constants.sw_cameraManage.picth_Camera,\r\n            z: 0\r\n        };\r\n        let to = {\r\n            x: (r1 > 0 ? (Math.abs(r1) > Math.abs(r2) ? (yaw + 360) : yaw) : (Math.abs(r1) > Math.abs(r2) ? (yaw - 360) : yaw)),\r\n            y: pitch,\r\n            z: 0\r\n        };\r\n        new TWEEN.Tween(from)\r\n            .to(to, 1000)\r\n            .easing(TWEEN.Easing.Exponential.Out)\r\n            .onUpdate(function () {\r\n                constants.sw_cameraManage.setHousesViewAngle(from.x, from.y, true);\r\n            })\r\n            .onComplete(function () {\r\n                constants.sw_cameraManage.setHousesViewAngle(to.x, to.y, true);\r\n            })\r\n            .start();\r\n    } else {\r\n        constants.sw_cameraManage.setHousesViewAngle(yaw, pitch, true);\r\n    }\r\n}"]}]}