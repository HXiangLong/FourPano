{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\laser\\SWWallModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\laser\\SWWallModule.js","mtime":1537409813756},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _SWWallFaceModule = require('./SWWallFaceModule');\n\nvar _SWWallFaceModule2 = _interopRequireDefault(_SWWallFaceModule);\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 激光点云墙面片集合对象\r\n */\nvar SWWallModule = function () {\n    function SWWallModule() {\n        _classCallCheck(this, SWWallModule);\n\n        /**当前站点墙面显示集合 */\n        this.wallMeshArr = [];\n    }\n\n    /**\r\n     * 生成墙面片集合\r\n     */\n\n\n    _createClass(SWWallModule, [{\n        key: 'createWallFace',\n        value: function createWallFace() {\n            var _this = this;\n\n            _SWConstants.c_facadeByPanoIDInfoArr.forEach(function (item) {\n\n                if (_SWConstants.c_StationInfo.point.clone().distanceTo(item.points.p1) < 100) {\n                    //100 限制不在眼前的面片不显示\n\n                    _this.wallMeshArr.push(new _SWWallFaceModule2.default(item));\n                }\n            });\n\n            _SWConstants.sw_groundMesh.drawGroundFace();\n        }\n\n        /**\r\n         * 清理墙面片\r\n         */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n\n            this.wallMeshArr.forEach(function (item) {\n\n                item.clearWallMesh();\n            });\n\n            this.wallMeshArr.length = 0;\n        }\n    }]);\n\n    return SWWallModule;\n}();\n\nexports.default = SWWallModule;",null]}