{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js??ref--5-0!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTextureAnimator.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTextureAnimator.js","mtime":1529029839277},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\.babelrc","mtime":1526554899270},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global THREE*/\n\n/**gif动画对象 */\nvar SWTextureAnimator = function () {\n        /**\r\n         * GIF动画\r\n         * @param {THREE.Texture} texture 贴图对象\r\n         * @param {number} tilesHoriz 横向\r\n         * @param {number} tilesVert 竖向\r\n         * @param {number} numTiles 数量\r\n         * @param {number} tileDispDuration 间隔时间 \r\n         */\n        function SWTextureAnimator(texture, tilesHoriz, tilesVert, numTiles, tileDispDuration) {\n                _classCallCheck(this, SWTextureAnimator);\n\n                this.textures = texture;\n\n                this.tilesHorizontal = tilesHoriz;\n\n                this.tilesVertical = tilesVert;\n\n                this.numberOfTiles = numTiles;\n\n                this.textures.wrapS = this.textures.wrapT = THREE.RepeatWrapping;\n\n                this.textures.repeat.set(1 / this.tilesHorizontal, 1 / this.tilesVertical);\n\n                this.tileDisplayDuration = tileDispDuration;\n\n                this.currentDisplayTime = 0;\n\n                this.currentTile = 0;\n        }\n\n        /**不停更新 */\n\n\n        _createClass(SWTextureAnimator, [{\n                key: \"update\",\n                value: function update(milliSec) {\n\n                        this.currentDisplayTime += milliSec;\n\n                        while (this.currentDisplayTime > this.tileDisplayDuration) {\n\n                                this.currentDisplayTime -= this.tileDisplayDuration;\n\n                                this.currentTile++;\n\n                                if (this.currentTile == this.numberOfTiles) {\n\n                                        this.currentTile = 0;\n                                }\n\n                                var currentColumn = this.currentTile % this.tilesHorizontal;\n\n                                this.textures.offset.x = currentColumn / this.tilesHorizontal;\n\n                                var currentRow = Math.floor(this.currentTile / this.tilesHorizontal);\n\n                                this.textures.offset.y = currentRow / this.tilesVertical;\n                        }\n                }\n        }]);\n\n        return SWTextureAnimator;\n}();\n\nexports.default = SWTextureAnimator;",null]}