{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\server\\SWServerData.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\server\\SWServerData.js","mtime":1546841932646},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global $*/\n\nvar _SWConstants = require('../tool/SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWArrowInfo = require('../data/SWArrowInfo');\n\nvar _SWArrowInfo2 = _interopRequireDefault(_SWArrowInfo);\n\nvar _SWFacadeByPanoIDInfo = require('../data/SWFacadeByPanoIDInfo');\n\nvar _SWFacadeByPanoIDInfo2 = _interopRequireDefault(_SWFacadeByPanoIDInfo);\n\nvar _SWFloorsInfo = require('../data/SWFloorsInfo');\n\nvar _SWFloorsInfo2 = _interopRequireDefault(_SWFloorsInfo);\n\nvar _SWMarkerInfo = require('../data/SWMarkerInfo');\n\nvar _SWMarkerInfo2 = _interopRequireDefault(_SWMarkerInfo);\n\nvar _SWMultiDataByParentIDInfo = require('../data/SWMultiDataByParentIDInfo');\n\nvar _SWMultiDataByParentIDInfo2 = _interopRequireDefault(_SWMultiDataByParentIDInfo);\n\nvar _SWThumbnailsInfo = require('../data/SWThumbnailsInfo');\n\nvar _SWThumbnailsInfo2 = _interopRequireDefault(_SWThumbnailsInfo);\n\nvar _SWStationInfo = require('../data/SWStationInfo');\n\nvar _SWStationInfo2 = _interopRequireDefault(_SWStationInfo);\n\nvar _SWAllExhibitsForBuilding = require('../data/SWAllExhibitsForBuilding');\n\nvar _SWAllExhibitsForBuilding2 = _interopRequireDefault(_SWAllExhibitsForBuilding);\n\nvar _SWVideosData = require('../data/SWVideosData');\n\nvar _SWVideosData2 = _interopRequireDefault(_SWVideosData);\n\nvar _SWInitializeInstance = require('../tool/SWInitializeInstance');\n\nvar _store2 = require('../../views/redux/store/store');\n\nvar _store3 = _interopRequireDefault(_store2);\n\nvar _action = require('../../views/redux/action');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar external = require('../tool/SWExternalConst.js');\nvar axios = require('axios');\n\n/**\r\n * 获取服务器数据\r\n */\n\nvar ServerData = function () {\n    function ServerData() {\n        _classCallCheck(this, ServerData);\n\n        /**博物馆ID*/\n        this.museumID = \"\";\n        /**建筑ID*/\n        this.displayID = \"\";\n        /**底层数据库链接*/\n        this.serverURL = \"\";\n        /**业务数据库链接*/\n        this.musServerURL = \"\";\n        /**默认第一站全景ID*/\n        this.firstPanoID = \"\";\n        /**数据存放处*/\n        this.resourcesUrl = \"\";\n        /**功能对象*/\n        this.featuresObj = {};\n        /**只加载一次 */\n        this.floorsForBuilding = true;\n    }\n\n    _createClass(ServerData, [{\n        key: 'getmusServerURL',\n        value: function getmusServerURL() {\n            return this.musServerURL;\n        }\n\n        /**\r\n         * 获取配置文件数据\r\n         */\n\n    }, {\n        key: 'getConfig',\n        value: function getConfig() {\n\n            this.museumID = external.server_json.museumID;\n\n            this.displayID = external.server_json.displayID;\n\n            this.serverURL = external.server_json.serverUrl;\n\n            this.musServerURL = external.server_json.musServerUrl;\n\n            this.firstPanoID = external.server_json.firstPanoID;\n\n            this.resourcesUrl = external.server_json.resourcesUrl;\n\n            this.featuresObj = external.server_json.data;\n\n            this.getPanoByID(this.firstPanoID);\n\n            constants.sw_SWModel.init();\n        }\n\n        /**\r\n         * 获得所有楼层站点信息\r\n         */\n\n    }, {\n        key: 'getAllFloorsForBuilding',\n        value: function getAllFloorsForBuilding() {\n            var _this = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                var data = constants.sw_GetSQLData.GetAllFloorsForBuildingFun();\n                this.ReadFloorsForBuildingData(data);\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=GetAllFloorsForBuilding&buildingID=' + this.displayID + '&random=' + Math.random() * 10;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this.ReadFloorsForBuildingData(json.data);\n            });\n        }\n\n        /**读取楼层数据 */\n\n    }, {\n        key: 'ReadFloorsForBuildingData',\n        value: function ReadFloorsForBuildingData(data) {\n            if (data) {\n                if (data.Floors) {\n                    data.Floors.forEach(function (obj) {\n                        new _SWFloorsInfo2.default(obj);\n                    });\n                    //数据来之后可以显示小地图\n                    if (constants.c_mapShow) {\n                        var store = (0, _store3.default)();\n                        store.dispatch((0, _action.show_PanoMap_fun)({\n                            off: true,\n                            phoneOff: true\n                        }));\n                    }\n                }\n            }\n            this.getAllThumbnailsForMuseum();\n            this.getAllExhibitsForBuilding();\n            this.getAllVideos();\n        }\n\n        /**\r\n         * 获得当前站点信息\r\n         * @param {String} panoid 站点ID\r\n         */\n\n    }, {\n        key: 'getPanoByID',\n        value: function getPanoByID(panoid) {\n            var _this2 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                var data = constants.sw_GetSQLData.GetPanoByIDFun(panoid);\n                this.ReadPanoByIDData(data);\n                return;\n            }\n\n            var urls = this.serverURL + '/GetPanoByID?ImageID=' + panoid;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this2.ReadPanoByIDData(json.data.GetPanoByIDResult);\n            });\n        }\n\n        /**\r\n         * 读取所有拍摄站点数据\r\n         * @param {Object} data \r\n         */\n\n    }, {\n        key: 'ReadPanoByIDData',\n        value: function ReadPanoByIDData(data) {\n            if (data) {\n                if (!constants.c_StationInfo || !constants.c_isPreviewImageLoadEnd && constants.c_StationInfo.panoID != data.ImageID) {\n                    constants.c_isPreviewImageLoadEnd = true;\n                    constants.c_StationInfo && (constants.c_LastStopPanoID = constants.c_StationInfo.panoID); //记录上一站ID\n                    constants.c_StationInfo = new _SWStationInfo2.default(data);\n                    // constants.sw_skyBox && constants.sw_skyBox.addThumbnail();\n                    if (this.floorsForBuilding) {\n                        this.floorsForBuilding = false;\n                        this.getAllFloorsForBuilding();\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        /**\r\n         * 激光点云面片数据\r\n         * */\n\n    }, {\n        key: 'getFacadeByPanoID',\n        value: function getFacadeByPanoID() {\n            var _this3 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n                var data = constants.sw_GetSQLData.GetFacadeByPanoIDFun(constants.c_StationInfo.panoID);\n                this.ReadFacadeByPanoIDData(data);\n                return;\n            }\n\n            var urls = this.serverURL + '/GetFacadeByPanoID/?Z=' + constants.c_StationInfo.nz + '&PanoID=' + constants.c_StationInfo.panoID + '&TolerateZ=5';\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this3.ReadFacadeByPanoIDData(json.data.GetFacadeByPanoIDResult);\n            });\n        }\n\n        /**读取墙面片数据 */\n\n    }, {\n        key: 'ReadFacadeByPanoIDData',\n        value: function ReadFacadeByPanoIDData(data) {\n\n            if (data) {\n                constants.c_facadeByPanoIDInfoArr.length = 0;\n                data.forEach(function (obj) {\n                    constants.c_facadeByPanoIDInfoArr.push(new _SWFacadeByPanoIDInfo2.default(obj));\n                });\n                constants.sw_wallMesh.createWallFace();\n            }\n        }\n\n        /**\r\n         * 获取老箭头方法\r\n         * */\n\n    }, {\n        key: 'getOldArrow',\n        value: function getOldArrow() {\n            var _this4 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n\n                var arrowArr = void 0;\n                if (constants.c_siteRepresentation) {\n                    arrowArr = constants.sw_GetSQLData.GetAdjacentPanoFun(constants.c_StationInfo.panoID);\n                    this.ReadOldArrowData(arrowArr, 1);\n                } else {\n                    arrowArr = constants.sw_GetSQLData.GetStreetViewLinkFun(constants.c_StationInfo.panoID);\n                    this.ReadOldArrowData(arrowArr, 3);\n                }\n                return;\n            }\n\n            var urls = this.serverURL + '/GetAdjacentPano/?date=' + Math.random() * 100 + '&ImageID=' + constants.c_StationInfo.panoID;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this4.ReadOldArrowData(json.data.GetAdjacentPanoResult);\n            });\n        }\n\n        /**读取旧箭头数据 */\n\n    }, {\n        key: 'ReadOldArrowData',\n        value: function ReadOldArrowData(data, type) {\n            if (data && data.length != 0) {\n                constants.c_AdjacentPanoInfoArr.length = 0;\n                data.forEach(function (obj) {\n                    constants.c_AdjacentPanoInfoArr.push(new _SWArrowInfo2.default(obj, type));\n                });\n                (0, _SWInitializeInstance.AddOldArrow)();\n            } else {\n                this.getNewArrow();\n            }\n        }\n\n        //获得新箭头\n\n    }, {\n        key: 'getNewArrow',\n        value: function getNewArrow() {\n            var _this5 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus && constants.c_siteRepresentation) {\n                //读取本地文件\n                var arrowArr = constants.sw_GetSQLData.getLinkByPanoIDFun(constants.c_StationInfo.panoID);\n                this.ReadNewArrowData(arrowArr);\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=getLinkByPanoID&panoID=' + constants.c_StationInfo.panoID;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this5.ReadNewArrowData(json.data.Link);\n            });\n        }\n\n        /**读取新箭头数据 */\n\n    }, {\n        key: 'ReadNewArrowData',\n        value: function ReadNewArrowData(data) {\n\n            constants.c_ArrowPanoInfoArr.length = 0;\n            if (data && data.length != 0) {\n                data.forEach(function (obj) {\n                    constants.c_ArrowPanoInfoArr.push(new _SWArrowInfo2.default(obj, 2));\n                });\n                (0, _SWInitializeInstance.AddNewArrow)();\n            }\n        }\n\n        /**\r\n         * 地面跳转\r\n         * @param {Object} obj 传入参数 obj.type = 1 单机版 =2网络版 {obj.panoID 单机版参数 ,obj.x 3DS坐标X, obj.y 3DS坐标Y, obj.z 3DS坐标Z, obj.panoid 面片ID}\r\n         * */\n\n    }, {\n        key: 'getOtherPanoByPosition',\n        value: function getOtherPanoByPosition(obj) {\n            var _this6 = this;\n\n            if (obj.type == 1) {\n                var data = constants.sw_GetSQLData.GetPanoByIDFun(obj.panoID);\n                this.ReadPanoByIDData(data);\n            } else {\n                var urls = this.serverURL + '/GetOtherPanoByPosition1?TolerateZ=5&Tolerate=100&Z=' + obj.z + '&Y=' + obj.y + '&ImageID=' + obj.panoid + '&X=' + obj.x;\n                axios.get(urls, {\n                    responseType: \"json\"\n                }).then(function (json) {\n                    _this6.ReadPanoByIDData(json.data.GetOtherPanoByPositionResult);\n                });\n            }\n        }\n\n        /**\r\n         * 墙面跳转\r\n         * @param {Object} obj 传入参数 obj.type = 1 单机版 =2网络版 {obj.panoID 单机版参数 ,obj.x 3DS坐标X, obj.y 3DS坐标Y, obj.z 3DS坐标Z, obj.facadeid 面片ID}\r\n         */\n\n    }, {\n        key: 'getOtherPanoByFacadeID',\n        value: function getOtherPanoByFacadeID(obj) {\n            var _this7 = this;\n\n            if (obj.type == 1) {\n                var data = constants.sw_GetSQLData.GetPanoByIDFun(obj.panoID);\n                if (this.ReadPanoByIDData(data)) {\n                    constants.c_isWallClickRotateBoo = true;\n                }\n            } else {\n                var urls = this.serverURL + '/GetOtherPanoByFacadeID?facadeID=' + obj.facadeid + '&Z=' + obj.z + '&Y=' + obj.y + '&X=' + obj.x;\n                axios.get(urls, {\n                    responseType: \"json\"\n                }).then(function (json) {\n                    if (_this7.ReadPanoByIDData(json.data.GetOtherPanoByFacadeIDResult)) {\n                        constants.c_isWallClickRotateBoo = true;\n                    }\n                });\n            }\n        }\n\n        /**\r\n         * 获取标注\r\n         * */\n\n    }, {\n        key: 'getMarkerByPanoID',\n        value: function getMarkerByPanoID() {\n            var _this8 = this;\n\n            constants.c_markerInfoArr.length = 0;\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n                var data = constants.sw_GetSQLData.getMarkByPanoIDFun(constants.c_StationInfo.panoID);\n                this.ReadAllMarkerData(data);\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=getMarkerByPanoID&panoID=' + constants.c_StationInfo.panoID;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this8.ReadAllMarkerData(json.data.MarkerInfo);\n            });\n        }\n\n        /**\r\n         * 读取标注信息\r\n         * @param {Object} data \r\n         */\n\n    }, {\n        key: 'ReadAllMarkerData',\n        value: function ReadAllMarkerData(data) {\n            if (data) {\n                data.forEach(function (obj) {\n                    constants.c_markerInfoArr.push(new _SWMarkerInfo2.default(obj));\n                });\n            }\n        }\n\n        /**\r\n         * 获取推荐展厅数据\r\n         * */\n\n    }, {\n        key: 'getAllThumbnailsForMuseum',\n        value: function getAllThumbnailsForMuseum() {\n            var _this9 = this;\n\n            if (constants.c_isEditorStatus || constants.c_thumbnailsForMuseum.length > 0) {\n                return;\n            }\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n                var data = constants.sw_GetSQLData.GetAllThumbnailsForBuildingFun();\n                this.ReadAllThumbnailsData(data);\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=GetAllThumbnailsForBuilding&buildingID=' + this.displayID;\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this9.ReadAllThumbnailsData(json.data.thumbnails);\n            });\n        }\n\n        /**\r\n         * 读取所有推荐展厅\r\n         * @param {Object} data \r\n         */\n\n    }, {\n        key: 'ReadAllThumbnailsData',\n        value: function ReadAllThumbnailsData(data) {\n            if (data) {\n                data.forEach(function (obj) {\n                    constants.c_thumbnailsForMuseum.push(new _SWThumbnailsInfo2.default(obj));\n                });\n            }\n        }\n\n        /**\r\n         * 获取所有文物信息列表\r\n         * */\n\n    }, {\n        key: 'getAllExhibitsForBuilding',\n        value: function getAllExhibitsForBuilding() {\n            var _this10 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n\n                var data = constants.sw_GetSQLData.GetAllExhibitsForBuildingFun();\n\n                this.ReadAllExhibitsData(data);\n\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=GetAllExhibitsForBuilding&buildingID=' + this.displayID;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n                _this10.ReadAllExhibitsData(json.data.Exhibits);\n            });\n        }\n\n        /**\r\n         * 读取所有文物信息\r\n         * @param {Object} data \r\n         */\n\n    }, {\n        key: 'ReadAllExhibitsData',\n        value: function ReadAllExhibitsData(data) {\n            if (data) {\n\n                data.forEach(function (obj) {\n\n                    var allExhibits = new _SWAllExhibitsForBuilding2.default(obj);\n\n                    allExhibits.markerID.forEach(function (markerid) {\n                        //所有标注对应说明表\n\n                        constants.c_allExhibitsForMarkerTable.add(markerid, allExhibits);\n                    });\n\n                    var markerIDArr = allExhibits.markerID[0]; //显示照片墙用\n                    constants.c_allExhibitsForBuildingTable.add(markerIDArr, allExhibits);\n                });\n            }\n        }\n\n        /**\r\n         * 获取单个文物信息\r\n         * */\n\n    }, {\n        key: 'getMultiDataByParentID',\n        value: function getMultiDataByParentID(eid, type) {\n            var _this11 = this;\n\n            var muType = type;\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n\n                var data = constants.sw_GetSQLData.GetMultiDataByParentIDFun(eid);\n\n                this.ReadMultiData(data, eid, muType);\n\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=GetMultiDataByParentID&parentID=' + eid;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                _this11.ReadMultiData(json.data.MultiDatas, eid, muType);\n            });\n        }\n\n        /**读取单个热点图片 */\n\n    }, {\n        key: 'ReadMultiData',\n        value: function ReadMultiData(data, eid, muType) {\n            if (data) {\n                var arr = [];\n\n                data.forEach(function (obj) {\n\n                    var multiData = new _SWMultiDataByParentIDInfo2.default(obj);\n\n                    var arr1 = multiData.filePath.split('/');\n\n                    multiData.PCMax = constants.sw_getService.resourcesUrl + '/' + multiData.filePath; //电脑版大图\n\n                    multiData.phoneMax = constants.sw_getService.resourcesUrl + '/' + arr1[0] + '/' + arr1[1] + '/' + arr1[2] + '/phoneMax/' + arr1[3]; //手机版大图\n\n                    multiData.thumbnail = constants.sw_getService.resourcesUrl + '/' + arr1[0] + '/' + arr1[1] + '/' + arr1[2] + '/phone/' + arr1[3];\n\n                    arr.push(multiData);\n                });\n\n                constants.c_multiDataByParentIDTable.add(eid, arr);\n\n                if (muType == 1) {\n                    //图文\n\n                    var store = (0, _store3.default)();\n\n                    store.dispatch((0, _action.show_MarkerInterface_fun)({\n                        imglist: arr\n                    }));\n                } else {\n                    //图片\n                    var markerImgList = [],\n                        markerthumbs = [];\n\n                    arr.forEach(function (item) {\n\n                        markerImgList.push(constants.c_currentState == constants.c_currentStateEnum.phoneStatus ? item.phoneMax : item.PCMax);\n\n                        markerthumbs.push(item.thumbnail);\n                    });\n\n                    var _store = (0, _store3.default)();\n\n                    _store.dispatch((0, _action.show_ViewPicture_fun)({\n                        off: true,\n                        idx: 0,\n                        imageList: markerImgList,\n                        thumbs: markerthumbs\n                    }));\n                }\n            }\n        }\n\n        /**\r\n         * 获取所有视频列表\r\n         * */\n\n    }, {\n        key: 'getAllVideos',\n        value: function getAllVideos() {\n            var _this12 = this;\n\n            if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\n                //读取本地文件\n\n                var data = constants.sw_GetSQLData.getAllVideoFun();\n\n                this.ReadAllVideosData(data);\n\n                return;\n            }\n\n            var urls = this.musServerURL + '?method=getAllVideos';\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                _this12.ReadAllVideosData(json.data.videoInfo);\n            });\n        }\n\n        /**\r\n         * 读取视频文件\r\n         * @param {Object} data \r\n         */\n\n    }, {\n        key: 'ReadAllVideosData',\n        value: function ReadAllVideosData(data) {\n            if (data) {\n\n                data.forEach(function (obj) {\n\n                    var vd = new _SWVideosData2.default(obj);\n\n                    var arr = [];\n\n                    if (constants.c_allVideoTable.containsKey(vd.panoID)) {\n\n                        arr = constants.c_allVideoTable.getValue(vd.panoID);\n                    }\n\n                    arr.push(vd);\n\n                    constants.c_allVideoTable.add(vd.panoID, arr);\n                });\n            }\n        }\n\n        /**获取喜欢数 */\n\n    }, {\n        key: 'GetLikesForExhibitID',\n        value: function GetLikesForExhibitID(exhibitid) {\n            var urls = this.musServerURL + '?method=GetLikesForExhibitID&exhibitid=' + exhibitid;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                if (json.data.Likes) {\n\n                    var allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\n\n                    allExhibits.forEach(function (item) {\n\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\n\n                            item.Likes = json.data.Likes;\n                        }\n                    });\n\n                    var store = (0, _store3.default)();\n\n                    store.dispatch((0, _action.show_MarkerInterface_fun)({\n                        likeNum: json.data.Likes\n                    }));\n                }\n            });\n        }\n\n        /**新增喜欢数 */\n\n    }, {\n        key: 'SetLikesForExhibitID',\n        value: function SetLikesForExhibitID(exhibitid) {\n            var urls = this.musServerURL + '?method=SetLikesForExhibitID&exhibitid=' + exhibitid;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                if (json.data.Likes) {\n\n                    var allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\n\n                    allExhibits.forEach(function (item) {\n\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\n\n                            item.likes = json.data.Likes;\n                        }\n                    });\n\n                    var store = (0, _store3.default)();\n\n                    store.dispatch((0, _action.show_MarkerInterface_fun)({\n                        likeNum: json.data.Likes\n                    }));\n                }\n            });\n        }\n\n        /**新增评论 按照文物列表exhibitid*/\n\n    }, {\n        key: 'AddComment',\n        value: function AddComment(exhibitid, contents) {\n\n            var urls = this.musServerURL + '?method=AddComment&panoid=&uid=&exhibitid=' + exhibitid + '&contents=' + contents;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                if (json.data.Message) {\n\n                    var allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\n\n                    allExhibits.forEach(function (item) {\n\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\n\n                            item.commentNum = parseInt(json.data.Message);\n                        }\n                    });\n                }\n            });\n        }\n\n        /**查询总数 */\n\n    }, {\n        key: 'SelectCommentNum',\n        value: function SelectCommentNum(exhibitid) {\n            var urls = this.musServerURL + '?method=SelectCommentNum&panoid=&exhibitid=' + exhibitid;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                if (json.data.Message) {\n\n                    var allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\n\n                    allExhibits.forEach(function (item) {\n\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\n\n                            item.commentNum = parseInt(json.data.Message);\n                        }\n                    });\n                }\n            });\n        }\n\n        /**查询最新评论20条 */\n\n    }, {\n        key: 'GetNewestComment',\n        value: function GetNewestComment(exhibitid) {\n            var urls = this.musServerURL + '?method=GetNewestComment&panoid=&exhibitid=' + exhibitid;\n\n            axios.get(urls, {\n                responseType: \"json\"\n            }).then(function (json) {\n\n                if (json.data.Message) {\n\n                    // let commentTable = new HashTable();\n\n                    // let exhibitID = \"\";\n\n                    // json.data.Message.forEach((obj, idx) => {\n\n                    //     let swComment = new SWExhibitComment(obj);\n\n                    //     exhibitID = swComment.exhibitID;\n\n                    //     commentTable.add(swComment.gUID, swComment);\n                    // });\n\n                    // let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\n\n                    // allExhibits.forEach((item) => {\n\n                    //     if (item.exhibitID == exhibitID) {\n\n                    //         item.commentTable = commentTable;\n                    //     }\n                    // });\n\n                    var store = (0, _store3.default)();\n\n                    store.dispatch((0, _action.show_MarkerInterface_fun)({\n                        commentList: json.data.Message\n                    }));\n                }\n            });\n        }\n\n        /**分页查询，每次50条 */\n\n    }, {\n        key: 'GetAllComment',\n        value: function GetAllComment() {}\n    }]);\n\n    return ServerData;\n}();\n\nexports.default = ServerData;",{"version":3,"sources":["app\\src\\server\\SWServerData.js"],"names":["constants","external","require","axios","ServerData","museumID","displayID","serverURL","musServerURL","firstPanoID","resourcesUrl","featuresObj","floorsForBuilding","server_json","serverUrl","musServerUrl","data","getPanoByID","sw_SWModel","init","c_currentState","c_currentStateEnum","editorStatus","sw_GetSQLData","GetAllFloorsForBuildingFun","ReadFloorsForBuildingData","urls","Math","random","get","responseType","then","json","Floors","forEach","obj","FloorsInfo","c_mapShow","store","dispatch","off","phoneOff","getAllThumbnailsForMuseum","getAllExhibitsForBuilding","getAllVideos","panoid","GetPanoByIDFun","ReadPanoByIDData","GetPanoByIDResult","c_StationInfo","c_isPreviewImageLoadEnd","panoID","ImageID","c_LastStopPanoID","StationInfo","getAllFloorsForBuilding","GetFacadeByPanoIDFun","ReadFacadeByPanoIDData","nz","GetFacadeByPanoIDResult","c_facadeByPanoIDInfoArr","length","push","FacadeByPanoIDInfo","sw_wallMesh","createWallFace","arrowArr","c_siteRepresentation","GetAdjacentPanoFun","ReadOldArrowData","GetStreetViewLinkFun","GetAdjacentPanoResult","type","c_AdjacentPanoInfoArr","ArrowInfo","getNewArrow","getLinkByPanoIDFun","ReadNewArrowData","Link","c_ArrowPanoInfoArr","z","y","x","GetOtherPanoByPositionResult","c_isWallClickRotateBoo","facadeid","GetOtherPanoByFacadeIDResult","c_markerInfoArr","getMarkByPanoIDFun","ReadAllMarkerData","MarkerInfo","SWMarkerInfo","c_isEditorStatus","c_thumbnailsForMuseum","GetAllThumbnailsForBuildingFun","ReadAllThumbnailsData","thumbnails","ThumbnailsInfo","GetAllExhibitsForBuildingFun","ReadAllExhibitsData","Exhibits","allExhibits","AllExhibitsForBuilding","markerID","markerid","c_allExhibitsForMarkerTable","add","markerIDArr","c_allExhibitsForBuildingTable","eid","muType","GetMultiDataByParentIDFun","ReadMultiData","MultiDatas","arr","multiData","MultiDataByParentID","arr1","filePath","split","PCMax","sw_getService","phoneMax","thumbnail","c_multiDataByParentIDTable","imglist","markerImgList","markerthumbs","item","phoneStatus","idx","imageList","thumbs","getAllVideoFun","ReadAllVideosData","videoInfo","vd","VideosData","c_allVideoTable","containsKey","getValue","exhibitid","Likes","getValues","exhibitID","c_likeToExhibitID","likeNum","likes","contents","Message","commentNum","parseInt","commentList"],"mappings":"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","file":"SWServerData.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global $*/\r\n\r\nimport * as constants from '../tool/SWConstants';\r\nimport ArrowInfo from '../data/SWArrowInfo';\r\nimport FacadeByPanoIDInfo from '../data/SWFacadeByPanoIDInfo';\r\nimport FloorsInfo from '../data/SWFloorsInfo';\r\nimport SWMarkerInfo from '../data/SWMarkerInfo';\r\nimport MultiDataByParentID from '../data/SWMultiDataByParentIDInfo';\r\nimport ThumbnailsInfo from '../data/SWThumbnailsInfo';\r\nimport StationInfo from '../data/SWStationInfo';\r\nimport AllExhibitsForBuilding from '../data/SWAllExhibitsForBuilding';\r\nimport VideosData from '../data/SWVideosData';\r\n\r\nimport {\r\n    AddNewArrow,\r\n    AddOldArrow\r\n} from '../tool/SWInitializeInstance';\r\nimport initStore from '../../views/redux/store/store';\r\nimport {\r\n    show_Thumbnails_fun,\r\n    show_PanoMap_fun,\r\n    show_MarkerInterface_fun,\r\n    show_ViewPicture_fun\r\n} from '../../views/redux/action';\r\nconst external = require('../tool/SWExternalConst.js');\r\nconst axios = require('axios');\r\n\r\n/**\r\n * 获取服务器数据\r\n */\r\nclass ServerData {\r\n    constructor() {\r\n        /**博物馆ID*/\r\n        this.museumID = \"\";\r\n        /**建筑ID*/\r\n        this.displayID = \"\";\r\n        /**底层数据库链接*/\r\n        this.serverURL = \"\";\r\n        /**业务数据库链接*/\r\n        this.musServerURL = \"\";\r\n        /**默认第一站全景ID*/\r\n        this.firstPanoID = \"\";\r\n        /**数据存放处*/\r\n        this.resourcesUrl = \"\";\r\n        /**功能对象*/\r\n        this.featuresObj = {};\r\n        /**只加载一次 */\r\n        this.floorsForBuilding = true;\r\n    }\r\n\r\n    getmusServerURL() {\r\n        return this.musServerURL;\r\n    }\r\n\r\n    /**\r\n     * 获取配置文件数据\r\n     */\r\n    getConfig() {\r\n\r\n        this.museumID = external.server_json.museumID;\r\n\r\n        this.displayID = external.server_json.displayID;\r\n\r\n        this.serverURL = external.server_json.serverUrl;\r\n\r\n        this.musServerURL = external.server_json.musServerUrl;\r\n\r\n        this.firstPanoID = external.server_json.firstPanoID;\r\n\r\n        this.resourcesUrl = external.server_json.resourcesUrl;\r\n\r\n        this.featuresObj = external.server_json.data;\r\n\r\n        this.getPanoByID(this.firstPanoID);\r\n        \r\n        constants.sw_SWModel.init();\r\n    }\r\n\r\n    /**\r\n     * 获得所有楼层站点信息\r\n     */\r\n    getAllFloorsForBuilding() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\r\n            let data = constants.sw_GetSQLData.GetAllFloorsForBuildingFun();\r\n            this.ReadFloorsForBuildingData(data);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=GetAllFloorsForBuilding&buildingID=${this.displayID }&random=${Math.random() * 10}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadFloorsForBuildingData(json.data);\r\n            });\r\n    }\r\n\r\n    /**读取楼层数据 */\r\n    ReadFloorsForBuildingData(data) {\r\n        if (data) {\r\n            if (data.Floors) {\r\n                data.Floors.forEach((obj) => {\r\n                    new FloorsInfo(obj);\r\n                });\r\n                //数据来之后可以显示小地图\r\n                if (constants.c_mapShow) {\r\n                    let store = initStore();\r\n                    store.dispatch(show_PanoMap_fun({\r\n                        off: true,\r\n                        phoneOff: true\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        this.getAllThumbnailsForMuseum();\r\n        this.getAllExhibitsForBuilding();\r\n        this.getAllVideos();\r\n    }\r\n\r\n    /**\r\n     * 获得当前站点信息\r\n     * @param {String} panoid 站点ID\r\n     */\r\n    getPanoByID(panoid) {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) {\r\n            let data = constants.sw_GetSQLData.GetPanoByIDFun(panoid);\r\n            this.ReadPanoByIDData(data);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.serverURL}/GetPanoByID?ImageID=${panoid}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadPanoByIDData(json.data.GetPanoByIDResult);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 读取所有拍摄站点数据\r\n     * @param {Object} data \r\n     */\r\n    ReadPanoByIDData(data) {\r\n        if (data) {\r\n            if (!constants.c_StationInfo || (!constants.c_isPreviewImageLoadEnd && constants.c_StationInfo.panoID != data.ImageID)) {\r\n                constants.c_isPreviewImageLoadEnd = true;\r\n                constants.c_StationInfo && (constants.c_LastStopPanoID = constants.c_StationInfo.panoID); //记录上一站ID\r\n                constants.c_StationInfo = new StationInfo(data);\r\n                // constants.sw_skyBox && constants.sw_skyBox.addThumbnail();\r\n                if (this.floorsForBuilding) {\r\n                    this.floorsForBuilding = false;\r\n                    this.getAllFloorsForBuilding();\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 激光点云面片数据\r\n     * */\r\n    getFacadeByPanoID() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n            let data = constants.sw_GetSQLData.GetFacadeByPanoIDFun(constants.c_StationInfo.panoID);\r\n            this.ReadFacadeByPanoIDData(data);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.serverURL}/GetFacadeByPanoID/?Z=${constants.c_StationInfo.nz}&PanoID=${constants.c_StationInfo.panoID}&TolerateZ=5`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadFacadeByPanoIDData(json.data.GetFacadeByPanoIDResult);\r\n            });\r\n    }\r\n\r\n    /**读取墙面片数据 */\r\n    ReadFacadeByPanoIDData(data) {\r\n\r\n        if (data) {\r\n            constants.c_facadeByPanoIDInfoArr.length = 0;\r\n            data.forEach((obj) => {\r\n                constants.c_facadeByPanoIDInfoArr.push(new FacadeByPanoIDInfo(obj));\r\n            });\r\n            constants.sw_wallMesh.createWallFace();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取老箭头方法\r\n     * */\r\n    getOldArrow() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n\r\n            let arrowArr;\r\n            if (constants.c_siteRepresentation) {\r\n                arrowArr = constants.sw_GetSQLData.GetAdjacentPanoFun(constants.c_StationInfo.panoID);\r\n                this.ReadOldArrowData(arrowArr, 1);\r\n            } else {\r\n                arrowArr = constants.sw_GetSQLData.GetStreetViewLinkFun(constants.c_StationInfo.panoID);\r\n                this.ReadOldArrowData(arrowArr, 3);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.serverURL}/GetAdjacentPano/?date=${Math.random() * 100}&ImageID=${constants.c_StationInfo.panoID}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadOldArrowData(json.data.GetAdjacentPanoResult);\r\n            });\r\n    }\r\n\r\n    /**读取旧箭头数据 */\r\n    ReadOldArrowData(data, type) {\r\n        if (data && data.length != 0) {\r\n            constants.c_AdjacentPanoInfoArr.length = 0;\r\n            data.forEach((obj) => {\r\n                constants.c_AdjacentPanoInfoArr.push(new ArrowInfo(obj, type));\r\n            });\r\n            AddOldArrow();\r\n        } else {\r\n            this.getNewArrow();\r\n        }\r\n    }\r\n\r\n    //获得新箭头\r\n    getNewArrow() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus && constants.c_siteRepresentation) { //读取本地文件\r\n            let arrowArr = constants.sw_GetSQLData.getLinkByPanoIDFun(constants.c_StationInfo.panoID);\r\n            this.ReadNewArrowData(arrowArr);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=getLinkByPanoID&panoID=${constants.c_StationInfo.panoID}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadNewArrowData(json.data.Link);\r\n            });\r\n    }\r\n\r\n    /**读取新箭头数据 */\r\n    ReadNewArrowData(data) {\r\n\r\n        constants.c_ArrowPanoInfoArr.length = 0;\r\n        if (data && data.length != 0) {\r\n            data.forEach((obj) => {\r\n                constants.c_ArrowPanoInfoArr.push(new ArrowInfo(obj, 2));\r\n            });\r\n            AddNewArrow();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 地面跳转\r\n     * @param {Object} obj 传入参数 obj.type = 1 单机版 =2网络版 {obj.panoID 单机版参数 ,obj.x 3DS坐标X, obj.y 3DS坐标Y, obj.z 3DS坐标Z, obj.panoid 面片ID}\r\n     * */\r\n    getOtherPanoByPosition(obj) {\r\n\r\n        if (obj.type == 1) {\r\n            let data = constants.sw_GetSQLData.GetPanoByIDFun(obj.panoID);\r\n            this.ReadPanoByIDData(data);\r\n        } else {\r\n            let urls = `${this.serverURL}/GetOtherPanoByPosition1?TolerateZ=5&Tolerate=100&Z=${obj.z}&Y=${obj.y}&ImageID=${obj.panoid}&X=${obj.x}`;\r\n            axios.get(urls, {\r\n                    responseType: \"json\"\r\n                })\r\n                .then(json => {\r\n                    this.ReadPanoByIDData(json.data.GetOtherPanoByPositionResult);\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 墙面跳转\r\n     * @param {Object} obj 传入参数 obj.type = 1 单机版 =2网络版 {obj.panoID 单机版参数 ,obj.x 3DS坐标X, obj.y 3DS坐标Y, obj.z 3DS坐标Z, obj.facadeid 面片ID}\r\n     */\r\n    getOtherPanoByFacadeID(obj) {\r\n\r\n        if (obj.type == 1) {\r\n            let data = constants.sw_GetSQLData.GetPanoByIDFun(obj.panoID);\r\n            if (this.ReadPanoByIDData(data)) {\r\n                constants.c_isWallClickRotateBoo = true;\r\n            }\r\n\r\n        } else {\r\n            let urls = `${this.serverURL}/GetOtherPanoByFacadeID?facadeID=${obj.facadeid}&Z=${obj.z}&Y=${obj.y}&X=${obj.x}`;\r\n            axios.get(urls, {\r\n                    responseType: \"json\"\r\n                })\r\n                .then(json => {\r\n                    if (this.ReadPanoByIDData(json.data.GetOtherPanoByFacadeIDResult)) {\r\n                        constants.c_isWallClickRotateBoo = true;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取标注\r\n     * */\r\n    getMarkerByPanoID() {\r\n\r\n        constants.c_markerInfoArr.length = 0;\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n            let data = constants.sw_GetSQLData.getMarkByPanoIDFun(constants.c_StationInfo.panoID);\r\n            this.ReadAllMarkerData(data);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=getMarkerByPanoID&panoID=${constants.c_StationInfo.panoID}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadAllMarkerData(json.data.MarkerInfo);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 读取标注信息\r\n     * @param {Object} data \r\n     */\r\n    ReadAllMarkerData(data) {\r\n        if (data) {\r\n            data.forEach((obj) => {\r\n                constants.c_markerInfoArr.push(new SWMarkerInfo(obj));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取推荐展厅数据\r\n     * */\r\n    getAllThumbnailsForMuseum() {\r\n\r\n        if (constants.c_isEditorStatus || constants.c_thumbnailsForMuseum.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n            let data = constants.sw_GetSQLData.GetAllThumbnailsForBuildingFun();\r\n            this.ReadAllThumbnailsData(data);\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=GetAllThumbnailsForBuilding&buildingID=${this.displayID}`;\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadAllThumbnailsData(json.data.thumbnails);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 读取所有推荐展厅\r\n     * @param {Object} data \r\n     */\r\n    ReadAllThumbnailsData(data) {\r\n        if (data) {\r\n            data.forEach((obj) => {\r\n                constants.c_thumbnailsForMuseum.push(new ThumbnailsInfo(obj));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取所有文物信息列表\r\n     * */\r\n    getAllExhibitsForBuilding() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n\r\n            let data = constants.sw_GetSQLData.GetAllExhibitsForBuildingFun();\r\n\r\n            this.ReadAllExhibitsData(data);\r\n\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=GetAllExhibitsForBuilding&buildingID=${this.displayID}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n                this.ReadAllExhibitsData(json.data.Exhibits);\r\n\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 读取所有文物信息\r\n     * @param {Object} data \r\n     */\r\n    ReadAllExhibitsData(data) {\r\n        if (data) {\r\n\r\n            data.forEach((obj) => {\r\n\r\n                let allExhibits = new AllExhibitsForBuilding(obj);\r\n\r\n                allExhibits.markerID.forEach((markerid) => { //所有标注对应说明表\r\n\r\n                    constants.c_allExhibitsForMarkerTable.add(markerid, allExhibits);\r\n\r\n                });\r\n\r\n                let markerIDArr = allExhibits.markerID[0]; //显示照片墙用\r\n                constants.c_allExhibitsForBuildingTable.add(markerIDArr, allExhibits);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取单个文物信息\r\n     * */\r\n    getMultiDataByParentID(eid, type) {\r\n\r\n        let muType = type;\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n\r\n            let data = constants.sw_GetSQLData.GetMultiDataByParentIDFun(eid);\r\n\r\n            this.ReadMultiData(data, eid, muType);\r\n\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=GetMultiDataByParentID&parentID=${eid}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                this.ReadMultiData(json.data.MultiDatas, eid, muType);\r\n\r\n            });\r\n    }\r\n\r\n    /**读取单个热点图片 */\r\n    ReadMultiData(data, eid, muType) {\r\n        if (data) {\r\n            let arr = [];\r\n\r\n            data.forEach((obj) => {\r\n\r\n                let multiData = new MultiDataByParentID(obj);\r\n\r\n                let arr1 = multiData.filePath.split('/');\r\n\r\n                multiData.PCMax = `${constants.sw_getService.resourcesUrl}/${multiData.filePath}`; //电脑版大图\r\n\r\n                multiData.phoneMax = `${constants.sw_getService.resourcesUrl}/${arr1[0]}/${arr1[1]}/${arr1[2]}/phoneMax/${arr1[3]}`; //手机版大图\r\n\r\n                multiData.thumbnail = `${constants.sw_getService.resourcesUrl}/${arr1[0]}/${arr1[1]}/${arr1[2]}/phone/${arr1[3]}`;\r\n\r\n                arr.push(multiData);\r\n            });\r\n\r\n            constants.c_multiDataByParentIDTable.add(eid, arr);\r\n\r\n            if (muType == 1) { //图文\r\n\r\n                let store = initStore();\r\n\r\n                store.dispatch(show_MarkerInterface_fun({\r\n                    imglist: arr\r\n                }));\r\n\r\n            } else { //图片\r\n                let markerImgList = [],\r\n                    markerthumbs = [];\r\n\r\n                arr.forEach((item) => {\r\n\r\n                    markerImgList.push(constants.c_currentState == constants.c_currentStateEnum.phoneStatus ? item.phoneMax : item.PCMax);\r\n\r\n                    markerthumbs.push(item.thumbnail);\r\n                });\r\n\r\n                let store = initStore();\r\n\r\n                store.dispatch(show_ViewPicture_fun({\r\n                    off: true,\r\n                    idx: 0,\r\n                    imageList: markerImgList,\r\n                    thumbs: markerthumbs\r\n                }));\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取所有视频列表\r\n     * */\r\n    getAllVideos() {\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.editorStatus) { //读取本地文件\r\n\r\n            let data = constants.sw_GetSQLData.getAllVideoFun();\r\n\r\n            this.ReadAllVideosData(data);\r\n\r\n            return;\r\n        }\r\n\r\n        let urls = `${this.musServerURL}?method=getAllVideos`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                this.ReadAllVideosData(json.data.videoInfo);\r\n\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 读取视频文件\r\n     * @param {Object} data \r\n     */\r\n    ReadAllVideosData(data) {\r\n        if (data) {\r\n\r\n            data.forEach((obj) => {\r\n\r\n                let vd = new VideosData(obj);\r\n\r\n                let arr = [];\r\n\r\n                if (constants.c_allVideoTable.containsKey(vd.panoID)) {\r\n\r\n                    arr = constants.c_allVideoTable.getValue(vd.panoID);\r\n                }\r\n\r\n                arr.push(vd);\r\n\r\n                constants.c_allVideoTable.add(vd.panoID, arr);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**获取喜欢数 */\r\n    GetLikesForExhibitID(exhibitid) {\r\n        let urls = `${this.musServerURL}?method=GetLikesForExhibitID&exhibitid=${exhibitid}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                if (json.data.Likes) {\r\n\r\n                    let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\r\n\r\n                    allExhibits.forEach((item) => {\r\n\r\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\r\n\r\n                            item.Likes = json.data.Likes;\r\n\r\n                        }\r\n                    });\r\n\r\n                    let store = initStore();\r\n\r\n                    store.dispatch(show_MarkerInterface_fun({\r\n                        likeNum: json.data.Likes\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n\r\n    /**新增喜欢数 */\r\n    SetLikesForExhibitID(exhibitid) {\r\n        let urls = `${this.musServerURL}?method=SetLikesForExhibitID&exhibitid=${exhibitid}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                if (json.data.Likes) {\r\n\r\n                    let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\r\n\r\n                    allExhibits.forEach((item) => {\r\n\r\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\r\n\r\n                            item.likes = json.data.Likes;\r\n\r\n                        }\r\n                    });\r\n\r\n                    let store = initStore();\r\n\r\n                    store.dispatch(show_MarkerInterface_fun({\r\n                        likeNum: json.data.Likes\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n\r\n    /**新增评论 按照文物列表exhibitid*/\r\n    AddComment(exhibitid, contents) {\r\n\r\n        let urls = `${this.musServerURL}?method=AddComment&panoid=&uid=&exhibitid=${exhibitid}&contents=${contents}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                if (json.data.Message) {\r\n\r\n                    let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\r\n\r\n                    allExhibits.forEach((item) => {\r\n\r\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\r\n\r\n                            item.commentNum = parseInt(json.data.Message);\r\n\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**查询总数 */\r\n    SelectCommentNum(exhibitid) {\r\n        let urls = `${this.musServerURL}?method=SelectCommentNum&panoid=&exhibitid=${exhibitid}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                if (json.data.Message) {\r\n\r\n                    let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\r\n\r\n                    allExhibits.forEach((item) => {\r\n\r\n                        if (item.exhibitID == constants.c_likeToExhibitID) {\r\n\r\n                            item.commentNum = parseInt(json.data.Message);\r\n\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**查询最新评论20条 */\r\n    GetNewestComment(exhibitid) {\r\n        let urls = `${this.musServerURL}?method=GetNewestComment&panoid=&exhibitid=${exhibitid}`;\r\n\r\n        axios.get(urls, {\r\n                responseType: \"json\"\r\n            })\r\n            .then(json => {\r\n\r\n                if (json.data.Message) {\r\n\r\n                    // let commentTable = new HashTable();\r\n\r\n                    // let exhibitID = \"\";\r\n\r\n                    // json.data.Message.forEach((obj, idx) => {\r\n\r\n                    //     let swComment = new SWExhibitComment(obj);\r\n\r\n                    //     exhibitID = swComment.exhibitID;\r\n\r\n                    //     commentTable.add(swComment.gUID, swComment);\r\n                    // });\r\n\r\n                    // let allExhibits = constants.c_allExhibitsForBuildingTable.getValues();\r\n\r\n                    // allExhibits.forEach((item) => {\r\n\r\n                    //     if (item.exhibitID == exhibitID) {\r\n\r\n                    //         item.commentTable = commentTable;\r\n                    //     }\r\n                    // });\r\n\r\n                    let store = initStore();\r\n\r\n                    store.dispatch(show_MarkerInterface_fun({\r\n                        commentList: json.data.Message\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n\r\n    /**分页查询，每次50条 */\r\n    GetAllComment() {\r\n\r\n    }\r\n\r\n}\r\nexport default ServerData;"]}]}