{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\draw\\SWDrawString.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\draw\\SWDrawString.js","mtime":1537409793660},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar _SWTool = require('../../tool/SWTool');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// const external = require('../../tool/SWExternalConst');\n/**\r\n * 绘制字符串\r\n */\nvar SWDrawString = function () {\n        function SWDrawString() {\n                var _this = this;\n\n                _classCallCheck(this, SWDrawString);\n\n                this.font = undefined;\n\n                this.textArr = [];\n\n                //字体用的是绝对地址\n                (0, _SWTool.getFont)('http://ojv7mano6.bkt.clouddn.com/optimer_regular.typeface.json').then(function (response) {\n                        _this.font = response;\n                });\n        }\n\n        _createClass(SWDrawString, [{\n                key: 'drawString',\n                value: function drawString(labelPos, text, dotRadius) {\n\n                        var fontSize = dotRadius * 3;\n\n                        var options = {\n                                size: fontSize,\n                                height: 0,\n                                weight: 'normal',\n                                font: this.font,\n                                style: 'normal',\n                                bevelThickness: 1,\n                                bevelSize: 1,\n                                bevelSegments: 1,\n                                curveSegments: 50,\n                                steps: 1\n                        };\n\n                        var meshText = new THREE.Mesh(new THREE.TextGeometry(text, options), new THREE.MeshBasicMaterial({ color: 0xffffff }));\n\n                        meshText.position.copy(labelPos);\n\n                        meshText.lookAt(_SWConstants.camera.position);\n\n                        meshText.scale.set(0.3, 0.3, 0.3);\n\n                        _SWConstants.scene.add(meshText);\n\n                        this.textArr.push(meshText);\n                }\n\n                /**\r\n                 * 清除点\r\n                 * @param {Number} num 0-全部清除 -1从尾部开始清除 1从头开始清除\r\n                 */\n\n        }, {\n                key: 'clear',\n                value: function clear() {\n                        var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n\n                        var dArr = num == 0 ? this.textArr.splice(0, this.textArr.length) : num < 0 ? this.textArr.splice(num, Math.abs(num)) : this.textArr.splice(0, num);\n\n                        dArr.forEach(function (item) {\n\n                                (0, _SWTool.disposeNode)(item);\n                        });\n                }\n        }]);\n\n        return SWDrawString;\n}();\n\nexports.default = SWDrawString;",null]}