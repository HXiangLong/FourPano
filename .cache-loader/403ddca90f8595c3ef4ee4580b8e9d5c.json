{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxTilesModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\panoBox\\SWBoxTilesModule.js","mtime":1545623310498},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar _SWTool = require('../../tool/SWTool');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 全景盒子瓦片对象\r\n */\nvar SWBoxTilesModule = function () {\n        /**\r\n         * @param {Number} no 所属面编号\r\n         * @param {Number} x 行\r\n         * @param {Number} y 列\r\n         * @param {Number} lineNum 每行多少张图\r\n         * @param {Number} level 等级\r\n         * @param {Object} meshparent 父类对象\r\n         * @param {THREE.Group} path 图片链接的前半截地址\r\n         */\n        function SWBoxTilesModule(no, x, y, lineNum, level, meshparent, path) {\n                _classCallCheck(this, SWBoxTilesModule);\n\n                this.loadImageType = 0; //0-未加载图片 1-正在加载 2-加载成功 3-加载失败\n\n                this.faceNo = no;\n\n                this.row = x;\n\n                this.line = y;\n\n                this.meshParent = meshparent;\n\n                this.boxPath = path;\n\n                this.lineNum = lineNum;\n\n                this.level = level;\n\n                this.planeW = _SWConstants.c_FaceDistance / this.lineNum;\n\n                this.geometry = new THREE.PlaneGeometry(this.planeW, this.planeW, 1, 1);\n\n                this.material = new THREE.MeshBasicMaterial({\n                        map: null,\n                        depthTest: true,\n                        polygonOffset: true, //开启偏移\n                        polygonOffsetFactor: -1.0, //与相机距离减1\n                        polygonOffsetUnits: -4.0 * (level - 2) //偏移的单位\n                });\n\n                this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n                this.mesh.name = '\\u7F16\\u53F7:' + this.faceNo + '_' + this.row + '_' + this.line;\n\n                this.mesh.position.x = -_SWConstants.c_FaceDistance * 0.5 + this.planeW * 0.5 + (this.line - 1) * this.planeW;\n\n                this.mesh.position.y = _SWConstants.c_FaceDistance * 0.5 - this.planeW * 0.5 - (this.row - 1) * this.planeW;\n\n                this.mesh.userData.depthlevel = 100;\n\n                this.loadTilesTexture();\n        }\n\n        /**\r\n         * 加载瓦片贴图\r\n         */\n\n\n        _createClass(SWBoxTilesModule, [{\n                key: 'loadTilesTexture',\n                value: function loadTilesTexture() {\n                        var _this = this;\n\n                        var ss = (this.row - 1) * this.lineNum + this.line > 9 ? (this.row - 1) * this.lineNum + this.line : '0' + ((this.row - 1) * this.lineNum + this.line);\n\n                        var path = this.boxPath + '/' + this.level + '/sw_' + this.faceNo + '_' + ss + '.jpg';\n\n                        // 实例化一个加载器\n                        var loader = new THREE.TextureLoader();\n\n                        // 加载资源\n                        loader.load(\n                        // 资源URL\n                        path,\n                        // 加载成功之后调用\n                        function (texture) {\n\n                                _this.geometry.visible = true;\n\n                                texture.mapping = THREE.UVMapping;\n\n                                texture.magFilter = THREE.LinearFilter;\n\n                                texture.minFilter = THREE.LinearFilter;\n\n                                _this.mesh.material.map = texture;\n\n                                _this.mesh.material.map.needsUpdate = true;\n\n                                _this.loadImageType = 2;\n\n                                _this.meshParent.add(_this.mesh);\n                        },\n                        // 加载中\n                        function (xhr) {\n                                _this.loadImageType = 1;\n                        },\n                        // 加载失败\n                        function (xhr) {\n                                console.log('\\u56FE\\u7247\\u52A0\\u8F7D\\u5931\\u8D25\\uFF1A' + path);\n                                _this.loadImageType = 3;\n                        });\n                }\n        }, {\n                key: 'clearTile',\n                value: function clearTile() {\n                        (0, _SWTool.disposeNode)(this.mesh);\n                }\n        }]);\n\n        return SWBoxTilesModule;\n}();\n\nexports.default = SWBoxTilesModule;",{"version":3,"sources":["app\\src\\module\\panoBox\\SWBoxTilesModule.js"],"names":["SWBoxTilesModule","no","x","y","lineNum","level","meshparent","path","loadImageType","faceNo","row","line","meshParent","boxPath","planeW","c_FaceDistance","geometry","THREE","PlaneGeometry","material","MeshBasicMaterial","map","depthTest","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","mesh","Mesh","name","position","userData","depthlevel","loadTilesTexture","ss","loader","TextureLoader","load","texture","visible","mapping","UVMapping","magFilter","LinearFilter","minFilter","needsUpdate","add","xhr","console","log"],"mappings":"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","file":"SWBoxTilesModule.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport {\r\n    c_FaceDistance\r\n} from '../../tool/SWConstants'\r\nimport {\r\n    disposeNode\r\n} from '../../tool/SWTool'\r\n/**\r\n * 全景盒子瓦片对象\r\n */\r\nclass SWBoxTilesModule {\r\n    /**\r\n     * @param {Number} no 所属面编号\r\n     * @param {Number} x 行\r\n     * @param {Number} y 列\r\n     * @param {Number} lineNum 每行多少张图\r\n     * @param {Number} level 等级\r\n     * @param {Object} meshparent 父类对象\r\n     * @param {THREE.Group} path 图片链接的前半截地址\r\n     */\r\n    constructor(no, x, y, lineNum, level, meshparent, path) {\r\n\r\n        this.loadImageType = 0; //0-未加载图片 1-正在加载 2-加载成功 3-加载失败\r\n\r\n        this.faceNo = no;\r\n\r\n        this.row = x;\r\n\r\n        this.line = y;\r\n\r\n        this.meshParent = meshparent;\r\n\r\n        this.boxPath = path;\r\n\r\n        this.lineNum = lineNum;\r\n\r\n        this.level = level;\r\n\r\n        this.planeW = c_FaceDistance / this.lineNum;\r\n\r\n        this.geometry = new THREE.PlaneGeometry(this.planeW, this.planeW, 1, 1);\r\n\r\n        this.material = new THREE.MeshBasicMaterial({\r\n            map: null,\r\n            depthTest: true,\r\n            polygonOffset: true, //开启偏移\r\n            polygonOffsetFactor: -1.0, //与相机距离减1\r\n            polygonOffsetUnits: -4.0 * (level - 2) //偏移的单位\r\n        });\r\n\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n\r\n        this.mesh.name = `编号:${this.faceNo}_${this.row}_${this.line}`;\r\n\r\n        this.mesh.position.x = -c_FaceDistance * 0.5 + this.planeW * 0.5 + (this.line - 1) * this.planeW;\r\n\r\n        this.mesh.position.y = c_FaceDistance * 0.5 - this.planeW * 0.5 - (this.row - 1) * this.planeW;\r\n\r\n        this.mesh.userData.depthlevel = 100;\r\n\r\n        this.loadTilesTexture();\r\n    }\r\n\r\n    /**\r\n     * 加载瓦片贴图\r\n     */\r\n    loadTilesTexture() {\r\n\r\n        let ss = (((this.row - 1) * this.lineNum + this.line > 9) ? ((this.row - 1) * this.lineNum + this.line) : '0' + ((this.row - 1) * this.lineNum + this.line));\r\n\r\n        let path = `${this.boxPath}/${this.level}/sw_${(this.faceNo)}_${ss}.jpg`;\r\n\r\n        // 实例化一个加载器\r\n        let loader = new THREE.TextureLoader();\r\n\r\n        // 加载资源\r\n        loader.load(\r\n            // 资源URL\r\n            path,\r\n            // 加载成功之后调用\r\n            (texture) => {\r\n\r\n                this.geometry.visible = true;\r\n\r\n                texture.mapping = THREE.UVMapping;\r\n\r\n                texture.magFilter = THREE.LinearFilter;\r\n\r\n                texture.minFilter = THREE.LinearFilter;\r\n\r\n                this.mesh.material.map = texture;\r\n\r\n                this.mesh.material.map.needsUpdate = true;\r\n\r\n                this.loadImageType = 2;\r\n\r\n                this.meshParent.add(this.mesh);\r\n            },\r\n            // 加载中\r\n            (xhr) => {\r\n                this.loadImageType = 1;\r\n            },\r\n            // 加载失败\r\n            (xhr) => {\r\n                console.log(`图片加载失败：${path}`);\r\n                this.loadImageType = 3;\r\n            }\r\n        );\r\n    }\r\n\r\n    clearTile() {\r\n        disposeNode(this.mesh);\r\n    }\r\n}\r\n\r\nexport default SWBoxTilesModule;"]}]}