{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWConstants.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWConstants.js","mtime":1545731184227},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\nexports.StereographicShader = exports.sw_SWReticle = exports.sw_roamingModule = exports.sw_hotPhotoWall = exports.sw_markPoint = exports.sw_markerExhibits = exports.sw_thumbnailsItems = exports.sw_wallProbeSurface = exports.sw_wallMesh = exports.sw_measure = exports.sw_groundMesh = exports.sw_skyBox = exports.sw_skySphere = exports.sw_minMap = exports.sw_mouseControl = exports.sw_cameraManage = exports.sw_getService = exports.sw_GetSQLData = exports.c_effect = exports.c_control = exports.c_panoImageTable = exports.c_panoIDTable = exports.c_FloorsMapTable = exports.c_allVideoTable = exports.c_multiDataByParentIDTable = exports.c_allExhibitsForMarkerTable = exports.c_allExhibitsForBuildingTable = exports.c_thumbnailsForMuseum = exports.c_markerMeshArr = exports.c_markerInfoArr = exports.c_smallVideoArr = exports.c_ArrowPanoInfoArr = exports.c_AdjacentPanoInfoArr = exports.c_facadeByPanoIDInfoArr = exports.c_arrowCurentArr = exports.c_arrowArr = exports.c_jumpSphere = exports.c_StationInfo = exports.c_clock = exports.c_mode = exports.c_modes = exports.c_editorState = exports.c_editorStateEnum = exports.c_currentState = exports.c_currentStateEnum = exports.c_initUIData = exports.c_treeShapeJumpPanoStr = exports.c_treeShapeJumpPano = exports.c_isThumbnailsRotateBoo = exports.c_isWallClickRotateBoo = exports.c_isEditorStatus = exports.c_isPreviewImageLoadEnd = exports.c_siteRepresentation = exports.c_isMeasureStatus = exports.c_isDisplayFace = exports.c_roamingStatus = exports.c_mapShow = exports.c_thumbnailsShow = exports.c_collectAll = exports.c_wallClickRotateV3 = exports.c_DS3ToOpenGLMx4 = exports.c_OpenGLToDS3Mx4 = exports.c_LastStopPanoID = exports.c_likeToExhibitID = exports.c_JumpMarkerID = exports.c_clientHeight = exports.c_clientWidth = exports.c_deviationAngle = exports.c_movingSpeedMultiple = exports.c_roamingMultiple = exports.c_WallDisplaySize = exports.c_FaceDistance = exports.c_minPitch = exports.c_maxPitch = exports.c_Minfov = exports.c_Maxfov = exports.c_devicePixelRatio = exports.renderer = exports.scene = exports.cubeCamera = exports.ambientLight = exports.camera = exports.stats = exports.revision_type = exports.Android_revision = exports.iPhone_gpu_revision = exports.REVISION = undefined;\n\nvar _SWHashTable = require('./SWHashTable');\n\nvar _SWHashTable2 = _interopRequireDefault(_SWHashTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**版本号*/\nvar REVISION = exports.REVISION = '4.0';\n/**ios gpu */\n/* global THREE*/\n\nvar iPhone_gpu_revision = exports.iPhone_gpu_revision = \"\";\n/**Android版本号 */\nvar Android_revision = exports.Android_revision = \"\";\n/**版本类型 1-PC版 2-手机版 3-编辑版本*/\nvar revision_type = exports.revision_type = 1;\n/**性能监视*/\nvar stats = exports.stats = \"\";\n/**相机*/\nvar camera = exports.camera = \"\";\n/**灯光对象 */\nvar ambientLight = exports.ambientLight = undefined;\n/**正方形相机*/\nvar cubeCamera = exports.cubeCamera = \"\";\n/**场景*/\nvar scene = exports.scene = \"\";\n/**渲染*/\nvar renderer = exports.renderer = \"\";\n//像素与物理尺寸比例\nvar c_devicePixelRatio = exports.c_devicePixelRatio = window.devicePixelRatio < 3 ? 3 : window.devicePixelRatio;\n/**最大视角*/\nvar c_Maxfov = exports.c_Maxfov = 68;\n/**最小视角*/\nvar c_Minfov = exports.c_Minfov = 20;\n/** 最大俯仰角*/\nvar c_maxPitch = exports.c_maxPitch = 85;\n/**最小俯仰角*/\nvar c_minPitch = exports.c_minPitch = -85;\n/**面距离*/\nvar c_FaceDistance = exports.c_FaceDistance = 4096;\n/**面片缩放比例*/\nvar c_WallDisplaySize = exports.c_WallDisplaySize = 20;\n/**漫游倍数 */\nvar c_roamingMultiple = exports.c_roamingMultiple = 5;\n/**移动速度倍率 */\nvar c_movingSpeedMultiple = exports.c_movingSpeedMultiple = 5;\n/**偏差角 */\nvar c_deviationAngle = exports.c_deviationAngle = -165;\n/**场景宽 */\nvar c_clientWidth = exports.c_clientWidth = undefined;\n/**场景高 */\nvar c_clientHeight = exports.c_clientHeight = undefined;\n/**跳转之后需要看向的标注ID*/\nvar c_JumpMarkerID = exports.c_JumpMarkerID = \"\";\n/**当前点赞的是哪个编号 */\nvar c_likeToExhibitID = exports.c_likeToExhibitID = \"\";\n/**上一站全景ID */\nvar c_LastStopPanoID = exports.c_LastStopPanoID = \"\";\n/**坐标转换矩阵。坐标系 OpenGL -> 3DS*/\nvar c_OpenGLToDS3Mx4 = exports.c_OpenGLToDS3Mx4 = new THREE.Matrix4().fromArray([1, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n/**坐标转换矩阵。坐标系 3DS -> OpenGL*/\nvar c_DS3ToOpenGLMx4 = exports.c_DS3ToOpenGLMx4 = new THREE.Matrix4().fromArray([1, 0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 1]);\n/**跳转之后进行旋转相机看向点击位置*/\nvar c_wallClickRotateV3 = exports.c_wallClickRotateV3 = new THREE.Vector3();\n/** true所有文物显示 false按照楼层显示*/\nvar c_collectAll = exports.c_collectAll = false;\n/**初始化完成之后是否弹出展厅推荐列表 */\nvar c_thumbnailsShow = exports.c_thumbnailsShow = false;\n/**初始化完成之后是否弹出小地图 */\nvar c_mapShow = exports.c_mapShow = false;\n/**漫游状态 */\nvar c_roamingStatus = exports.c_roamingStatus = false;\n/**是否显示探面 */\nvar c_isDisplayFace = exports.c_isDisplayFace = true;\n/**测量状态*/\nvar c_isMeasureStatus = exports.c_isMeasureStatus = false;\n/**站点表现形式 true-箭头 false-点 */\nvar c_siteRepresentation = exports.c_siteRepresentation = false;\n/**是否加载缩略图中 */\nvar c_isPreviewImageLoadEnd = exports.c_isPreviewImageLoadEnd = false;\n/**是否是编辑状态*/\nvar c_isEditorStatus = exports.c_isEditorStatus = false;\n/**是否跳转之后进行旋转相机看向点击位置*/\nvar c_isWallClickRotateBoo = exports.c_isWallClickRotateBoo = false;\n/**展厅跳转之后看向展厅大门*/\nvar c_isThumbnailsRotateBoo = exports.c_isThumbnailsRotateBoo = false;\n/**目录树点击跳转站点 */\nvar c_treeShapeJumpPano = exports.c_treeShapeJumpPano = false;\n/**目录树点击跳转站点Yaw Pitch值 */\nvar c_treeShapeJumpPanoStr = exports.c_treeShapeJumpPanoStr = \"\";\n/**初始化时界面数据显示 */\nvar c_initUIData = exports.c_initUIData = true;\n/**全景有几种版本 1-默认为PC版 2-手机版 3-编辑版 4-触屏版*/\nvar c_currentStateEnum = exports.c_currentStateEnum = {\n        pcStatus: 1,\n        phoneStatus: 2,\n        editorStatus: 3,\n        touchStatus: 4\n};\n/**当前运行的是什么版本 */\nvar c_currentState = exports.c_currentState = c_currentStateEnum.pcStatus;\n\n/**编辑版的几种状态 1-默认编辑箭头 2-编辑标注*/\nvar c_editorStateEnum = exports.c_editorStateEnum = {\n        arrow: 1,\n        markerPoint: 2\n};\n/**当前运行的是编辑版的什么状态 */\nvar c_editorState = exports.c_editorState = c_editorStateEnum.markerPoint;\n\n/**当前运行模式 正常/VR */\nvar c_modes = exports.c_modes = {\n        NORMAL: 1,\n        STEREO: 2\n        /**当前模型 */\n};var c_mode = exports.c_mode = c_modes.NORMAL;\n\n/**计时器*/\nvar c_clock = exports.c_clock = new THREE.Clock();\n/**当前站点基本信息*/\nvar c_StationInfo = exports.c_StationInfo = undefined;\n/**跳转过程中的过渡球*/\nvar c_jumpSphere = exports.c_jumpSphere = undefined;\n/**所有箭头对象*/\nvar c_arrowArr = exports.c_arrowArr = [];\n/**所有箭头Mash对象 */\nvar c_arrowCurentArr = exports.c_arrowCurentArr = [];\n/**当前站点所需要的墙面片集合*/\nvar c_facadeByPanoIDInfoArr = exports.c_facadeByPanoIDInfoArr = [];\n/**老箭头集合*/\nvar c_AdjacentPanoInfoArr = exports.c_AdjacentPanoInfoArr = [];\n/**新箭头集合*/\nvar c_ArrowPanoInfoArr = exports.c_ArrowPanoInfoArr = [];\n/**视频集合*/\nvar c_smallVideoArr = exports.c_smallVideoArr = [];\n/**所有标注数据集合（点，面）*/\nvar c_markerInfoArr = exports.c_markerInfoArr = [];\n/**所有标注集合（点，面）*/\nvar c_markerMeshArr = exports.c_markerMeshArr = [];\n/**推荐展厅数据集合*/\nvar c_thumbnailsForMuseum = exports.c_thumbnailsForMuseum = [];\n/**所有推荐文物信息列表*/\nvar c_allExhibitsForBuildingTable = exports.c_allExhibitsForBuildingTable = new _SWHashTable2.default();\n/**所有推荐文物对应标注列表*/\nvar c_allExhibitsForMarkerTable = exports.c_allExhibitsForMarkerTable = new _SWHashTable2.default();\n/**单个文物详细信息*/\nvar c_multiDataByParentIDTable = exports.c_multiDataByParentIDTable = new _SWHashTable2.default();\n/**所有视频集合 */\nvar c_allVideoTable = exports.c_allVideoTable = new _SWHashTable2.default();\n/**楼层集合*/\nvar c_FloorsMapTable = exports.c_FloorsMapTable = new _SWHashTable2.default();\n/**所有站点集合 */\nvar c_panoIDTable = exports.c_panoIDTable = new _SWHashTable2.default();\n/**第三层贴图集合 */\nvar c_panoImageTable = exports.c_panoImageTable = new _SWHashTable2.default();\n\n/**当前控制器 */\nvar c_control = exports.c_control = undefined;\n/**字板界面 */\nvar c_effect = exports.c_effect = undefined;\n//实例化对象\n/**本地数据读取 */\nvar sw_GetSQLData = exports.sw_GetSQLData = undefined;\n/**数据*/\nvar sw_getService = exports.sw_getService = undefined;\n/**相机控制*/\nvar sw_cameraManage = exports.sw_cameraManage = undefined;\n/**鼠标控制*/\nvar sw_mouseControl = exports.sw_mouseControl = undefined;\n/**小地图*/\nvar sw_minMap = exports.sw_minMap = undefined;\n/**球形盒子*/\nvar sw_skySphere = exports.sw_skySphere = undefined;\n/**六面体*/\nvar sw_skyBox = exports.sw_skyBox = undefined;\n/**地面*/\nvar sw_groundMesh = exports.sw_groundMesh = undefined;\n/**测量*/\nvar sw_measure = exports.sw_measure = undefined;\n/**墙面片*/\nvar sw_wallMesh = exports.sw_wallMesh = undefined;\n/**墙面探面*/\nvar sw_wallProbeSurface = exports.sw_wallProbeSurface = undefined;\n/**推荐展厅*/\nvar sw_thumbnailsItems = exports.sw_thumbnailsItems = undefined;\n/**标注说明*/\nvar sw_markerExhibits = exports.sw_markerExhibits = undefined;\n/**打标注类*/\nvar sw_markPoint = exports.sw_markPoint = undefined;\n/**热点文物墙*/\nvar sw_hotPhotoWall = exports.sw_hotPhotoWall = undefined;\n/**漫游 */\nvar sw_roamingModule = exports.sw_roamingModule = undefined;\n/**十字点 */\nvar sw_SWReticle = exports.sw_SWReticle = undefined;\n\n/**小行星全景Shader */\nvar StereographicShader = exports.StereographicShader = {\n\n        uniforms: {\n\n                \"tDiffuse\": {\n                        value: new THREE.Texture()\n                },\n                \"resolution\": {\n                        value: 1.0\n                },\n                \"transform\": {\n                        value: new THREE.Matrix4()\n                },\n                \"zoom\": {\n                        value: 1.0\n                }\n\n        },\n\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float resolution;\", \"uniform mat4 transform;\", \"uniform float zoom;\", \"varying vec2 vUv;\", \"const float PI = 3.141592653589793;\", \"void main(){\", \"vec2 position = -1.0 +  2.0 * vUv;\", \"position *= vec2( zoom * resolution, zoom * 0.5 );\", \"float x2y2 = position.x * position.x + position.y * position.y;\", \"vec3 sphere_pnt = vec3( 2. * position, x2y2 - 1. ) / ( x2y2 + 1. );\", \"sphere_pnt = vec3( transform * vec4( sphere_pnt, 1.0 ) );\", \"vec2 sampleUV = vec2(\", \"(atan(sphere_pnt.y, sphere_pnt.x) / PI + 1.0) * 0.5,\", \"(asin(sphere_pnt.z) / PI + 0.5)\", \");\", \"gl_FragColor = texture2D( tDiffuse, sampleUV );\", \"}\"].join(\"\\n\")\n\n};\n\nvar e = [\"#ifdef\", \"GL_ES\", \"#ifdef\", \"GL_FRAGMENT_PRECISION_HIGH\", \"precision highp float;\", \"#else\", \"precision mediump float;\", \"#endif\", \"#endif\", \"uniform sampler2D sm;\", \"varying vec2 tx;\", \"uniform float ca;\", \"uniform float ol;\", \"void main()\", \"{\", \"float g = texture2D(sm,tx).g;\", \"vec2 center = vec2(0.5 + (0.5 - ol)*(step(0.5,tx.x) - 0.5), 0.5);\", \"vec2 v = tx - center;\", \"vec2 vR = center + v * ca;\", \"float r = texture2D(sm,vR).r;\", \"vec2 vB = center + v / ca;\", \"float b = texture2D(sm,vB).b;\", \"gl_FragColor=vec4(r,g,b,1.0);\", \"}\"];\n\nvar s = [\"#ifdef\", \"GL_ES\", \"#ifdef\", \"GL_FRAGMENT_PRECISION_HIGH\", \"precision highp float;\", \"#else\", \"precision mediump float;\", \"#endif\", \"#endif\", \"uniform sampler2D sm;\", \"varying vec2 tx;\", \"uniform vec2 sz;\", \"uniform float ss;\", \"uniform float ca;\", \"uniform float ol;\", \"uniform float vg;\", \"uniform vec4 dd;\", \"void main()\", \"{\", \"float vig = 0.015;\", \"float side = step(0.5,tx.x) - 0.5;\", \"float aspect = (sz.x / sz.y);\", \"vec2 center = vec2(0.5 + (0.5 - ol)*side, 0.5);\", \"vec2 v = tx - center;\", \"v.x = v.x * aspect;\", \"v *= 2.0 * ss;\", \"float rs = dot(v,v);\", \"v = v * (dd.x + rs*(dd.y + rs*(dd.z + rs*dd.w)));\", \"v /= 2.0 * ss;\", \"v.x = v.x / aspect;\", \"vec2 vG = center + v;\", \"float a = (1.0 - smoothstep(vG.x-vig - side*ol, vG.x - side*ol, center.x - 0.25)) * \", \"(1.0 - smoothstep(center.x + 0.25 - vG.x + side*ol - vig, center.x + 0.25 - vG.x + side*ol, 0.0)) * \", \"(1.0 - smoothstep(vG.y-vig, vG.y, 0.0)) * \", \"(1.0 - smoothstep(1.0 - vG.y-vig,1.0 - vG.y, 0.0));\", \"a *= smoothstep(rs-vig, rs+vig, vg);\", \"vec2 vR = center + v * ca;\", \"vec2 vB = center + v / ca;\", \"float r = texture2D(sm,vR).r;\", \"float g = texture2D(sm,vG).g;\", \"float b = texture2D(sm,vB).b;\", \"gl_FragColor=vec4(a*r,a*g,a*b,1.0);\", \"}\"];",null]}