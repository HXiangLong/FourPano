{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\data\\SWArrowInfo.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\data\\SWArrowInfo.js","mtime":1542079404039},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n            value: true\n});\n\nvar _SWConstants = require('../tool/SWConstants');\n\nvar _SWTool = require('../tool/SWTool');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /* global THREE*/\n\n/**\r\n * 新老箭头数据\r\n */\nvar ArrowData =\n/**\r\n * 箭头构造函数\r\n * @param {*} obj 服务器穿过来的数据\r\n * @param {*} type 1-老箭头 2-新箭头 3-点链接信息\r\n */\nfunction ArrowData(obj, type) {\n            _classCallCheck(this, ArrowData);\n\n            if (type == 1) {\n\n                        this.dstPanoID = obj.DstImageID; //目标站点编号\n\n                        this.dstPanoName = obj.DstName; //目标站点名称\n\n                        this.srcPanoID = obj.SrcImageID; //当前站点编号\n\n                        this.nX = obj.X; //世界坐标位置\n\n                        this.nY = obj.Y; //世界坐标位置\n\n                        this.nZ = obj.Z; //世界坐标位置\n\n                        this.angle = -90 - (0, _SWTool.getArrowsAngle)(_SWConstants.c_StationInfo.point.clone(), new THREE.Vector3(obj.X, obj.Y, obj.Z)); //偏移世界角度 \n            } else if (type == 2) {\n\n                        this.linkID = obj.LinkID; //标识ID\n\n                        this.srcPanoID = obj.SrcPanoID; //当前站点\n\n                        this.dstPanoID = obj.DstPanoID; //下一站点\n\n                        this.yaw = obj.Yaw; //箭头位置yaw\n\n                        this.pitch = obj.Pitch; //箭头位置pitch\n\n                        this.dstPanoName = obj.DstPanoName; //箭头名称\n            } else if (type == 3) {\n\n                        this.linkID = obj.LinkID; //标识ID\n\n                        this.srcPanoID = obj.SrcImageName; //当前站点\n\n                        this.dstPanoID = obj.DstImageName; //下一站点\n\n                        this.yaw = obj.Yaw; //箭头位置yaw\n\n                        this.pitch = obj.Pitch; //箭头位置pitch\n\n                        this.dstPanoName = obj.DstName ? obj.DstName : \"\"; //箭头名称\n\n                        var srcPoint = _SWConstants.sw_GetSQLData.GetPanoByIDFun(obj.SrcImageName); //当前点信息\n\n                        var desPoint = _SWConstants.sw_GetSQLData.GetPanoByIDFun(obj.DstImageName); //目标点信息\n\n                        var pointV3 = new THREE.Vector3(srcPoint.X + (desPoint.X - srcPoint.X), srcPoint.Y + (desPoint.Y - srcPoint.Y), srcPoint.Z + (desPoint.Z - srcPoint.Z));\n\n                        this.nX = pointV3.x; //世界坐标位置\n\n                        this.nY = pointV3.y; //世界坐标位置\n\n                        this.nZ = pointV3.z; //世界坐标位置\n\n                        this.angle = -90 - (0, _SWTool.getArrowsAngle)(_SWConstants.c_StationInfo.point.clone(), new THREE.Vector3(this.nX, this.nY, this.nZ)); //偏移世界角度\n            }\n};\n\nexports.default = ArrowData;",{"version":3,"sources":["app\\src\\data\\SWArrowInfo.js"],"names":["ArrowData","obj","type","dstPanoID","DstImageID","dstPanoName","DstName","srcPanoID","SrcImageID","nX","X","nY","Y","nZ","Z","angle","c_StationInfo","point","clone","THREE","Vector3","linkID","LinkID","SrcPanoID","DstPanoID","yaw","Yaw","pitch","Pitch","DstPanoName","SrcImageName","DstImageName","srcPoint","sw_GetSQLData","GetPanoByIDFun","desPoint","pointV3","x","y","z"],"mappings":"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","file":"SWArrowInfo.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport {\r\n    c_StationInfo,\r\n    sw_GetSQLData\r\n} from '../tool/SWConstants';\r\nimport {\r\n    getArrowsAngle\r\n} from '../tool/SWTool'\r\n/**\r\n * 新老箭头数据\r\n */\r\nclass ArrowData {\r\n    /**\r\n     * 箭头构造函数\r\n     * @param {*} obj 服务器穿过来的数据\r\n     * @param {*} type 1-老箭头 2-新箭头 3-点链接信息\r\n     */\r\n    constructor(obj, type) {\r\n\r\n        if (type == 1) {\r\n\r\n            this.dstPanoID = obj.DstImageID; //目标站点编号\r\n\r\n            this.dstPanoName = obj.DstName; //目标站点名称\r\n\r\n            this.srcPanoID = obj.SrcImageID; //当前站点编号\r\n\r\n            this.nX = obj.X; //世界坐标位置\r\n\r\n            this.nY = obj.Y; //世界坐标位置\r\n\r\n            this.nZ = obj.Z; //世界坐标位置\r\n\r\n            this.angle = -90 - getArrowsAngle(c_StationInfo.point.clone(), new THREE.Vector3(obj.X, obj.Y, obj.Z)); //偏移世界角度 \r\n\r\n        } else if (type == 2) {\r\n\r\n            this.linkID = obj.LinkID; //标识ID\r\n\r\n            this.srcPanoID = obj.SrcPanoID; //当前站点\r\n\r\n            this.dstPanoID = obj.DstPanoID; //下一站点\r\n\r\n            this.yaw = obj.Yaw; //箭头位置yaw\r\n\r\n            this.pitch = obj.Pitch; //箭头位置pitch\r\n\r\n            this.dstPanoName = obj.DstPanoName; //箭头名称\r\n\r\n        } else if (type == 3) {\r\n\r\n            this.linkID = obj.LinkID; //标识ID\r\n\r\n            this.srcPanoID = obj.SrcImageName; //当前站点\r\n\r\n            this.dstPanoID = obj.DstImageName; //下一站点\r\n\r\n            this.yaw = obj.Yaw; //箭头位置yaw\r\n\r\n            this.pitch = obj.Pitch; //箭头位置pitch\r\n\r\n            this.dstPanoName = obj.DstName ? obj.DstName : \"\"; //箭头名称\r\n\r\n            let srcPoint = sw_GetSQLData.GetPanoByIDFun(obj.SrcImageName); //当前点信息\r\n\r\n            let desPoint = sw_GetSQLData.GetPanoByIDFun(obj.DstImageName); //目标点信息\r\n\r\n            let pointV3 = new THREE.Vector3(srcPoint.X + (desPoint.X - srcPoint.X), srcPoint.Y + (desPoint.Y - srcPoint.Y), srcPoint.Z + (desPoint.Z - srcPoint.Z));\r\n\r\n            this.nX = pointV3.x; //世界坐标位置\r\n\r\n            this.nY = pointV3.y; //世界坐标位置\r\n\r\n            this.nZ = pointV3.z; //世界坐标位置\r\n\r\n            this.angle = -90 - getArrowsAngle(c_StationInfo.point.clone(), new THREE.Vector3(this.nX, this.nY, this.nZ)); //偏移世界角度\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ArrowData;"]}]}