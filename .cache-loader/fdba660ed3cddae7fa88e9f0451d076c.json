{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerModule.js","mtime":1543474160365},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE,$*/\n\nvar _SWTool = require('../../tool/SWTool');\n\nvar _SWTextureAnimator = require('../../tool/SWTextureAnimator');\n\nvar _SWTextureAnimator2 = _interopRequireDefault(_SWTextureAnimator);\n\nvar _store = require('../../../views/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _action = require('../../../views/redux/action');\n\nvar _SWInitializeInstance = require('../../tool/SWInitializeInstance');\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 全景除了底层盒子、UI 都是标注\r\n * 这是所有标注的父类\r\n */\nvar SWMarkerModule = function () {\n    /**\r\n     * \r\n     * @param {String} url 图片链接地址\r\n     * @param {Number} type 1-静态 2-动态 \r\n     * @param {Object} obj {fpsNum:帧数，wPlane:宽，hPlane：高}\r\n     */\n    function SWMarkerModule(url, type, obj) {\n        _classCallCheck(this, SWMarkerModule);\n\n        this.markerType = type;\n\n        this.mouseDownBoo = false;\n\n        this.startPoint = new THREE.Vector2();\n\n        if (url) {\n            this.texture = new THREE.ImageUtils.loadTexture(url);\n        }\n\n        if (obj) {\n            this.textureAnimator = new _SWTextureAnimator2.default(this.texture, obj.fpsNum, 1, obj.fpsNum, 100);\n\n            this.geometry = new THREE.PlaneGeometry(obj.wPlane, obj.hPlane, 1, 1);\n\n            this.material = new THREE.MeshBasicMaterial({\n                map: this.texture,\n                side: 2,\n                transparent: true,\n                opacity: 1\n            });\n        } else {\n\n            this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n\n            this.material = new THREE.MeshBasicMaterial({\n                color: 0xFFFFFF\n            });\n        }\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        this.textDiv = new _SWTool.TextDiv(new THREE.Vector3(0, 0, 0));\n\n        this.textDiv.id = \"markerArrowMesh\";\n\n        this.textDiv.style.fontFamily = \"Arial\";\n\n        this.textDiv.style.display = \"none\";\n\n        this.textDiv.style.padding = \"4px\";\n\n        this.textDiv.style.backgroundColor = \"rgba(0, 0, 0, 0.5)\";\n\n        this.textDiv.style.letterSpacing = \"2px\";\n\n        this.textDiv.style.border = \"1px solid rgba(255, 255, 255, 0.5)\";\n\n        this.textDiv.style.borderRadius = \"5px\";\n    }\n\n    /**\r\n     * 添加鼠标事件\r\n     */\n\n\n    _createClass(SWMarkerModule, [{\n        key: 'addMouseEvent',\n        value: function addMouseEvent() {\n            var _this = this;\n\n            this.mesh.mouseDown = function (e, obj) {\n\n                _this.mouseDownBoo = true;\n\n                _this.startPoint.x = e.clientX;\n\n                _this.startPoint.y = e.clientY;\n            };\n\n            this.mesh.mouseUp = function (e, obj) {\n\n                if (_this.mouseDownBoo) {\n\n                    _this.hideTextDiv();\n\n                    var v3 = new THREE.Vector2(e.clientX, e.clientY);\n\n                    var boo = v3.equals(_this.startPoint);\n\n                    _this.mouseDownBoo = false;\n\n                    if (boo) {\n                        var store = (0, _store2.default)();\n                        var url = void 0;\n                        switch (_this.markerObj.type) {//点击弹出的表现形式 1-图文 2-图片 3-三维 4-视频 5-书籍 6-音频 7-环拍 999-跳站点\n                            case 1:\n                            case 2:\n                                if (constants.c_allExhibitsForMarkerTable.containsKey(obj.object.userData.markerID)) {\n\n                                    var _item = constants.c_allExhibitsForMarkerTable.getValue(obj.object.userData.markerID);\n\n                                    if (!constants.c_multiDataByParentIDTable.containsKey(_item.exhibitID)) {\n\n                                        if (_this.markerObj.type == 1) {\n\n                                            _this.showMarkerUI(_item, []);\n                                        }\n\n                                        constants.sw_getService.getMultiDataByParentID(_item.exhibitID, _this.markerObj.type);\n                                    } else {\n\n                                        var imageArr = constants.c_multiDataByParentIDTable.getValue(_item.exhibitID);\n\n                                        if (_this.markerObj.type == 1) {\n\n                                            _this.showMarkerUI(_item, imageArr);\n                                        } else {\n\n                                            var markerImgList = [],\n                                                markerthumbs = [];\n\n                                            imageArr.forEach(function (item) {\n\n                                                markerImgList.push(constants.c_currentState == constants.c_currentStateEnum.phoneStatus ? item.phoneMax : item.PCMax);\n\n                                                markerthumbs.push(item.thumbnail);\n                                            });\n                                            store.dispatch((0, _action.show_ViewPicture_fun)({\n                                                off: true,\n                                                idx: 0,\n                                                imageList: markerImgList,\n                                                thumbs: markerthumbs\n                                            }));\n                                        }\n                                    }\n                                }\n                                break;\n                            case 3:\n                                url = constants.sw_getService.resourcesUrl + '/BusinessData/ExhibitDetails/3DModel/' + _this.markerObj.markerID + '.html';\n\n                                store.dispatch((0, _action.show_Iframe_fun)({\n                                    iframeOff: true,\n                                    iframeUrl: url,\n                                    iframeName: _this.markerObj.name\n                                }));\n                                break;\n                            case 4:\n                            case 44:\n                                store.dispatch((0, _action.show_VideoBox_fun)({\n                                    off: true,\n                                    videoUrl: _this.markerObj.name\n                                }));\n                                break;\n                            case 5:\n\n                                var item = constants.c_allExhibitsForMarkerTable.getValue(_this.markerObj.markerID);\n                                url = constants.sw_getService.resourcesUrl + '/BusinessData/ExhibitDetails/Book/' + _this.markerObj.markerID + '/index.html#page/' + item.displayPriority;\n\n                                store.dispatch((0, _action.show_Iframe_fun)({\n                                    iframeOff: true,\n                                    iframeUrl: url,\n                                    iframeName: _this.markerObj.name\n                                }));\n                                break;\n                            case 6:\n                                break;\n                            case 7:\n                                url = constants.sw_getService.resourcesUrl + '/BusinessData/ExhibitDetails/Ring/' + _this.markerObj.markerID + '.html';\n                                store.dispatch((0, _action.show_Iframe_fun)({\n                                    iframeOff: true,\n                                    iframeUrl: url,\n                                    iframeName: _this.markerObj.name\n                                }));\n                                break;\n                            case 999:\n                                (0, _SWInitializeInstance.jumpSite)(_this.markerObj.name);\n                                break;\n                        }\n                    }\n                }\n            };\n\n            //鼠标进入\n            this.mesh.mouseOver = function (e, obj) {\n\n                _this.showTextDiv(obj, _this.markerObj.name);\n            };\n\n            //出去\n            this.mesh.mouseOut = function (e, obj) {\n\n                _this.hideTextDiv();\n            };\n        }\n\n        /**显示标注UI界面 */\n\n    }, {\n        key: 'showMarkerUI',\n        value: function showMarkerUI(item, imageArr) {\n            var store = (0, _store2.default)();\n            store.dispatch((0, _action.show_MarkerInterface_fun)({\n                off: true,\n                exhibitID: item.exhibitID,\n                imglist: imageArr,\n                title: item.name,\n                content: item.description,\n                d3: item.featuresList[0],\n                video: item.featuresList[1],\n                audio: item.featuresList[2],\n                book: item.featuresList[3],\n                links: item.featuresList[4],\n                likeNum: item.likes\n            }));\n            constants.c_likeToExhibitID = item.exhibitID;\n            constants.sw_getService.GetLikesForExhibitID(item.exhibitID); //获取点赞数\n            constants.sw_getService.GetNewestComment(item.exhibitID); //获取最新20条评论\n        }\n\n        /**\r\n         * 不停的更新动画\r\n         * @param {Number} delta 补帧时间\r\n         */\n\n    }, {\n        key: 'update',\n        value: function update(delta) {\n            if (this.textureAnimator && this.markerType == 2) {\n\n                this.textureAnimator.update(1000 * delta);\n            }\n        }\n\n        /**\r\n         * 显示标注文本说明\r\n         * @param {Object} obj 射线返回对象\r\n         * @param {String} str 显示文本\r\n         */\n\n    }, {\n        key: 'showTextDiv',\n        value: function showTextDiv(obj, str) {\n            if (str && str != \"\") {\n\n                this.textDiv.style.display = \"block\";\n\n                var labelPos = (0, _SWTool.getWorldToScene)(obj.point);\n\n                this.textDiv.style.left = labelPos.x + \"px\";\n\n                this.textDiv.style.top = labelPos.y - 40 + \"px\";\n\n                this.textDiv.innerHTML = str;\n            }\n        }\n\n        /**隐藏标注说明文本 */\n\n    }, {\n        key: 'hideTextDiv',\n        value: function hideTextDiv() {\n\n            this.textDiv.style.display = \"none\";\n        }\n\n        /**清空对象 */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n\n            this.textureAnimator = null;\n\n            (0, _SWTool.delectTextDiv)(this.textDiv);\n\n            (0, _SWTool.disposeNode)(this.mesh);\n        }\n    }]);\n\n    return SWMarkerModule;\n}();\n\nexports.default = SWMarkerModule;",null]}