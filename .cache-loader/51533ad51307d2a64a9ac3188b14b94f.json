{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTextureAnimator.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWTextureAnimator.js","mtime":1529029839277},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538971317145},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global THREE*/\n\n/**gif动画对象 */\nvar SWTextureAnimator = function () {\n        /**\r\n         * GIF动画\r\n         * @param {THREE.Texture} texture 贴图对象\r\n         * @param {number} tilesHoriz 横向\r\n         * @param {number} tilesVert 竖向\r\n         * @param {number} numTiles 数量\r\n         * @param {number} tileDispDuration 间隔时间 \r\n         */\n        function SWTextureAnimator(texture, tilesHoriz, tilesVert, numTiles, tileDispDuration) {\n                _classCallCheck(this, SWTextureAnimator);\n\n                this.textures = texture;\n\n                this.tilesHorizontal = tilesHoriz;\n\n                this.tilesVertical = tilesVert;\n\n                this.numberOfTiles = numTiles;\n\n                this.textures.wrapS = this.textures.wrapT = THREE.RepeatWrapping;\n\n                this.textures.repeat.set(1 / this.tilesHorizontal, 1 / this.tilesVertical);\n\n                this.tileDisplayDuration = tileDispDuration;\n\n                this.currentDisplayTime = 0;\n\n                this.currentTile = 0;\n        }\n\n        /**不停更新 */\n\n\n        _createClass(SWTextureAnimator, [{\n                key: \"update\",\n                value: function update(milliSec) {\n\n                        this.currentDisplayTime += milliSec;\n\n                        while (this.currentDisplayTime > this.tileDisplayDuration) {\n\n                                this.currentDisplayTime -= this.tileDisplayDuration;\n\n                                this.currentTile++;\n\n                                if (this.currentTile == this.numberOfTiles) {\n\n                                        this.currentTile = 0;\n                                }\n\n                                var currentColumn = this.currentTile % this.tilesHorizontal;\n\n                                this.textures.offset.x = currentColumn / this.tilesHorizontal;\n\n                                var currentRow = Math.floor(this.currentTile / this.tilesHorizontal);\n\n                                this.textures.offset.y = currentRow / this.tilesVertical;\n                        }\n                }\n        }]);\n\n        return SWTextureAnimator;\n}();\n\nexports.default = SWTextureAnimator;",{"version":3,"sources":["app\\src\\tool\\SWTextureAnimator.js"],"names":["SWTextureAnimator","texture","tilesHoriz","tilesVert","numTiles","tileDispDuration","textures","tilesHorizontal","tilesVertical","numberOfTiles","wrapS","wrapT","THREE","RepeatWrapping","repeat","set","tileDisplayDuration","currentDisplayTime","currentTile","milliSec","currentColumn","offset","x","currentRow","Math","floor","y"],"mappings":";;;;;;;;;;AAAA;;AAEA;IACqBA,iB;AACjB;;;;;;;;AAQA,mCAAYC,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,gBAAtD,EAAwE;AAAA;;AAEpE,qBAAKC,QAAL,GAAgBL,OAAhB;;AAEA,qBAAKM,eAAL,GAAuBL,UAAvB;;AAEA,qBAAKM,aAAL,GAAqBL,SAArB;;AAEA,qBAAKM,aAAL,GAAqBL,QAArB;;AAEA,qBAAKE,QAAL,CAAcI,KAAd,GAAsB,KAAKJ,QAAL,CAAcK,KAAd,GAAsBC,MAAMC,cAAlD;;AAEA,qBAAKP,QAAL,CAAcQ,MAAd,CAAqBC,GAArB,CAAyB,IAAI,KAAKR,eAAlC,EAAmD,IAAI,KAAKC,aAA5D;;AAEA,qBAAKQ,mBAAL,GAA2BX,gBAA3B;;AAEA,qBAAKY,kBAAL,GAA0B,CAA1B;;AAEA,qBAAKC,WAAL,GAAmB,CAAnB;AACH;;AAED;;;;;uCACOC,Q,EAAU;;AAEb,6BAAKF,kBAAL,IAA2BE,QAA3B;;AAEA,+BAAO,KAAKF,kBAAL,GAA0B,KAAKD,mBAAtC,EAA2D;;AAEvD,qCAAKC,kBAAL,IAA2B,KAAKD,mBAAhC;;AAEA,qCAAKE,WAAL;;AAEA,oCAAI,KAAKA,WAAL,IAAoB,KAAKT,aAA7B,EAA4C;;AAExC,6CAAKS,WAAL,GAAmB,CAAnB;AAEH;;AAED,oCAAIE,gBAAgB,KAAKF,WAAL,GAAmB,KAAKX,eAA5C;;AAEA,qCAAKD,QAAL,CAAce,MAAd,CAAqBC,CAArB,GAAyBF,gBAAgB,KAAKb,eAA9C;;AAEA,oCAAIgB,aAAaC,KAAKC,KAAL,CAAW,KAAKP,WAAL,GAAmB,KAAKX,eAAnC,CAAjB;;AAEA,qCAAKD,QAAL,CAAce,MAAd,CAAqBK,CAArB,GAAyBH,aAAa,KAAKf,aAA3C;AACH;AACJ;;;;;;kBAvDgBR,iB","file":"SWTextureAnimator.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\n/**gif动画对象 */\r\nexport default class SWTextureAnimator {\r\n    /**\r\n     * GIF动画\r\n     * @param {THREE.Texture} texture 贴图对象\r\n     * @param {number} tilesHoriz 横向\r\n     * @param {number} tilesVert 竖向\r\n     * @param {number} numTiles 数量\r\n     * @param {number} tileDispDuration 间隔时间 \r\n     */\r\n    constructor(texture, tilesHoriz, tilesVert, numTiles, tileDispDuration) {\r\n\r\n        this.textures = texture;\r\n\r\n        this.tilesHorizontal = tilesHoriz;\r\n\r\n        this.tilesVertical = tilesVert;\r\n\r\n        this.numberOfTiles = numTiles;\r\n\r\n        this.textures.wrapS = this.textures.wrapT = THREE.RepeatWrapping;\r\n\r\n        this.textures.repeat.set(1 / this.tilesHorizontal, 1 / this.tilesVertical);\r\n\r\n        this.tileDisplayDuration = tileDispDuration;\r\n\r\n        this.currentDisplayTime = 0;\r\n\r\n        this.currentTile = 0;\r\n    }\r\n\r\n    /**不停更新 */\r\n    update(milliSec) {\r\n\r\n        this.currentDisplayTime += milliSec;\r\n\r\n        while (this.currentDisplayTime > this.tileDisplayDuration) {\r\n\r\n            this.currentDisplayTime -= this.tileDisplayDuration;\r\n\r\n            this.currentTile++;\r\n\r\n            if (this.currentTile == this.numberOfTiles) {\r\n\r\n                this.currentTile = 0;\r\n\r\n            }\r\n\r\n            let currentColumn = this.currentTile % this.tilesHorizontal;\r\n\r\n            this.textures.offset.x = currentColumn / this.tilesHorizontal;\r\n\r\n            let currentRow = Math.floor(this.currentTile / this.tilesHorizontal);\r\n\r\n            this.textures.offset.y = currentRow / this.tilesVertical;\r\n        }\r\n    }\r\n}"]}]}