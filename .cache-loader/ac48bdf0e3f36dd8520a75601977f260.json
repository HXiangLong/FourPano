{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\SWMouseModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\SWMouseModule.js","mtime":1546851987651},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../tool/SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWInitializeInstance = require('../tool/SWInitializeInstance');\n\nvar _store = require('../../views/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _action = require('../../views/redux/action');\n\nvar _reapop = require('reapop');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 鼠标事件\r\n * 将要解决手机双击的问题\r\n * 由UI层传递屏幕点击坐标之后，在转换成三维坐标射线判定\r\n */\nvar SWMouseModule = function () {\n    function SWMouseModule(canvas) {\n        _classCallCheck(this, SWMouseModule);\n\n        this.canvas3d = canvas;\n\n        this.startMouse = new THREE.Vector2();\n\n        /**鼠标坐标 */\n        this.mouseV2 = new THREE.Vector2();\n\n        /**射线 */\n        this.raycaster = new THREE.Raycaster();\n\n        /**VR模式下射到的对象 */\n        this.hoverObject;\n\n        this.speed = 25;\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.lastX = 0;\n        this.lastY = 0;\n        this.lastZ = 0;\n\n        this.shakeOff = false;\n        this.SHAKE_THRESHOLD = 3000;\n        this.last_update = 0;\n\n        if ('ontouchstart' in window) {\n            this.addTouchEvent();\n        } else {\n            this.addMosueEvent();\n        }\n    }\n\n    /**添加鼠标事件 */\n\n\n    _createClass(SWMouseModule, [{\n        key: 'addMosueEvent',\n        value: function addMosueEvent() {\n            this.canvas3d.addEventListener(\"mousedown\", this.mouseDown.bind(this), false); //鼠标按钮被按下\n            this.canvas3d.addEventListener(\"mouseup\", this.mouseUp.bind(this), false); //鼠标按键被松开\n            this.canvas3d.addEventListener(\"mousemove\", this.mouseMove.bind(this), false); //鼠标被移动\n\n            this.canvas3d.addEventListener(\"mouseover\", this.mouseOver.bind(this), false); //鼠标移到某元素之上\n            this.canvas3d.addEventListener(\"mouseout\", this.mouseOut.bind(this), false); //鼠标从某元素移开\n\n            this.canvas3d.addEventListener(\"wheel\", this.mouseWheel.bind(this), false); //鼠标滚轮\n\n            document.addEventListener('contextmenu', this.contextMenu, false); //关闭右键事件\n        }\n\n        /**清除鼠标事件 */\n\n    }, {\n        key: 'deleteMouseEvent',\n        value: function deleteMouseEvent() {\n            this.canvas3d.removeEventListener(\"mousedown\", this.mouseDown.bind(this), false); //鼠标按钮被按下\n            this.canvas3d.removeEventListener(\"mouseup\", this.mouseUp.bind(this), false); //鼠标按键被松开\n            this.canvas3d.removeEventListener(\"mousemove\", this.mouseMove.bind(this), false); //鼠标被移动\n\n            this.canvas3d.removeEventListener(\"mouseover\", this.mouseOver.bind(this), false); //鼠标移到某元素之上\n            this.canvas3d.removeEventListener(\"mouseout\", this.mouseOut.bind(this), false); //鼠标从某元素移开\n\n            this.canvas3d.removeEventListener(\"wheel\", this.mouseWheel.bind(this), false); //鼠标滚轮\n        }\n\n        /**添加触摸事件 */\n\n    }, {\n        key: 'addTouchEvent',\n        value: function addTouchEvent() {\n            this.canvas3d.addEventListener(\"touchstart\", this.touchStart.bind(this), false); //触摸按下\n            this.canvas3d.addEventListener(\"touchmove\", this.touchMove.bind(this), false); //触摸移动\n            this.canvas3d.addEventListener(\"touchend\", this.touchEnd.bind(this), false); //触摸结束\n        }\n\n        /**清除触摸事件 */\n\n    }, {\n        key: 'deleteTouchEvent',\n        value: function deleteTouchEvent() {\n            this.canvas3d.removeEventListener(\"touchstart\", this.touchStart.bind(this), false); //触摸按下\n            this.canvas3d.removeEventListener(\"touchmove\", this.touchMove.bind(this), false); //触摸移动\n            this.canvas3d.removeEventListener(\"touchend\", this.touchEnd.bind(this), false); //触摸结束\n        }\n\n        /**添加摇一摇功能监听事件 */\n\n    }, {\n        key: 'addShakeEvent',\n        value: function addShakeEvent() {\n            if (window.DeviceMotionEvent) {\n                this.shakeOff = true;\n                window.addEventListener('devicemotion', this.devicemotionEvent.bind(this), false);\n            } else {\n                var store = (0, _store2.default)();\n                store.dispatch((0, _reapop.notify)({\n                    title: '无法检测到您设备的陀螺仪，请您更换设备再试。',\n                    message: '',\n                    position: 'tc',\n                    status: 'error',\n                    dismissible: true,\n                    dismissAfter: 5000\n                }));\n            }\n        }\n\n        /**删除摇一摇功能监听事件 */\n\n    }, {\n        key: 'deleteShakeEvent',\n        value: function deleteShakeEvent() {\n            window.removeEventListener('devicemotion', this.devicemotionEvent.bind(this), false);\n            this.shakeOff = false;\n        }\n    }, {\n        key: 'devicemotionEvent',\n        value: function devicemotionEvent(event) {\n            if (this.shakeOff) {\n                var acceleration = event.accelerationIncludingGravity;\n\n                var curTime = new Date().getTime();\n                var diffTime = curTime - this.last_update;\n\n                // 固定时间段\n                if (diffTime > 100) {\n\n                    this.last_update = curTime;\n\n                    this.x = acceleration.x;\n                    this.y = acceleration.y;\n                    this.z = acceleration.z;\n\n                    var speed = Math.abs(this.x + this.y + this.z - this.lastX - this.lastY - this.lastZ) / diffTime * 10000;\n\n                    if (speed > this.SHAKE_THRESHOLD) {\n                        (0, _SWInitializeInstance.ShakeAmbient)();\n                        console.log('====================================');\n                        console.log(\"摇一摇\");\n                        console.log('====================================');\n                    }\n\n                    this.lastX = this.x;\n                    this.lastY = this.y;\n                    this.lastZ = this.z;\n                }\n            }\n        }\n\n        /**\r\n         * 鼠标屏幕位置 转换到三维（-1 ~ +1）中的\r\n         * @param {Number} ex 鼠标/触摸点X坐标\r\n         * @param {Number} ey 鼠标/触摸点Y坐标\r\n         */\n\n    }, {\n        key: 'mousePosition',\n        value: function mousePosition(ex, ey) {\n\n            this.mouseV2.x = ex / window.innerWidth * 2 - 1;\n\n            this.mouseV2.y = -(ey / window.innerHeight) * 2 + 1;\n        }\n\n        /**\r\n         * 朝着某个点发射线\r\n         * @param {Vector2} mouseXY 屏蔽坐标点\r\n         * @param {Array} [children = constants.scene.children] 默认射击对象为场景所有 \r\n         * @param {Boolean} [recursive = false] 是否启用递归 \r\n         */\n\n    }, {\n        key: 'mouseRaycaster',\n        value: function mouseRaycaster(mouseXY) {\n            var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants.scene.children;\n            var recursive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n\n            this.raycaster.setFromCamera(mouseXY, constants.camera);\n\n            var intersects = this.raycaster.intersectObjects(children, recursive);\n\n            var intersect = void 0,\n                depthlevel = void 0;\n\n            if (intersects.length > 0) {\n\n                depthlevel = intersects[0].object.userData.depthlevel;\n\n                intersect = intersects[0];\n\n                for (var i = 1; i < intersects.length; i++) {\n\n                    if (depthlevel > intersects[i].object.userData.depthlevel) {\n\n                        depthlevel = intersects[i].object.userData.depthlevel;\n\n                        intersect = intersects[i];\n                    }\n                }\n            }\n\n            return intersect;\n        }\n\n        /**\r\n         * 鼠标滚轮事件\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseWheel',\n        value: function mouseWheel(e) {\n\n            constants.sw_cameraManage.onMouseWheel(e);\n        }\n\n        /**\r\n         * 鼠标弹起\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseUp',\n        value: function mouseUp(e) {\n\n            constants.sw_cameraManage.onMouseUp(e);\n\n            if (constants.c_currentState === constants.c_currentStateEnum.editorStatus && constants.c_editorState === constants.c_editorStateEnum.markerPoint) {\n\n                constants.sw_markPoint.addPoint(e.clientX, e.clientY, 2);\n            } else {\n                this.mousePosition(e.clientX, e.clientY);\n\n                this.intersect = this.mouseRaycaster(this.mouseV2);\n\n                var v2 = new THREE.Vector2(e.clientX, e.clientY);\n\n                if (v2.equals(this.startMouse) && this.intersect && this.intersect.object.mouseclick) {\n\n                    console.log(\"点击事件\");\n                    this.intersect.object.mouseclick(e, this.intersect);\n                }\n\n                if (this.intersect && this.intersect.object.mouseUp) {\n                    //模型弹起事件\n\n                    this.intersect.object.mouseUp(e, this.intersect);\n                } else if (this.intersect && this.intersect.object && this.intersect.object.parent && this.intersect.object.parent.mouseUp) {\n\n                    this.intersect.object.parent.mouseUp(e, this.intersect);\n                } else if (!this.intersect && constants.c_isMeasureStatus) {\n                    //测量状态时点击空白处\n\n                    var store = (0, _store2.default)();\n\n                    store.dispatch((0, _reapop.notify)({\n                        title: '此处不能测量，请点击附近墙面和地面。',\n                        message: '',\n                        position: 'tc',\n                        status: 'error',\n                        dismissible: true,\n                        dismissAfter: 5000\n                    }));\n                }\n            }\n        }\n\n        /**\r\n         * 鼠标移动\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseMove',\n        value: function mouseMove(e) {\n\n            constants.sw_cameraManage.onMouseMove(e);\n\n            this.mousePosition(e.clientX, e.clientY);\n\n            var rayObj = this.mouseRaycaster(this.mouseV2);\n\n            if (rayObj) {\n\n                if (this.intersect && this.intersect != rayObj) {\n                    //如果再次返回对象不是上次对象，就是离开对象了\n\n                    if (this.intersect.object.mouseOut) {\n                        //离开模型事件\n\n                        this.intersect.object.mouseOut(e, this.intersect);\n                    }\n                }\n\n                if (rayObj.object.mouseOver) {\n                    //进入模型事件\n\n                    rayObj.object.mouseOver(e, rayObj);\n                }\n\n                if (rayObj.object.mouseMove) {\n                    //移动事件\n\n                    rayObj.object.mouseMove(e, rayObj);\n                }\n            } else if (this.intersect) {\n\n                if (this.intersect.object.mouseOut) {\n                    //离开模型事件\n\n                    this.intersect.object.mouseOut(e, this.intersect);\n                }\n            }\n\n            this.intersect = rayObj;\n        }\n\n        /**\r\n         * 鼠标按下\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseDown',\n        value: function mouseDown(e) {\n\n            var store = (0, _store2.default)();\n\n            store.dispatch((0, _action.show_Thumbnails_fun)(false));\n            store.dispatch((0, _action.show_HotPhotoWall_fun)({\n                off: false\n            }));\n\n            constants.sw_roamingModule.EndRoaming();\n\n            constants.sw_cameraManage.onMouseDown(e);\n\n            this.startMouse = new THREE.Vector2(e.clientX, e.clientY);\n\n            if (constants.c_currentState === constants.c_currentStateEnum.editorStatus && constants.c_editorState === constants.c_editorStateEnum.markerPoint) {\n\n                constants.sw_markPoint.addPoint(e.clientX, e.clientY, 1);\n            } else {\n\n                this.mousePosition(e.clientX, e.clientY);\n\n                this.intersect = this.mouseRaycaster(this.mouseV2);\n\n                if (this.intersect && this.intersect.object.mouseDown) {\n\n                    this.intersect.object.mouseDown(e, this.intersect);\n                } else if (this.intersect && this.intersect.object && this.intersect.object.parent && this.intersect.object.parent.mouseDown) {\n\n                    this.intersect.object.parent.mouseDown(e, this.intersect);\n                }\n            }\n        }\n\n        /**\r\n         * 鼠标从某元素移开 PS:为解决鼠标移动到UI界面上\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseOut',\n        value: function mouseOut(e) {\n            constants.sw_cameraManage.onMouseUp(e);\n        }\n\n        /**\r\n         * 鼠标移到某元素之上\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'mouseOver',\n        value: function mouseOver(e) {}\n\n        /**\r\n         * 触摸开始\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'touchStart',\n        value: function touchStart(e) {\n\n            var store = (0, _store2.default)();\n\n            store.dispatch((0, _action.show_Thumbnails_fun)(false));\n\n            store.dispatch((0, _action.show_HotPhotoWall_fun)({\n                off: false\n            }));\n\n            constants.sw_roamingModule.EndRoaming(); //停止漫游\n\n            constants.sw_cameraManage.onTouchStart(e);\n\n            this.mousePosition(e.targetTouches[0].clientX, e.targetTouches[0].clientY);\n\n            this.intersect = this.mouseRaycaster(this.mouseV2);\n\n            if (this.intersect && this.intersect.object.mouseDown) {\n\n                this.intersect.object.mouseDown(e.targetTouches[0], this.intersect);\n            }\n        }\n\n        /**\r\n         * 触摸结束\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'touchEnd',\n        value: function touchEnd(e) {\n\n            constants.sw_cameraManage.onTouchEnd(e);\n\n            if (e.touches.length == 0) {\n                //屏幕上没有手指才是真的触摸事件触发时\n\n                this.mousePosition(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n\n                this.intersect = this.mouseRaycaster(this.mouseV2);\n\n                if (this.intersect && this.intersect.object.mouseUp) {\n                    //模型弹起事件\n\n                    this.intersect.object.mouseUp(e.changedTouches[0], this.intersect);\n                }\n            }\n        }\n\n        /**\r\n         * 触摸移动\r\n         * @param {Event} e \r\n         */\n\n    }, {\n        key: 'touchMove',\n        value: function touchMove(e) {\n\n            constants.sw_cameraManage.onTouchMove(e);\n        }\n\n        /**屏蔽右键 */\n\n    }, {\n        key: 'contextMenu',\n        value: function contextMenu(e) {\n            e.preventDefault();\n        }\n    }, {\n        key: 'update',\n        value: function update() {\n            var _this = this;\n\n            if (constants.c_mode != constants.c_modes.STEREO || !window) return;\n\n            this.mousePosition(constants.c_clientWidth * 0.5, constants.c_clientHeight * 0.5);\n\n            var rayIntersect = this.mouseRaycaster(this.mouseV2, constants.c_arrowCurentArr, true);\n\n            if (rayIntersect) {\n\n                if (!this.hoverObject || rayIntersect.object !== this.hoverObject.object) {\n\n                    this.hoverObject = rayIntersect;\n\n                    constants.sw_SWReticle.startDwelling(function () {\n\n                        (0, _SWInitializeInstance.jumpSite)(_this.hoverObject.object.name);\n                    });\n                }\n            } else {\n\n                this.hoverObject = rayIntersect;\n\n                //离开对象清除动画\n                constants.sw_SWReticle.cancelDwelling();\n            }\n        }\n    }]);\n\n    return SWMouseModule;\n}();\n\nexports.default = SWMouseModule;",{"version":3,"sources":["app\\src\\module\\SWMouseModule.js"],"names":["constants","SWMouseModule","canvas","canvas3d","startMouse","THREE","Vector2","mouseV2","raycaster","Raycaster","hoverObject","speed","x","y","z","lastX","lastY","lastZ","shakeOff","SHAKE_THRESHOLD","last_update","window","addTouchEvent","addMosueEvent","addEventListener","mouseDown","bind","mouseUp","mouseMove","mouseOver","mouseOut","mouseWheel","document","contextMenu","removeEventListener","touchStart","touchMove","touchEnd","DeviceMotionEvent","devicemotionEvent","store","dispatch","title","message","position","status","dismissible","dismissAfter","event","acceleration","accelerationIncludingGravity","curTime","Date","getTime","diffTime","Math","abs","console","log","ex","ey","innerWidth","innerHeight","mouseXY","children","scene","recursive","setFromCamera","camera","intersects","intersectObjects","intersect","depthlevel","length","object","userData","i","e","sw_cameraManage","onMouseWheel","onMouseUp","c_currentState","c_currentStateEnum","editorStatus","c_editorState","c_editorStateEnum","markerPoint","sw_markPoint","addPoint","clientX","clientY","mousePosition","mouseRaycaster","v2","equals","mouseclick","parent","c_isMeasureStatus","onMouseMove","rayObj","off","sw_roamingModule","EndRoaming","onMouseDown","onTouchStart","targetTouches","onTouchEnd","touches","changedTouches","onTouchMove","preventDefault","c_mode","c_modes","STEREO","c_clientWidth","c_clientHeight","rayIntersect","c_arrowCurentArr","sw_SWReticle","startDwelling","name","cancelDwelling"],"mappings":"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","file":"SWMouseModule.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport * as constants from '../tool/SWConstants';\r\nimport {\r\n    ShakeAmbient,\r\n    jumpSite\r\n} from '../tool/SWInitializeInstance';\r\nimport initStore from '../../views/redux/store/store';\r\nimport {\r\n    show_Thumbnails_fun,\r\n    show_HotPhotoWall_fun\r\n} from '../../views/redux/action';\r\nimport {\r\n    notify\r\n} from 'reapop';\r\n\r\n/**\r\n * 鼠标事件\r\n * 将要解决手机双击的问题\r\n * 由UI层传递屏幕点击坐标之后，在转换成三维坐标射线判定\r\n */\r\nclass SWMouseModule {\r\n    constructor(canvas) {\r\n\r\n        this.canvas3d = canvas;\r\n\r\n        this.startMouse = new THREE.Vector2();\r\n\r\n        /**鼠标坐标 */\r\n        this.mouseV2 = new THREE.Vector2();\r\n\r\n        /**射线 */\r\n        this.raycaster = new THREE.Raycaster();\r\n\r\n        /**VR模式下射到的对象 */\r\n        this.hoverObject;\r\n\r\n        this.speed = 25;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n        this.lastZ = 0;\r\n\r\n        this.shakeOff = false;\r\n        this.SHAKE_THRESHOLD = 3000;\r\n        this.last_update = 0;\r\n\r\n        if ('ontouchstart' in window) {\r\n            this.addTouchEvent();\r\n        } else {\r\n            this.addMosueEvent();\r\n        }\r\n    }\r\n\r\n    /**添加鼠标事件 */\r\n    addMosueEvent() {\r\n        this.canvas3d.addEventListener(\"mousedown\", this.mouseDown.bind(this), false); //鼠标按钮被按下\r\n        this.canvas3d.addEventListener(\"mouseup\", this.mouseUp.bind(this), false); //鼠标按键被松开\r\n        this.canvas3d.addEventListener(\"mousemove\", this.mouseMove.bind(this), false); //鼠标被移动\r\n\r\n        this.canvas3d.addEventListener(\"mouseover\", this.mouseOver.bind(this), false); //鼠标移到某元素之上\r\n        this.canvas3d.addEventListener(\"mouseout\", this.mouseOut.bind(this), false); //鼠标从某元素移开\r\n\r\n        this.canvas3d.addEventListener(\"wheel\", this.mouseWheel.bind(this), false); //鼠标滚轮\r\n\r\n        document.addEventListener('contextmenu', this.contextMenu, false); //关闭右键事件\r\n    }\r\n\r\n    /**清除鼠标事件 */\r\n    deleteMouseEvent() {\r\n        this.canvas3d.removeEventListener(\"mousedown\", this.mouseDown.bind(this), false); //鼠标按钮被按下\r\n        this.canvas3d.removeEventListener(\"mouseup\", this.mouseUp.bind(this), false); //鼠标按键被松开\r\n        this.canvas3d.removeEventListener(\"mousemove\", this.mouseMove.bind(this), false); //鼠标被移动\r\n\r\n        this.canvas3d.removeEventListener(\"mouseover\", this.mouseOver.bind(this), false); //鼠标移到某元素之上\r\n        this.canvas3d.removeEventListener(\"mouseout\", this.mouseOut.bind(this), false); //鼠标从某元素移开\r\n\r\n        this.canvas3d.removeEventListener(\"wheel\", this.mouseWheel.bind(this), false); //鼠标滚轮\r\n\r\n    }\r\n\r\n    /**添加触摸事件 */\r\n    addTouchEvent() {\r\n        this.canvas3d.addEventListener(\"touchstart\", this.touchStart.bind(this), false); //触摸按下\r\n        this.canvas3d.addEventListener(\"touchmove\", this.touchMove.bind(this), false); //触摸移动\r\n        this.canvas3d.addEventListener(\"touchend\", this.touchEnd.bind(this), false); //触摸结束\r\n    }\r\n\r\n    /**清除触摸事件 */\r\n    deleteTouchEvent() {\r\n        this.canvas3d.removeEventListener(\"touchstart\", this.touchStart.bind(this), false); //触摸按下\r\n        this.canvas3d.removeEventListener(\"touchmove\", this.touchMove.bind(this), false); //触摸移动\r\n        this.canvas3d.removeEventListener(\"touchend\", this.touchEnd.bind(this), false); //触摸结束\r\n    }\r\n\r\n    /**添加摇一摇功能监听事件 */\r\n    addShakeEvent() {\r\n        if (window.DeviceMotionEvent) {\r\n            this.shakeOff = true;\r\n            window.addEventListener('devicemotion', this.devicemotionEvent.bind(this), false);\r\n        } else {\r\n            let store = initStore();\r\n            store.dispatch(notify({\r\n                title: '无法检测到您设备的陀螺仪，请您更换设备再试。',\r\n                message: '',\r\n                position: 'tc',\r\n                status: 'error',\r\n                dismissible: true,\r\n                dismissAfter: 5000\r\n            }));\r\n        }\r\n    }\r\n\r\n    /**删除摇一摇功能监听事件 */\r\n    deleteShakeEvent() {\r\n        window.removeEventListener('devicemotion', this.devicemotionEvent.bind(this), false);\r\n        this.shakeOff = false;\r\n    }\r\n\r\n    devicemotionEvent(event) {\r\n        if (this.shakeOff) {\r\n            let acceleration = event.accelerationIncludingGravity;\r\n\r\n            let curTime = new Date().getTime();\r\n            let diffTime = curTime - this.last_update;\r\n\r\n            // 固定时间段\r\n            if (diffTime > 100) {\r\n\r\n                this.last_update = curTime;\r\n\r\n                this.x = acceleration.x;\r\n                this.y = acceleration.y;\r\n                this.z = acceleration.z;\r\n\r\n                let speed = Math.abs(this.x + this.y + this.z - this.lastX - this.lastY - this.lastZ) / diffTime * 10000;\r\n\r\n                if (speed > this.SHAKE_THRESHOLD) {\r\n                    ShakeAmbient();\r\n                    console.log('====================================');\r\n                    console.log(\"摇一摇\");\r\n                    console.log('====================================');\r\n                }\r\n\r\n                this.lastX = this.x;\r\n                this.lastY = this.y;\r\n                this.lastZ = this.z;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标屏幕位置 转换到三维（-1 ~ +1）中的\r\n     * @param {Number} ex 鼠标/触摸点X坐标\r\n     * @param {Number} ey 鼠标/触摸点Y坐标\r\n     */\r\n    mousePosition(ex, ey) {\r\n\r\n        this.mouseV2.x = (ex / window.innerWidth) * 2 - 1;\r\n\r\n        this.mouseV2.y = -(ey / window.innerHeight) * 2 + 1;\r\n    }\r\n\r\n\r\n    /**\r\n     * 朝着某个点发射线\r\n     * @param {Vector2} mouseXY 屏蔽坐标点\r\n     * @param {Array} [children = constants.scene.children] 默认射击对象为场景所有 \r\n     * @param {Boolean} [recursive = false] 是否启用递归 \r\n     */\r\n    mouseRaycaster(mouseXY, children = constants.scene.children, recursive = true) {\r\n\r\n        this.raycaster.setFromCamera(mouseXY, constants.camera);\r\n\r\n        let intersects = this.raycaster.intersectObjects(children, recursive);\r\n\r\n        let intersect, depthlevel;\r\n\r\n        if (intersects.length > 0) {\r\n\r\n            depthlevel = intersects[0].object.userData.depthlevel;\r\n\r\n            intersect = intersects[0];\r\n\r\n            for (let i = 1; i < intersects.length; i++) {\r\n\r\n                if (depthlevel > intersects[i].object.userData.depthlevel) {\r\n\r\n                    depthlevel = intersects[i].object.userData.depthlevel;\r\n\r\n                    intersect = intersects[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return intersect;\r\n    }\r\n\r\n    /**\r\n     * 鼠标滚轮事件\r\n     * @param {Event} e \r\n     */\r\n    mouseWheel(e) {\r\n\r\n        constants.sw_cameraManage.onMouseWheel(e);\r\n\r\n    }\r\n\r\n    /**\r\n     * 鼠标弹起\r\n     * @param {Event} e \r\n     */\r\n    mouseUp(e) {\r\n\r\n        constants.sw_cameraManage.onMouseUp(e);\r\n\r\n        if (constants.c_currentState === constants.c_currentStateEnum.editorStatus &&\r\n            constants.c_editorState === constants.c_editorStateEnum.markerPoint) {\r\n\r\n            constants.sw_markPoint.addPoint(e.clientX, e.clientY, 2);\r\n\r\n        } else {\r\n            this.mousePosition(e.clientX, e.clientY);\r\n\r\n            this.intersect = this.mouseRaycaster(this.mouseV2);\r\n\r\n            let v2 = new THREE.Vector2(e.clientX, e.clientY);\r\n\r\n            if (v2.equals(this.startMouse) && this.intersect && this.intersect.object.mouseclick) {\r\n\r\n                console.log(\"点击事件\");\r\n                this.intersect.object.mouseclick(e, this.intersect);\r\n            }\r\n\r\n            if (this.intersect && this.intersect.object.mouseUp) { //模型弹起事件\r\n\r\n                this.intersect.object.mouseUp(e, this.intersect);\r\n\r\n            } else if(this.intersect && this.intersect.object && this.intersect.object.parent && this.intersect.object.parent.mouseUp){\r\n\r\n                this.intersect.object.parent.mouseUp(e, this.intersect);\r\n                \r\n            }else if (!this.intersect && constants.c_isMeasureStatus) { //测量状态时点击空白处\r\n\r\n                let store = initStore();\r\n\r\n                store.dispatch(notify({\r\n                    title: '此处不能测量，请点击附近墙面和地面。',\r\n                    message: '',\r\n                    position: 'tc',\r\n                    status: 'error',\r\n                    dismissible: true,\r\n                    dismissAfter: 5000\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标移动\r\n     * @param {Event} e \r\n     */\r\n    mouseMove(e) {\r\n\r\n        constants.sw_cameraManage.onMouseMove(e);\r\n\r\n        this.mousePosition(e.clientX, e.clientY);\r\n\r\n        let rayObj = this.mouseRaycaster(this.mouseV2);\r\n\r\n        if (rayObj) {\r\n\r\n            if (this.intersect && this.intersect != rayObj) { //如果再次返回对象不是上次对象，就是离开对象了\r\n\r\n                if (this.intersect.object.mouseOut) { //离开模型事件\r\n\r\n                    this.intersect.object.mouseOut(e, this.intersect);\r\n\r\n                }\r\n            }\r\n\r\n            if (rayObj.object.mouseOver) { //进入模型事件\r\n\r\n                rayObj.object.mouseOver(e, rayObj);\r\n\r\n            }\r\n\r\n            if (rayObj.object.mouseMove) { //移动事件\r\n\r\n                rayObj.object.mouseMove(e, rayObj);\r\n\r\n            }\r\n\r\n        } else if (this.intersect) {\r\n\r\n            if (this.intersect.object.mouseOut) { //离开模型事件\r\n\r\n                this.intersect.object.mouseOut(e, this.intersect);\r\n\r\n            }\r\n        }\r\n\r\n        this.intersect = rayObj;\r\n    }\r\n\r\n    /**\r\n     * 鼠标按下\r\n     * @param {Event} e \r\n     */\r\n    mouseDown(e) {\r\n\r\n        let store = initStore();\r\n\r\n        store.dispatch(show_Thumbnails_fun(false));\r\n        store.dispatch(show_HotPhotoWall_fun({\r\n            off: false\r\n        }));\r\n\r\n        constants.sw_roamingModule.EndRoaming();\r\n\r\n        constants.sw_cameraManage.onMouseDown(e);\r\n\r\n        this.startMouse = new THREE.Vector2(e.clientX, e.clientY);\r\n\r\n        if (constants.c_currentState === constants.c_currentStateEnum.editorStatus &&\r\n            constants.c_editorState === constants.c_editorStateEnum.markerPoint) {\r\n\r\n            constants.sw_markPoint.addPoint(e.clientX, e.clientY, 1);\r\n\r\n        } else {\r\n\r\n            this.mousePosition(e.clientX, e.clientY);\r\n\r\n            this.intersect = this.mouseRaycaster(this.mouseV2);\r\n\r\n            if (this.intersect && this.intersect.object.mouseDown) {\r\n\r\n                this.intersect.object.mouseDown(e, this.intersect);\r\n\r\n            }else if(this.intersect && this.intersect.object && this.intersect.object.parent && this.intersect.object.parent.mouseDown){\r\n\r\n                this.intersect.object.parent.mouseDown(e, this.intersect);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 鼠标从某元素移开 PS:为解决鼠标移动到UI界面上\r\n     * @param {Event} e \r\n     */\r\n    mouseOut(e) {\r\n        constants.sw_cameraManage.onMouseUp(e);\r\n    }\r\n\r\n    /**\r\n     * 鼠标移到某元素之上\r\n     * @param {Event} e \r\n     */\r\n    mouseOver(e) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 触摸开始\r\n     * @param {Event} e \r\n     */\r\n    touchStart(e) {\r\n\r\n        let store = initStore();\r\n\r\n        store.dispatch(show_Thumbnails_fun(false));\r\n\r\n        store.dispatch(show_HotPhotoWall_fun({\r\n            off: false\r\n        }));\r\n\r\n        constants.sw_roamingModule.EndRoaming(); //停止漫游\r\n\r\n        constants.sw_cameraManage.onTouchStart(e);\r\n\r\n        this.mousePosition(e.targetTouches[0].clientX, e.targetTouches[0].clientY);\r\n\r\n        this.intersect = this.mouseRaycaster(this.mouseV2);\r\n\r\n        if (this.intersect && this.intersect.object.mouseDown) {\r\n\r\n            this.intersect.object.mouseDown(e.targetTouches[0], this.intersect);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触摸结束\r\n     * @param {Event} e \r\n     */\r\n    touchEnd(e) {\r\n\r\n        constants.sw_cameraManage.onTouchEnd(e);\r\n\r\n        if (e.touches.length == 0) { //屏幕上没有手指才是真的触摸事件触发时\r\n\r\n            this.mousePosition(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\r\n\r\n            this.intersect = this.mouseRaycaster(this.mouseV2);\r\n\r\n            if (this.intersect && this.intersect.object.mouseUp) { //模型弹起事件\r\n\r\n                this.intersect.object.mouseUp(e.changedTouches[0], this.intersect);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触摸移动\r\n     * @param {Event} e \r\n     */\r\n    touchMove(e) {\r\n\r\n        constants.sw_cameraManage.onTouchMove(e);\r\n\r\n    }\r\n\r\n    /**屏蔽右键 */\r\n    contextMenu(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    update() {\r\n\r\n        if (constants.c_mode != constants.c_modes.STEREO || !window) return;\r\n\r\n        this.mousePosition(constants.c_clientWidth * 0.5, constants.c_clientHeight * 0.5);\r\n\r\n        let rayIntersect = this.mouseRaycaster(this.mouseV2, constants.c_arrowCurentArr, true);\r\n\r\n        if (rayIntersect) {\r\n\r\n            if (!this.hoverObject || rayIntersect.object !== this.hoverObject.object) {\r\n\r\n                this.hoverObject = rayIntersect;\r\n\r\n                constants.sw_SWReticle.startDwelling(() => {\r\n\r\n                    jumpSite(this.hoverObject.object.name);\r\n\r\n                });\r\n            }\r\n        } else {\r\n\r\n            this.hoverObject = rayIntersect;\r\n\r\n            //离开对象清除动画\r\n            constants.sw_SWReticle.cancelDwelling();\r\n        }\r\n    }\r\n}\r\n\r\nexport default SWMouseModule;"]}]}