{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js??ref--5-0!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\marker\\SWMarkerModule.js","mtime":1531378324665},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\.babelrc","mtime":1526554899270},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526631545426},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE,$*/\n\nvar _SWTool = require('../../tool/SWTool');\n\nvar _SWTextureAnimator = require('../../tool/SWTextureAnimator');\n\nvar _SWTextureAnimator2 = _interopRequireDefault(_SWTextureAnimator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 全景除了底层盒子、UI 都是标注\r\n * 这是所有标注的父类\r\n */\nvar SWMarkerModule = function () {\n    /**\r\n     * \r\n     * @param {String} url 图片链接地址\r\n     * @param {Number} type 1-静态 2-动态 \r\n     * @param {Object} obj {fpsNum:帧数，wPlane:宽，hPlane：高}\r\n     */\n    function SWMarkerModule(url, type, obj) {\n        _classCallCheck(this, SWMarkerModule);\n\n        this.markerType = type;\n\n        if (url) {\n            this.texture = new THREE.ImageUtils.loadTexture(url);\n        }\n\n        if (obj) {\n            this.textureAnimator = new _SWTextureAnimator2.default(this.texture, obj.fpsNum, 1, obj.fpsNum, 100);\n\n            this.geometry = new THREE.PlaneGeometry(obj.wPlane, obj.hPlane, 1, 1);\n\n            this.material = new THREE.MeshBasicMaterial({\n                map: this.texture,\n                side: 2,\n                transparent: true,\n                opacity: 1\n            });\n        } else {\n\n            this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n\n            this.material = new THREE.MeshBasicMaterial({ color: 0xffff00 });\n        }\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        this.textDiv = new _SWTool.TextDiv(new THREE.Vector3(0, 0, 0), 12, \"\");\n        this.textDiv.id = \"markerMesh\";\n        this.textDiv.style.display = \"none\";\n        this.textDiv.style.color = \"#FFF\";\n        this.textDiv.style.borderRadius = \"3px\";\n        this.textDiv.style.backgroundColor = \"rgba(16, 16, 16, 0.3)\";\n        this.textDiv.style.padding = \"3px 10px\";\n        this.textDiv.style.letterSpacing = \"2px\";\n    }\n\n    /**\r\n     * 不停的更新动画\r\n     * @param {Number} delta 补帧时间\r\n     */\n\n\n    _createClass(SWMarkerModule, [{\n        key: 'update',\n        value: function update(delta) {\n            if (this.textureAnimator && this.markerType == 2) {\n\n                this.textureAnimator.update(1000 * delta);\n            }\n        }\n\n        /**\r\n         * 显示标注文本说明\r\n         * @param {Object} obj 射线返回对象\r\n         * @param {String} str 显示文本\r\n         */\n\n    }, {\n        key: 'showTextDiv',\n        value: function showTextDiv(obj, str) {\n            if (str && str != \"\") {\n\n                this.textDiv.style.display = \"block\";\n\n                var labelPos = (0, _SWTool.getWorldToScene)(obj.point);\n\n                this.textDiv.style.left = labelPos.x - 30 + \"px\";\n\n                this.textDiv.style.top = labelPos.y - 40 + \"px\";\n\n                this.textDiv.innerHTML = str;\n            }\n        }\n\n        /**隐藏标注说明文本 */\n\n    }, {\n        key: 'hideTextDiv',\n        value: function hideTextDiv() {\n\n            this.textDiv.style.display = \"none\";\n        }\n\n        /**清空对象 */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n\n            this.textureAnimator = null;\n\n            (0, _SWTool.delectTextDiv)(this.textDiv);\n\n            (0, _SWTool.disposeNode)(this.mesh);\n        }\n    }]);\n\n    return SWMarkerModule;\n}();\n\nexports.default = SWMarkerModule;",null]}