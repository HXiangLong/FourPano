{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","mtime":1541063599633},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LoadPreviewImage = LoadPreviewImage;\nexports.deleteAll = deleteAll;\nexports.deleteMarker = deleteMarker;\nexports.deleteMeasuring = deleteMeasuring;\nexports.AddOldArrow = AddOldArrow;\nexports.AddNewArrow = AddNewArrow;\nexports.jumpSite = jumpSite;\nexports.AddMarkerMesh = AddMarkerMesh;\nexports.AddSmallVideo = AddSmallVideo;\nexports.InitialOrientation = InitialOrientation;\nexports.rotateByWallClick = rotateByWallClick;\nexports.JumpLookMarker = JumpLookMarker;\n\nvar _SWConstants = require('./SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWTool = require('./SWTool');\n\nvar _SWMarkerArrowModule = require('../module/marker/SWMarkerArrowModule');\n\nvar _SWMarkerArrowModule2 = _interopRequireDefault(_SWMarkerArrowModule);\n\nvar _SWMarkerSingleModule = require('../module/marker/SWMarkerSingleModule');\n\nvar _SWMarkerSingleModule2 = _interopRequireDefault(_SWMarkerSingleModule);\n\nvar _SWMarkerMoreModule = require('../module/marker/SWMarkerMoreModule');\n\nvar _SWMarkerMoreModule2 = _interopRequireDefault(_SWMarkerMoreModule);\n\nvar _SWMarkerVideoModule = require('../module/marker/SWMarkerVideoModule');\n\nvar _SWMarkerVideoModule2 = _interopRequireDefault(_SWMarkerVideoModule);\n\nvar _store = require('../../views/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _action = require('../../views/redux/action');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar swExternalConst = require('./SWExternalConst');\n\n/**加载完成之后调用 */\nfunction LoadPreviewImage() {\n\n    var panoData = constants.c_panoIDTable.getValue(constants.c_StationInfo.panoID);\n\n    //站点跳转之后需要更新一下小地图\n    var store = (0, _store2.default)();\n    store.dispatch((0, _action.show_PanoMap_fun)({\n        pID: constants.c_StationInfo.panoID\n    }));\n\n    store.dispatch((0, _action.pano_prompt_fun)({\n        panoNames: panoData.names == \"\" ? panoData.markerContent : panoData.names\n    }));\n\n    AddMarkerMesh();\n\n    var waitTime = setTimeout(function () {\n\n        if (constants.c_isWallClickRotateBoo) {\n\n            constants.c_isWallClickRotateBoo = false;\n\n            rotateByWallClick();\n        }\n\n        InitialOrientation();\n\n        if (constants.c_currentState != constants.c_currentStateEnum.phoneStatus) {\n            //手机版现在还不能嵌入视频\n\n            AddSmallVideo();\n        }\n\n        clearTimeout(waitTime);\n\n        constants.c_JumpCompleted = true;\n    }, 500);\n}\n\n/**跳转时需要清除所有的东西 */\nfunction deleteAll() {\n\n    deleteMarker();\n\n    //清除箭头\n    constants.c_arrowArr.forEach(function (item) {\n\n        if (item) item.clearArrow();\n    });\n    constants.c_arrowArr.length = 0;\n\n    //清除墙面片\n    constants.sw_wallMesh.clear();\n\n    //隐藏探面\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\n\n    constants.sw_measure.clear();\n\n    constants.c_smallVideoArr.forEach(function (item) {\n\n        if (item) item.clearSmallVideo();\n    });\n    constants.c_smallVideoArr.length = 0;\n\n    deleteMeasuring();\n}\n\nfunction deleteMarker() {\n    //清理标注\n    constants.c_markerMeshArr.forEach(function (item) {\n\n        item.clear();\n    });\n    constants.c_markerMeshArr.length = 0;\n}\n\n/**清除测量 */\nfunction deleteMeasuring() {\n\n    constants.c_isMeasureStatus = false;\n\n    constants.sw_measure.clear();\n}\n\n/**\r\n * 添加老箭头数据\r\n * */\nfunction AddOldArrow() {\n    constants.c_AdjacentPanoInfoArr.forEach(function (obj) {\n\n        constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n    });\n\n    constants.sw_getService.getNewArrow();\n}\n\n/**\r\n * 添加新箭头数据\r\n * */\nfunction AddNewArrow() {\n\n    var boo = true;\n\n    if (constants.c_arrowArr.length == 0) {\n\n        boo = false;\n    }\n\n    constants.c_ArrowPanoInfoArr.forEach(function (obj) {\n\n        if (boo) {\n\n            constants.c_arrowArr.forEach(function (item) {\n\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\n\n                    item.updateLocation(obj);\n                }\n            });\n        } else {\n\n            constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n        }\n    });\n}\n\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\nfunction jumpSite(panoID) {\n\n    constants.c_JumpCompleted = false;\n\n    deleteAll();\n\n    constants.sw_getService.getPanoByID(panoID);\n}\n\n/**\r\n * 添加标注\r\n * */\nfunction AddMarkerMesh() {\n\n    constants.c_markerInfoArr.forEach(function (obj) {\n\n        if (obj.centerX != 0 && obj.centerY != 0) {\n\n            constants.c_markerMeshArr.push(new _SWMarkerSingleModule2.default(obj));\n        } else {\n\n            constants.c_markerMeshArr.push(new _SWMarkerMoreModule2.default(obj));\n        }\n\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\n\n            constants.c_JumpMarkerID = \"\";\n\n            JumpLookMarker(obj);\n        }\n    });\n}\n\n/**\r\n * 添加视频\r\n * */\nfunction AddSmallVideo() {\n\n    var tableValue = constants.c_allVideoTable.getValues();\n\n    var vboo = false;\n\n    constants.c_isDisplayFace = true;\n\n    tableValue.forEach(function (obj) {\n\n        if (obj.panoID == constants.c_StationInfo.panoID) {\n\n            vboo = true;\n\n            var details = JSON.parse(obj.details);\n\n            constants.c_smallVideoArr.push(new _SWMarkerVideoModule2.default(details, obj.panoID));\n\n            var yp = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(details.posX, details.posY, details.posZ));\n\n            (0, _SWTool.setCameraAngle)(yp.Yaw, yp.Pitch, true);\n\n            constants.c_isDisplayFace = details.openBox || false;\n        }\n    });\n\n    if (vboo) {\n\n        var store = (0, _store2.default)();\n\n        store.dispatch((0, _action.background_music_fun)({\n            bgMusicOff: false\n        }));\n    }\n};\n\n/**初始朝向 */\nfunction InitialOrientation() {\n\n    //如果传入站点和配置点冲突了，以传入站点为主\n    if (swExternalConst.server_json.firstAnimation && swExternalConst.server_json.firstPanoID == constants.c_StationInfo.panoID) {\n\n        swExternalConst.server_json.firstAnimation = false;\n\n        (0, _SWTool.setCameraAngle)(swExternalConst.server_json.firstYaw, swExternalConst.server_json.firstPitch, true);\n    } else {\n\n        swExternalConst.server_json.data.InitialOrientation.forEach(function (obj, idx) {\n\n            if (obj.panoid == constants.c_StationInfo.panoID) {\n\n                (0, _SWTool.setCameraAngle)(obj.yaw, obj.pitch, true);\n            }\n        });\n    }\n}\n\n/**\r\n * 跳转之后看向某一个点\r\n * */\nfunction rotateByWallClick() {\n\n    var aa = constants.c_wallClickRotateV3.clone().sub(constants.c_StationInfo.point.clone());\n\n    var bb = aa.clone().applyMatrix4(constants.c_DS3ToOpenGLMx4);\n\n    var swvg = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(bb.z, -bb.y, bb.x));\n\n    (0, _SWTool.setCameraAngle)(swvg.Yaw, swvg.Pitch, true);\n};\n\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\nfunction JumpLookMarker(obj) {\n\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\n\n        (0, _SWTool.setCameraAngle)(obj.centerX, obj.centerY, true);\n    } else {\n\n        var yaw = [],\n            pitch = [];\n\n        obj.points.forEach(function (objs) {\n\n            yaw.push(parseFloat(objs.yaw));\n\n            pitch.push(parseFloat(objs.pitch));\n        });\n\n        var yawArr = yaw.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var pitchArr = pitch.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var num = yawArr[yawArr.length - 1];\n\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\n\n            num = 360 - yawArr[yawArr.length - 1];\n        }\n\n        var yy = yawArr[0] + (num - yawArr[0]) * 0.5;\n\n        var pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\n\n        (0, _SWTool.setCameraAngle)(yy, pp, true);\n    }\n}",{"version":3,"sources":["app\\src\\tool\\SWInitializeInstance.js"],"names":["LoadPreviewImage","deleteAll","deleteMarker","deleteMeasuring","AddOldArrow","AddNewArrow","jumpSite","AddMarkerMesh","AddSmallVideo","InitialOrientation","rotateByWallClick","JumpLookMarker","constants","swExternalConst","require","panoData","c_panoIDTable","getValue","c_StationInfo","panoID","store","dispatch","pID","panoNames","names","markerContent","waitTime","setTimeout","c_isWallClickRotateBoo","c_currentState","c_currentStateEnum","phoneStatus","clearTimeout","c_JumpCompleted","c_arrowArr","forEach","item","clearArrow","length","sw_wallMesh","clear","sw_wallProbeSurface","wallProbeSurfaceVisible","sw_measure","c_smallVideoArr","clearSmallVideo","c_markerMeshArr","c_isMeasureStatus","c_AdjacentPanoInfoArr","obj","push","SWMarkerArrowModule","sw_getService","getNewArrow","boo","c_ArrowPanoInfoArr","arrowData","srcPanoID","dstPanoID","updateLocation","getPanoByID","c_markerInfoArr","centerX","centerY","SWMarkerSingleModule","SWMarkerMoreModule","c_JumpMarkerID","markerID","tableValue","c_allVideoTable","getValues","vboo","c_isDisplayFace","details","JSON","parse","SWMarkerVideoModule","yp","THREE","Vector3","posX","posY","posZ","Yaw","Pitch","openBox","bgMusicOff","server_json","firstAnimation","firstPanoID","firstYaw","firstPitch","data","idx","panoid","yaw","pitch","aa","c_wallClickRotateV3","clone","sub","point","bb","applyMatrix4","c_DS3ToOpenGLMx4","swvg","z","y","x","centerZ","points","objs","parseFloat","yawArr","sort","a","b","pitchArr","num","yy","pp"],"mappings":"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","file":"SWInitializeInstance.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["import * as constants from './SWConstants';\r\nimport {\r\n    setCameraAngle,\r\n    Vector3ToVP\r\n} from './SWTool';\r\nimport SWMarkerArrowModule from '../module/marker/SWMarkerArrowModule';\r\nimport SWMarkerSingleModule from '../module/marker/SWMarkerSingleModule';\r\nimport SWMarkerMoreModule from '../module/marker/SWMarkerMoreModule';\r\nimport SWMarkerVideoModule from '../module/marker/SWMarkerVideoModule';\r\nimport initStore from '../../views/redux/store/store';\r\nimport {\r\n    background_music_fun,\r\n    show_PanoMap_fun,\r\n    pano_prompt_fun\r\n} from '../../views/redux/action';\r\nconst swExternalConst = require('./SWExternalConst');\r\n\r\n/**加载完成之后调用 */\r\nexport function LoadPreviewImage() {\r\n\r\n    let panoData = constants.c_panoIDTable.getValue(constants.c_StationInfo.panoID);\r\n\r\n    //站点跳转之后需要更新一下小地图\r\n    let store = initStore();\r\n    store.dispatch(show_PanoMap_fun({\r\n        pID: constants.c_StationInfo.panoID\r\n    }));\r\n\r\n    store.dispatch(pano_prompt_fun({\r\n        panoNames: panoData.names == \"\" ? panoData.markerContent : panoData.names\r\n    }));\r\n\r\n    AddMarkerMesh();\r\n\r\n    let waitTime = setTimeout(() => {\r\n\r\n        if (constants.c_isWallClickRotateBoo) {\r\n\r\n            constants.c_isWallClickRotateBoo = false;\r\n\r\n            rotateByWallClick();\r\n        }\r\n\r\n        InitialOrientation();\r\n\r\n        if (constants.c_currentState != constants.c_currentStateEnum.phoneStatus) { //手机版现在还不能嵌入视频\r\n\r\n            AddSmallVideo();\r\n\r\n        }\r\n\r\n        clearTimeout(waitTime);\r\n\r\n        constants.c_JumpCompleted = true;\r\n\r\n    }, 500);\r\n}\r\n\r\n/**跳转时需要清除所有的东西 */\r\nexport function deleteAll() {\r\n\r\n    deleteMarker();\r\n\r\n    //清除箭头\r\n    constants.c_arrowArr.forEach((item) => {\r\n\r\n        if (item) item.clearArrow();\r\n\r\n    });\r\n    constants.c_arrowArr.length = 0;\r\n\r\n    //清除墙面片\r\n    constants.sw_wallMesh.clear();\r\n\r\n    //隐藏探面\r\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\r\n\r\n    constants.sw_measure.clear();\r\n\r\n    constants.c_smallVideoArr.forEach((item) => {\r\n\r\n        if (item) item.clearSmallVideo();\r\n\r\n    });\r\n    constants.c_smallVideoArr.length = 0;\r\n\r\n    deleteMeasuring();\r\n}\r\n\r\nexport function deleteMarker() {\r\n    //清理标注\r\n    constants.c_markerMeshArr.forEach((item) => {\r\n\r\n        item.clear();\r\n\r\n    });\r\n    constants.c_markerMeshArr.length = 0;\r\n}\r\n\r\n/**清除测量 */\r\nexport function deleteMeasuring() {\r\n\r\n    constants.c_isMeasureStatus = false;\r\n\r\n    constants.sw_measure.clear();\r\n}\r\n\r\n/**\r\n * 添加老箭头数据\r\n * */\r\nexport function AddOldArrow() {\r\n    constants.c_AdjacentPanoInfoArr.forEach((obj) => {\r\n\r\n        constants.c_arrowArr.push(new SWMarkerArrowModule(obj));\r\n\r\n    });\r\n\r\n    constants.sw_getService.getNewArrow();\r\n}\r\n\r\n/**\r\n * 添加新箭头数据\r\n * */\r\nexport function AddNewArrow() {\r\n\r\n    let boo = true;\r\n\r\n    if (constants.c_arrowArr.length == 0) {\r\n\r\n        boo = false;\r\n    }\r\n\r\n    constants.c_ArrowPanoInfoArr.forEach((obj) => {\r\n\r\n        if (boo) {\r\n\r\n            constants.c_arrowArr.forEach((item) => {\r\n\r\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\r\n\r\n                    item.updateLocation(obj);\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } else {\r\n\r\n            constants.c_arrowArr.push(new SWMarkerArrowModule(obj));\r\n\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\r\nexport function jumpSite(panoID) {\r\n\r\n    constants.c_JumpCompleted = false;\r\n\r\n    deleteAll();\r\n\r\n    constants.sw_getService.getPanoByID(panoID);\r\n}\r\n\r\n/**\r\n * 添加标注\r\n * */\r\nexport function AddMarkerMesh() {\r\n\r\n    constants.c_markerInfoArr.forEach((obj) => {\r\n\r\n        if (obj.centerX != 0 && obj.centerY != 0) {\r\n\r\n            constants.c_markerMeshArr.push(new SWMarkerSingleModule(obj));\r\n\r\n        } else {\r\n\r\n            constants.c_markerMeshArr.push(new SWMarkerMoreModule(obj));\r\n\r\n        }\r\n\r\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\r\n\r\n            constants.c_JumpMarkerID = \"\";\r\n\r\n            JumpLookMarker(obj);\r\n\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 添加视频\r\n * */\r\nexport function AddSmallVideo() {\r\n\r\n    let tableValue = constants.c_allVideoTable.getValues();\r\n\r\n    let vboo = false;\r\n\r\n    constants.c_isDisplayFace = true;\r\n\r\n    tableValue.forEach((obj) => {\r\n\r\n        if (obj.panoID == constants.c_StationInfo.panoID) {\r\n\r\n            vboo = true;\r\n\r\n            let details = JSON.parse(obj.details);\r\n\r\n            constants.c_smallVideoArr.push(new SWMarkerVideoModule(details, obj.panoID));\r\n\r\n            var yp = Vector3ToVP(new THREE.Vector3(details.posX, details.posY, details.posZ));\r\n\r\n            setCameraAngle(yp.Yaw, yp.Pitch, true);\r\n\r\n            constants.c_isDisplayFace = details.openBox || false;\r\n\r\n        }\r\n    });\r\n\r\n    if (vboo) {\r\n\r\n        let store = initStore();\r\n\r\n        store.dispatch(background_music_fun({\r\n            bgMusicOff: false\r\n        }));\r\n    }\r\n};\r\n\r\n/**初始朝向 */\r\nexport function InitialOrientation() {\r\n\r\n    //如果传入站点和配置点冲突了，以传入站点为主\r\n    if (swExternalConst.server_json.firstAnimation && swExternalConst.server_json.firstPanoID == constants.c_StationInfo.panoID) {\r\n\r\n        swExternalConst.server_json.firstAnimation = false;\r\n\r\n        setCameraAngle(swExternalConst.server_json.firstYaw, swExternalConst.server_json.firstPitch, true);\r\n\r\n    } else {\r\n\r\n        swExternalConst.server_json.data.InitialOrientation.forEach((obj, idx) => {\r\n\r\n            if (obj.panoid == constants.c_StationInfo.panoID) {\r\n\r\n                setCameraAngle(obj.yaw, obj.pitch, true);\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 跳转之后看向某一个点\r\n * */\r\nexport function rotateByWallClick() {\r\n\r\n    let aa = constants.c_wallClickRotateV3.clone().sub(constants.c_StationInfo.point.clone());\r\n\r\n    let bb = aa.clone().applyMatrix4(constants.c_DS3ToOpenGLMx4);\r\n\r\n    let swvg = Vector3ToVP(new THREE.Vector3(bb.z, -bb.y, bb.x));\r\n\r\n    setCameraAngle(swvg.Yaw, swvg.Pitch, true);\r\n};\r\n\r\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\r\nexport function JumpLookMarker(obj) {\r\n\r\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\r\n\r\n        setCameraAngle(obj.centerX, obj.centerY, true);\r\n\r\n    } else {\r\n\r\n        let yaw = [],\r\n            pitch = [];\r\n\r\n        obj.points.forEach((objs) => {\r\n\r\n            yaw.push(parseFloat(objs.yaw));\r\n\r\n            pitch.push(parseFloat(objs.pitch));\r\n\r\n        });\r\n\r\n        let yawArr = yaw.sort(function (a, b) {\r\n            if (a > b) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n\r\n        let pitchArr = pitch.sort(function (a, b) {\r\n            if (a > b) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n\r\n        let num = yawArr[yawArr.length - 1];\r\n\r\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\r\n\r\n            num = 360 - yawArr[yawArr.length - 1];\r\n\r\n        }\r\n\r\n        let yy = yawArr[0] + (num - yawArr[0]) * 0.5;\r\n\r\n        let pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\r\n\r\n        setCameraAngle(yy, pp, true);\r\n    }\r\n}"]}]}