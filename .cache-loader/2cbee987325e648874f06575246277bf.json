{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\tool\\SWInitializeInstance.js","mtime":1547085670547},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LoadPreviewImage = LoadPreviewImage;\nexports.storeDispatch = storeDispatch;\nexports.deleteAll = deleteAll;\nexports.deleteMarker = deleteMarker;\nexports.deleteMeasuring = deleteMeasuring;\nexports.AddOldArrow = AddOldArrow;\nexports.AddNewArrow = AddNewArrow;\nexports.jumpSite = jumpSite;\nexports.AddMarkerMesh = AddMarkerMesh;\nexports.AddSmallVideo = AddSmallVideo;\nexports.InitialOrientation = InitialOrientation;\nexports.rotateByWallClick = rotateByWallClick;\nexports.JumpLookMarker = JumpLookMarker;\nexports.ShakeAmbient = ShakeAmbient;\nexports.VRShow = VRShow;\nexports.VRHide = VRHide;\nexports.gyroStatus = gyroStatus;\n\nvar _SWConstants = require('./SWConstants');\n\nvar constants = _interopRequireWildcard(_SWConstants);\n\nvar _SWTool = require('./SWTool');\n\nvar _SWMarkerArrowModule = require('../module/marker/SWMarkerArrowModule');\n\nvar _SWMarkerArrowModule2 = _interopRequireDefault(_SWMarkerArrowModule);\n\nvar _SWMarkerSingleModule = require('../module/marker/SWMarkerSingleModule');\n\nvar _SWMarkerSingleModule2 = _interopRequireDefault(_SWMarkerSingleModule);\n\nvar _SWMarkerMoreModule = require('../module/marker/SWMarkerMoreModule');\n\nvar _SWMarkerMoreModule2 = _interopRequireDefault(_SWMarkerMoreModule);\n\nvar _SWMarkerVideoModule = require('../module/marker/SWMarkerVideoModule');\n\nvar _SWMarkerVideoModule2 = _interopRequireDefault(_SWMarkerVideoModule);\n\nvar _SWSiteLocationMoudle = require('../module/marker/SWSiteLocationMoudle');\n\nvar _SWSiteLocationMoudle2 = _interopRequireDefault(_SWSiteLocationMoudle);\n\nvar _store = require('../../views/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _action = require('../../views/redux/action');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar swExternalConst = require('./SWExternalConst');\nvar external = require('../tool/SWExternalConst.js');\n\nvar TWEEN = require('@tweenjs/tween.js');\n\n/**加载完成之后调用 */\nfunction LoadPreviewImage() {\n\n    storeDispatch();\n\n    var waitTime = setTimeout(function () {\n\n        //墙面跳转朝向 优先级最低\n        if (constants.c_isWallClickRotateBoo) {\n\n            constants.c_isWallClickRotateBoo = false;\n\n            rotateByWallClick();\n        }\n\n        //初始朝向 优先级中等\n        InitialOrientation();\n\n        //嵌入视频朝向 优先级最高\n        AddSmallVideo();\n\n        //标注 主要是为了点击热点墙时能看向热点\n        AddMarkerMesh();\n\n        //跳转之后，第一眼要加载\n        constants.sw_skyBox.panoBox.addFaceTiles();\n\n        //目录树点击之后朝向 优先级最高\n        if (constants.c_treeShapeJumpPano) {\n\n            constants.c_treeShapeJumpPano = false;\n\n            var arr = constants.c_treeShapeJumpPanoStr.split(\"#\");\n\n            (0, _SWTool.setCameraAngle)(parseFloat(arr[0]), parseFloat(arr[1]), true);\n        }\n\n        clearTimeout(waitTime);\n\n        constants.c_isPreviewImageLoadEnd = false;\n    }, 500);\n}\n\n/**加载完之后，界面有些需要更新 */\nfunction storeDispatch() {\n\n    var store = (0, _store2.default)();\n\n    if (constants.c_initUIData) {\n\n        constants.c_initUIData = false;\n        //简介\n        store.dispatch((0, _action.show_Introduction_fun)({\n            imgurl: external.server_json.data.resourcePath + external.server_json.data.Introduction.imgUrl,\n            title: external.server_json.data.Introduction.title,\n            content: external.server_json.data.Introduction.content\n        }));\n\n        //背景音乐\n        store.dispatch((0, _action.background_music_fun)({\n            audioUrl: external.server_json.data.resourcePath + external.server_json.data.bgMusic\n        }));\n    }\n\n    if (constants.c_StationInfo) {\n\n        var mapmarker = constants.c_panoIDTable.getValue(constants.c_StationInfo.panoID);\n        var floorsMapData = null;\n        var imgurl = \"\";\n        var floorsMapArr = constants.c_FloorsMapTable.getValues();\n\n        for (var i = 0; i < floorsMapArr.length; i++) {\n            var obj = floorsMapArr[i];\n            if (mapmarker.rasterMapID == obj.floorID) {\n                floorsMapData = obj;\n                imgurl = constants.sw_getService.resourcesUrl + '/' + obj.rasterMapPath;\n                break;\n            }\n        }\n\n        //站点跳转之后需要更新一下小地图\n        store.dispatch((0, _action.show_PanoMap_fun)({\n            pID: constants.c_StationInfo.panoID,\n            imgUrl: imgurl,\n            floorsMapData: floorsMapData\n        }));\n\n        //当前位置名称更新\n        store.dispatch((0, _action.pano_prompt_fun)({\n            panoNames: mapmarker.markerContent\n        }));\n\n        //分站点、楼层音频文件\n        external.server_json.data.AudioList.forEach(function (item) {\n            if (item.panoArr.indexOf(floorsMapData.floorID) != -1 || item.panoArr.indexOf(constants.c_StationInfo.panoID) != -1) {\n                store.dispatch((0, _action.background_music_fun)({\n                    audioUrl: constants.sw_getService.resourcesUrl + '/BusinessData/ExhibitDetails/Audio/' + item.audioName\n                }));\n            }\n        });\n\n        //限制上下俯仰角\n        for (var _i = 0; _i < external.server_json.data.AngleLimit.length; _i++) {\n            var item = external.server_json.data.AngleLimit[_i];\n            if (item.panoArr.indexOf(floorsMapData.floorID) != -1 || item.panoArr.indexOf(constants.c_StationInfo.panoID) != -1) {\n                constants.c_maxPitch = item.UpperAngle;\n                constants.c_minPitch = item.LowerAngle;\n                break;\n            } else {\n                constants.c_maxPitch = item.UpperAngle;\n                constants.c_minPitch = item.LowerAngle;\n            }\n        }\n    }\n\n    if (constants.c_thumbnailsShow) {\n        constants.c_thumbnailsShow = false;\n        //数据来之后可以弹出展厅列表\n        store.dispatch((0, _action.show_Thumbnails_fun)(true));\n    }\n}\n\n/**跳转时需要清除所有的东西 */\nfunction deleteAll() {\n\n    deleteMarker();\n\n    //清除箭头\n    constants.c_arrowArr.forEach(function (item) {\n\n        if (item) item.clearArrow();\n    });\n    constants.c_arrowArr.length = 0;\n\n    constants.c_arrowCurentArr.length = 0;\n\n    //清除墙面片\n    constants.sw_wallMesh.clear();\n\n    //隐藏探面\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\n\n    constants.c_smallVideoArr.forEach(function (item) {\n\n        if (item) item.clearSmallVideo();\n    });\n\n    constants.c_smallVideoArr.length = 0;\n\n    deleteMeasuring();\n}\n\nfunction deleteMarker() {\n    //清理标注\n    constants.c_markerMeshArr.forEach(function (item) {\n\n        item.clear();\n    });\n    constants.c_markerMeshArr.length = 0;\n}\n\n/**清除测量 */\nfunction deleteMeasuring() {\n\n    constants.c_isMeasureStatus = false;\n\n    constants.sw_measure.clear();\n}\n\n/**\r\n * 添加老箭头数据\r\n * */\nfunction AddOldArrow() {\n\n    if (constants.c_siteRepresentation) {\n\n        constants.c_AdjacentPanoInfoArr.forEach(function (obj) {\n\n            constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n        });\n\n        constants.sw_getService.getNewArrow();\n    } else {\n\n        constants.c_AdjacentPanoInfoArr.forEach(function (obj) {\n\n            constants.c_arrowArr.push(new _SWSiteLocationMoudle2.default(obj));\n        });\n    }\n\n    //偷偷加载思路是对的，还未想清楚怎么优先加载本站全景图\n    //constants.sw_skyBox.AccordingArrowLoadPano();\n}\n\n/**\r\n * 添加新箭头数据\r\n * */\nfunction AddNewArrow() {\n\n    var boo = true;\n\n    if (constants.c_arrowArr.length == 0) {\n\n        boo = false;\n    }\n\n    constants.c_ArrowPanoInfoArr.forEach(function (obj) {\n\n        if (boo) {\n\n            constants.c_arrowArr.forEach(function (item) {\n\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\n\n                    item.updateLocation(obj);\n                }\n            });\n        } else {\n\n            constants.c_arrowArr.push(new _SWMarkerArrowModule2.default(obj));\n        }\n    });\n}\n\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\nfunction jumpSite(panoID) {\n\n    if (!constants.c_isPreviewImageLoadEnd) {\n\n        deleteAll();\n\n        constants.sw_getService.getPanoByID(panoID);\n    }\n}\n\n/**\r\n * 添加标注\r\n * */\nfunction AddMarkerMesh() {\n\n    constants.c_markerInfoArr.forEach(function (obj) {\n\n        if (obj.centerX != 0 && obj.centerY != 0) {\n\n            constants.c_markerMeshArr.push(new _SWMarkerSingleModule2.default(obj));\n        } else {\n\n            constants.c_markerMeshArr.push(new _SWMarkerMoreModule2.default(obj));\n        }\n\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\n\n            constants.c_JumpMarkerID = \"\";\n\n            JumpLookMarker(obj);\n        }\n    });\n}\n\n/**\r\n * 添加视频\r\n * */\nfunction AddSmallVideo() {\n\n    constants.c_isDisplayFace = true;\n\n    var vboo = false;\n\n    if (constants.c_allVideoTable.containsKey(constants.c_StationInfo.panoID)) {\n\n        var tableValue = constants.c_allVideoTable.getValue(constants.c_StationInfo.panoID);\n\n        tableValue.forEach(function (obj) {\n\n            var details = JSON.parse(obj.details);\n\n            if (constants.c_currentState != constants.c_currentStateEnum.phoneStatus) {\n\n                vboo = true;\n\n                constants.c_smallVideoArr.push(new _SWMarkerVideoModule2.default(details, obj.panoID));\n\n                var yp = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(details.posX, details.posY, details.posZ));\n\n                //解决同一站点有视频和热点时，查看热点转向问题\n                if (constants.c_JumpMarkerID == \"\") (0, _SWTool.setCameraAngle)(yp.Yaw, yp.Pitch, true);\n\n                constants.c_isDisplayFace = details.openBox || false;\n            } else if (details.openBox) {\n                //可彈出視頻才會形成标注\n\n                var videoObj = {\n                    centerX: parseFloat(details.posX),\n                    centerY: parseFloat(details.posY),\n                    centerZ: parseFloat(details.posZ),\n                    markerID: \"sp\",\n                    name: details.url,\n                    panoID: constants.c_StationInfo.panoID,\n                    points: \"\",\n                    type: 44\n                };\n\n                constants.c_markerMeshArr.push(new _SWMarkerSingleModule2.default(videoObj));\n            }\n        });\n    }\n\n    if (vboo) {\n\n        var store = (0, _store2.default)();\n\n        store.dispatch((0, _action.background_music_fun)({\n            bgMusicOff: false\n        }));\n    }\n};\n\n/**初始朝向 */\nfunction InitialOrientation() {\n\n    //如果传入站点和配置点冲突了，以传入站点为主\n    if (swExternalConst.server_json.firstAnimation && swExternalConst.server_json.firstPanoID == constants.c_StationInfo.panoID) {\n\n        swExternalConst.server_json.firstAnimation = false;\n\n        (0, _SWTool.setCameraAngle)(swExternalConst.server_json.firstYaw, swExternalConst.server_json.firstPitch, true);\n    } else {\n\n        swExternalConst.server_json.data.InitialOrientation.forEach(function (obj, idx) {\n\n            if (obj.panoid == constants.c_StationInfo.panoID) {\n\n                (0, _SWTool.setCameraAngle)(obj.yaw, obj.pitch, true);\n            }\n        });\n    }\n}\n\n/**\r\n * 跳转之后看向某一个点\r\n * */\nfunction rotateByWallClick() {\n\n    var aa = constants.c_wallClickRotateV3.clone().sub(constants.c_StationInfo.point.clone());\n\n    var bb = aa.clone().applyMatrix4(constants.c_DS3ToOpenGLMx4);\n\n    var swvg = (0, _SWTool.Vector3ToVP)(new THREE.Vector3(bb.z, -bb.y, bb.x));\n\n    (0, _SWTool.setCameraAngle)(swvg.Yaw, swvg.Pitch, true);\n};\n\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\nfunction JumpLookMarker(obj) {\n\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\n\n        (0, _SWTool.setCameraAngle)(obj.centerX, obj.centerY, true);\n    } else {\n\n        var yaw = [],\n            pitch = [];\n\n        obj.points.forEach(function (objs) {\n\n            yaw.push(parseFloat(objs.yaw));\n\n            pitch.push(parseFloat(objs.pitch));\n        });\n\n        var yawArr = yaw.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var pitchArr = pitch.sort(function (a, b) {\n            if (a > b) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        var num = yawArr[yawArr.length - 1];\n\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\n\n            num = 360 - yawArr[yawArr.length - 1];\n        }\n\n        var yy = yawArr[0] + (num - yawArr[0]) * 0.5;\n\n        var pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\n\n        (0, _SWTool.setCameraAngle)(yy, pp, true);\n    }\n}\n\n/**摇一摇\r\n * 判定规则：1.当前站点是否有热点存在\r\n * 2.箭头能跳转到的点是否有热点存在\r\n * 3.以上两种都没有则在热点墙上随机挑选\r\n * 4.以上三种都没有则没有此功能\r\n */\nfunction ShakeAmbient() {\n\n    if (constants.c_markerInfoArr.length > 0) {\n        //判定当前站点是否有热点\n        //在当前站点的文物随机看向一个\n        var objs = constants.c_markerInfoArr[Math.floor(Math.random() * 10 * constants.c_markerInfoArr.length / 10)];\n        JumpLookMarker(objs);\n        return true;\n    } else {\n        var nowArrow = void 0;\n        if (swExternalConst.server_json.features.arrowType) {\n            //不同的箭头类型，数据表不一样\n            nowArrow = constants.sw_GetSQLData.GetAdjacentPanoFun(constants.c_StationInfo.panoID);\n        } else {\n            nowArrow = constants.sw_GetSQLData.GetStreetViewLinkFun(constants.c_StationInfo.panoID);\n        }\n\n        var nowArrowMarkerArr = [];\n        for (var i = 0; i < nowArrow.length; i++) {\n            //查找所有箭头站点是否有热点\n            var arrowObj = nowArrow[i];\n            var nowMarkerArr = constants.sw_GetSQLData.getMarkByPanoIDFun(swExternalConst.server_json.features.arrowType ? arrowObj.DstImageID : arrowObj.DstImageName);\n            if (nowMarkerArr && nowMarkerArr.length > 0) {\n                nowArrowMarkerArr.push(nowMarkerArr);\n            }\n        }\n\n        if (nowArrowMarkerArr.length > 0) {\n            //有\n            var nowAMArr = nowArrowMarkerArr[0];\n            var nowMarker = nowAMArr[Math.floor(Math.random() * 10 * nowAMArr.length / 10)];\n            jumpSite(nowMarker.PanoID);\n            constants.c_JumpMarkerID = nowMarker.MarkerID;\n            return true;\n        } else {\n            //没有\n            var buildingArr = constants.c_allExhibitsForBuildingTable.getValues();\n            if (buildingArr.length > 0) {\n                var aefb = buildingArr[Math.floor(Math.random() * 10 * buildingArr.length / 10)];\n                jumpSite(aefb.panoID);\n                constants.c_JumpMarkerID = aefb.markerID[0];\n                return true;\n            }\n            return false;\n        }\n    }\n}\n\n/**开启VR */\nfunction VRShow() {\n    constants.c_mode = constants.c_modes.STEREO;\n    constants.sw_SWReticle.show();\n    gyroStatus(true);\n    var fov = constants.camera.fov;\n    // 强制效果立体相机通过刷新fov更新\n    constants.camera.fov = fov + 10e-3;\n    constants.c_effect.setSize(window.innerWidth, window.innerHeight);\n    constants.c_effect.render(constants.scene, constants.camera);\n    constants.camera.fov = fov;\n}\n\n/**关闭VR */\nfunction VRHide() {\n    constants.c_mode = constants.c_modes.NORMAL;\n    constants.sw_SWReticle.hide();\n    gyroStatus(false);\n}\n\n/**陀螺仪状态 */\nfunction gyroStatus(boo) {\n    constants.c_control.enabled = boo;\n}",{"version":3,"sources":["app\\src\\tool\\SWInitializeInstance.js"],"names":["LoadPreviewImage","storeDispatch","deleteAll","deleteMarker","deleteMeasuring","AddOldArrow","AddNewArrow","jumpSite","AddMarkerMesh","AddSmallVideo","InitialOrientation","rotateByWallClick","JumpLookMarker","ShakeAmbient","VRShow","VRHide","gyroStatus","constants","swExternalConst","require","external","TWEEN","waitTime","setTimeout","c_isWallClickRotateBoo","sw_skyBox","panoBox","addFaceTiles","c_treeShapeJumpPano","arr","c_treeShapeJumpPanoStr","split","parseFloat","clearTimeout","c_isPreviewImageLoadEnd","store","c_initUIData","dispatch","imgurl","server_json","data","resourcePath","Introduction","imgUrl","title","content","audioUrl","bgMusic","c_StationInfo","mapmarker","c_panoIDTable","getValue","panoID","floorsMapData","floorsMapArr","c_FloorsMapTable","getValues","i","length","obj","rasterMapID","floorID","sw_getService","resourcesUrl","rasterMapPath","pID","panoNames","markerContent","AudioList","forEach","item","panoArr","indexOf","audioName","AngleLimit","c_maxPitch","UpperAngle","c_minPitch","LowerAngle","c_thumbnailsShow","c_arrowArr","clearArrow","c_arrowCurentArr","sw_wallMesh","clear","sw_wallProbeSurface","wallProbeSurfaceVisible","c_smallVideoArr","clearSmallVideo","c_markerMeshArr","c_isMeasureStatus","sw_measure","c_siteRepresentation","c_AdjacentPanoInfoArr","push","SWMarkerArrowModule","getNewArrow","SWSiteLocationMoudle","boo","c_ArrowPanoInfoArr","arrowData","srcPanoID","dstPanoID","updateLocation","getPanoByID","c_markerInfoArr","centerX","centerY","SWMarkerSingleModule","SWMarkerMoreModule","c_JumpMarkerID","markerID","c_isDisplayFace","vboo","c_allVideoTable","containsKey","tableValue","details","JSON","parse","c_currentState","c_currentStateEnum","phoneStatus","SWMarkerVideoModule","yp","THREE","Vector3","posX","posY","posZ","Yaw","Pitch","openBox","videoObj","centerZ","name","url","points","type","bgMusicOff","firstAnimation","firstPanoID","firstYaw","firstPitch","idx","panoid","yaw","pitch","aa","c_wallClickRotateV3","clone","sub","point","bb","applyMatrix4","c_DS3ToOpenGLMx4","swvg","z","y","x","objs","yawArr","sort","a","b","pitchArr","num","yy","pp","Math","floor","random","nowArrow","features","arrowType","sw_GetSQLData","GetAdjacentPanoFun","GetStreetViewLinkFun","nowArrowMarkerArr","arrowObj","nowMarkerArr","getMarkByPanoIDFun","DstImageID","DstImageName","nowAMArr","nowMarker","PanoID","MarkerID","buildingArr","c_allExhibitsForBuildingTable","aefb","c_mode","c_modes","STEREO","sw_SWReticle","show","fov","camera","c_effect","setSize","window","innerWidth","innerHeight","render","scene","NORMAL","hide","c_control","enabled"],"mappings":"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","file":"SWInitializeInstance.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["import * as constants from './SWConstants';\r\nimport {\r\n    setCameraAngle,\r\n    Vector3ToVP\r\n} from './SWTool';\r\nimport SWMarkerArrowModule from '../module/marker/SWMarkerArrowModule';\r\nimport SWMarkerSingleModule from '../module/marker/SWMarkerSingleModule';\r\nimport SWMarkerMoreModule from '../module/marker/SWMarkerMoreModule';\r\nimport SWMarkerVideoModule from '../module/marker/SWMarkerVideoModule';\r\nimport SWSiteLocationMoudle from '../module/marker/SWSiteLocationMoudle';\r\nimport initStore from '../../views/redux/store/store';\r\nimport {\r\n    background_music_fun,\r\n    show_PanoMap_fun,\r\n    pano_prompt_fun,\r\n    show_Thumbnails_fun,\r\n    show_Introduction_fun\r\n} from '../../views/redux/action';\r\nconst swExternalConst = require('./SWExternalConst');\r\nconst external = require('../tool/SWExternalConst.js');\r\n\r\nconst TWEEN = require('@tweenjs/tween.js');\r\n\r\n/**加载完成之后调用 */\r\nexport function LoadPreviewImage() {\r\n\r\n    storeDispatch();\r\n\r\n    let waitTime = setTimeout(() => {\r\n\r\n        //墙面跳转朝向 优先级最低\r\n        if (constants.c_isWallClickRotateBoo) { \r\n\r\n            constants.c_isWallClickRotateBoo = false;\r\n\r\n            rotateByWallClick();\r\n        }\r\n\r\n        //初始朝向 优先级中等\r\n        InitialOrientation(); \r\n\r\n        //嵌入视频朝向 优先级最高\r\n        AddSmallVideo();\r\n\r\n        //标注 主要是为了点击热点墙时能看向热点\r\n        AddMarkerMesh();\r\n\r\n        //跳转之后，第一眼要加载\r\n        constants.sw_skyBox.panoBox.addFaceTiles();\r\n\r\n        //目录树点击之后朝向 优先级最高\r\n        if (constants.c_treeShapeJumpPano) { \r\n\r\n            constants.c_treeShapeJumpPano = false;\r\n\r\n            let arr = constants.c_treeShapeJumpPanoStr.split(\"#\");\r\n\r\n            setCameraAngle(parseFloat(arr[0]), parseFloat(arr[1]), true);\r\n        }\r\n\r\n        clearTimeout(waitTime);\r\n\r\n        constants.c_isPreviewImageLoadEnd = false;\r\n\r\n    }, 500);\r\n}\r\n\r\n/**加载完之后，界面有些需要更新 */\r\nexport function storeDispatch() {\r\n\r\n    let store = initStore();\r\n\r\n    if (constants.c_initUIData) {\r\n\r\n        constants.c_initUIData = false;\r\n        //简介\r\n        store.dispatch(show_Introduction_fun({\r\n            imgurl: external.server_json.data.resourcePath + external.server_json.data.Introduction.imgUrl,\r\n            title: external.server_json.data.Introduction.title,\r\n            content: external.server_json.data.Introduction.content\r\n        }));\r\n\r\n        //背景音乐\r\n        store.dispatch(background_music_fun({\r\n            audioUrl: external.server_json.data.resourcePath + external.server_json.data.bgMusic\r\n        }));\r\n    }\r\n\r\n    if (constants.c_StationInfo) {\r\n\r\n        let mapmarker = constants.c_panoIDTable.getValue(constants.c_StationInfo.panoID);\r\n        let floorsMapData = null;\r\n        let imgurl = \"\";\r\n        let floorsMapArr = constants.c_FloorsMapTable.getValues();\r\n\r\n        for (let i = 0; i < floorsMapArr.length; i++) {\r\n            let obj = floorsMapArr[i];\r\n            if (mapmarker.rasterMapID == obj.floorID) {\r\n                floorsMapData = obj;\r\n                imgurl = `${constants.sw_getService.resourcesUrl}/${obj.rasterMapPath}`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //站点跳转之后需要更新一下小地图\r\n        store.dispatch(show_PanoMap_fun({\r\n            pID: constants.c_StationInfo.panoID,\r\n            imgUrl: imgurl,\r\n            floorsMapData: floorsMapData\r\n        }));\r\n\r\n        //当前位置名称更新\r\n        store.dispatch(pano_prompt_fun({\r\n            panoNames: mapmarker.markerContent\r\n        }));\r\n\r\n        //分站点、楼层音频文件\r\n        external.server_json.data.AudioList.forEach((item) => {\r\n            if (item.panoArr.indexOf(floorsMapData.floorID) != -1 || item.panoArr.indexOf(constants.c_StationInfo.panoID) != -1) {\r\n                store.dispatch(background_music_fun({\r\n                    audioUrl: `${constants.sw_getService.resourcesUrl}/BusinessData/ExhibitDetails/Audio/${item.audioName}`\r\n                }));\r\n            }\r\n        });\r\n\r\n        //限制上下俯仰角\r\n        for (let i = 0; i < external.server_json.data.AngleLimit.length; i++) {\r\n            let item = external.server_json.data.AngleLimit[i];\r\n            if (item.panoArr.indexOf(floorsMapData.floorID) != -1 || item.panoArr.indexOf(constants.c_StationInfo.panoID) != -1) {\r\n                constants.c_maxPitch = item.UpperAngle;\r\n                constants.c_minPitch = item.LowerAngle;\r\n                break;\r\n            } else {\r\n                constants.c_maxPitch = item.UpperAngle;\r\n                constants.c_minPitch = item.LowerAngle;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (constants.c_thumbnailsShow) {\r\n        constants.c_thumbnailsShow = false;\r\n        //数据来之后可以弹出展厅列表\r\n        store.dispatch(show_Thumbnails_fun(true));\r\n    }\r\n}\r\n\r\n/**跳转时需要清除所有的东西 */\r\nexport function deleteAll() {\r\n\r\n    deleteMarker();\r\n\r\n    //清除箭头\r\n    constants.c_arrowArr.forEach((item) => {\r\n\r\n        if (item) item.clearArrow();\r\n\r\n    });\r\n    constants.c_arrowArr.length = 0;\r\n\r\n    constants.c_arrowCurentArr.length = 0;\r\n\r\n    //清除墙面片\r\n    constants.sw_wallMesh.clear();\r\n\r\n    //隐藏探面\r\n    constants.sw_wallProbeSurface.wallProbeSurfaceVisible(0, 0);\r\n\r\n    constants.c_smallVideoArr.forEach((item) => {\r\n\r\n        if (item) item.clearSmallVideo();\r\n\r\n    });\r\n\r\n    constants.c_smallVideoArr.length = 0;\r\n\r\n    deleteMeasuring();\r\n}\r\n\r\nexport function deleteMarker() {\r\n    //清理标注\r\n    constants.c_markerMeshArr.forEach((item) => {\r\n\r\n        item.clear();\r\n\r\n    });\r\n    constants.c_markerMeshArr.length = 0;\r\n}\r\n\r\n/**清除测量 */\r\nexport function deleteMeasuring() {\r\n\r\n    constants.c_isMeasureStatus = false;\r\n\r\n    constants.sw_measure.clear();\r\n}\r\n\r\n/**\r\n * 添加老箭头数据\r\n * */\r\nexport function AddOldArrow() {\r\n\r\n    if (constants.c_siteRepresentation) {\r\n\r\n        constants.c_AdjacentPanoInfoArr.forEach((obj) => {\r\n\r\n            constants.c_arrowArr.push(new SWMarkerArrowModule(obj));\r\n\r\n        });\r\n\r\n        constants.sw_getService.getNewArrow();\r\n\r\n    } else {\r\n\r\n        constants.c_AdjacentPanoInfoArr.forEach((obj) => {\r\n\r\n            constants.c_arrowArr.push(new SWSiteLocationMoudle(obj));\r\n\r\n        });\r\n    }\r\n\r\n    //偷偷加载思路是对的，还未想清楚怎么优先加载本站全景图\r\n    //constants.sw_skyBox.AccordingArrowLoadPano();\r\n}\r\n\r\n/**\r\n * 添加新箭头数据\r\n * */\r\nexport function AddNewArrow() {\r\n\r\n    let boo = true;\r\n\r\n    if (constants.c_arrowArr.length == 0) {\r\n\r\n        boo = false;\r\n    }\r\n\r\n    constants.c_ArrowPanoInfoArr.forEach((obj) => {\r\n\r\n        if (boo) {\r\n\r\n            constants.c_arrowArr.forEach((item) => {\r\n\r\n                if (item.arrowData.srcPanoID === obj.srcPanoID && item.arrowData.dstPanoID === obj.dstPanoID) {\r\n\r\n                    item.updateLocation(obj);\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } else {\r\n\r\n            constants.c_arrowArr.push(new SWMarkerArrowModule(obj));\r\n\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 跳站点\r\n * @param {String} panoID 站点ID\r\n */\r\nexport function jumpSite(panoID) {\r\n\r\n    if (!constants.c_isPreviewImageLoadEnd) {\r\n\r\n        deleteAll();\r\n\r\n        constants.sw_getService.getPanoByID(panoID);\r\n    }\r\n}\r\n\r\n/**\r\n * 添加标注\r\n * */\r\nexport function AddMarkerMesh() {\r\n\r\n    constants.c_markerInfoArr.forEach((obj) => {\r\n\r\n        if (obj.centerX != 0 && obj.centerY != 0) {\r\n\r\n            constants.c_markerMeshArr.push(new SWMarkerSingleModule(obj));\r\n\r\n        } else {\r\n\r\n            constants.c_markerMeshArr.push(new SWMarkerMoreModule(obj));\r\n\r\n        }\r\n\r\n        if (constants.c_JumpMarkerID != \"\" && constants.c_JumpMarkerID == obj.markerID) {\r\n\r\n            constants.c_JumpMarkerID = \"\";\r\n\r\n            JumpLookMarker(obj);\r\n\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 添加视频\r\n * */\r\nexport function AddSmallVideo() {\r\n\r\n    constants.c_isDisplayFace = true;\r\n\r\n    let vboo = false;\r\n\r\n    if (constants.c_allVideoTable.containsKey(constants.c_StationInfo.panoID)) {\r\n\r\n        let tableValue = constants.c_allVideoTable.getValue(constants.c_StationInfo.panoID);\r\n\r\n        tableValue.forEach((obj) => {\r\n\r\n            let details = JSON.parse(obj.details);\r\n\r\n            if (constants.c_currentState != constants.c_currentStateEnum.phoneStatus) {\r\n\r\n                vboo = true;\r\n\r\n                constants.c_smallVideoArr.push(new SWMarkerVideoModule(details, obj.panoID));\r\n\r\n                var yp = Vector3ToVP(new THREE.Vector3(details.posX, details.posY, details.posZ));\r\n\r\n                //解决同一站点有视频和热点时，查看热点转向问题\r\n                if (constants.c_JumpMarkerID == \"\") setCameraAngle(yp.Yaw, yp.Pitch, true);\r\n\r\n                constants.c_isDisplayFace = details.openBox || false;\r\n\r\n            } else if (details.openBox) { //可彈出視頻才會形成标注\r\n\r\n                let videoObj = {\r\n                    centerX: parseFloat(details.posX),\r\n                    centerY: parseFloat(details.posY),\r\n                    centerZ: parseFloat(details.posZ),\r\n                    markerID: \"sp\",\r\n                    name: details.url,\r\n                    panoID: constants.c_StationInfo.panoID,\r\n                    points: \"\",\r\n                    type: 44\r\n                }\r\n\r\n                constants.c_markerMeshArr.push(new SWMarkerSingleModule(videoObj));\r\n            }\r\n        });\r\n    }\r\n\r\n    if (vboo) {\r\n\r\n        let store = initStore();\r\n\r\n        store.dispatch(background_music_fun({\r\n            bgMusicOff: false\r\n        }));\r\n    }\r\n};\r\n\r\n/**初始朝向 */\r\nexport function InitialOrientation() {\r\n\r\n    //如果传入站点和配置点冲突了，以传入站点为主\r\n    if (swExternalConst.server_json.firstAnimation && swExternalConst.server_json.firstPanoID == constants.c_StationInfo.panoID) {\r\n\r\n        swExternalConst.server_json.firstAnimation = false;\r\n\r\n        setCameraAngle(swExternalConst.server_json.firstYaw, swExternalConst.server_json.firstPitch, true);\r\n\r\n    } else {\r\n\r\n        swExternalConst.server_json.data.InitialOrientation.forEach((obj, idx) => {\r\n\r\n            if (obj.panoid == constants.c_StationInfo.panoID) {\r\n\r\n                setCameraAngle(obj.yaw, obj.pitch, true);\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 跳转之后看向某一个点\r\n * */\r\nexport function rotateByWallClick() {\r\n\r\n    let aa = constants.c_wallClickRotateV3.clone().sub(constants.c_StationInfo.point.clone());\r\n\r\n    let bb = aa.clone().applyMatrix4(constants.c_DS3ToOpenGLMx4);\r\n\r\n    let swvg = Vector3ToVP(new THREE.Vector3(bb.z, -bb.y, bb.x));\r\n\r\n    setCameraAngle(swvg.Yaw, swvg.Pitch, true);\r\n};\r\n\r\n/**\r\n * 跳转之后看向标注的中心点\r\n * @param {SWMarkerInfo} obj 标注点对象\r\n */\r\nexport function JumpLookMarker(obj) {\r\n\r\n    if (obj.centerX != 0 && obj.centerY != 0 && obj.centerZ != 0) {\r\n\r\n        setCameraAngle(obj.centerX, obj.centerY, true);\r\n\r\n    } else {\r\n\r\n        let yaw = [],\r\n            pitch = [];\r\n\r\n        obj.points.forEach((objs) => {\r\n\r\n            yaw.push(parseFloat(objs.yaw));\r\n\r\n            pitch.push(parseFloat(objs.pitch));\r\n\r\n        });\r\n\r\n        let yawArr = yaw.sort(function (a, b) {\r\n            if (a > b) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n\r\n        let pitchArr = pitch.sort(function (a, b) {\r\n            if (a > b) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n\r\n        let num = yawArr[yawArr.length - 1];\r\n\r\n        if (yawArr[0] < 100 && yawArr[yawArr.length - 1] > 300) {\r\n\r\n            num = 360 - yawArr[yawArr.length - 1];\r\n\r\n        }\r\n\r\n        let yy = yawArr[0] + (num - yawArr[0]) * 0.5;\r\n\r\n        let pp = pitchArr[0] + (pitchArr[pitchArr.length - 1] - pitchArr[0]) * 0.5;\r\n\r\n        setCameraAngle(yy, pp, true);\r\n    }\r\n}\r\n\r\n/**摇一摇\r\n * 判定规则：1.当前站点是否有热点存在\r\n * 2.箭头能跳转到的点是否有热点存在\r\n * 3.以上两种都没有则在热点墙上随机挑选\r\n * 4.以上三种都没有则没有此功能\r\n */\r\nexport function ShakeAmbient() {\r\n\r\n    if (constants.c_markerInfoArr.length > 0) { //判定当前站点是否有热点\r\n        //在当前站点的文物随机看向一个\r\n        let objs = constants.c_markerInfoArr[Math.floor((Math.random() * 10 * constants.c_markerInfoArr.length) / 10)];\r\n        JumpLookMarker(objs);\r\n        return true;\r\n    } else {\r\n        let nowArrow;\r\n        if (swExternalConst.server_json.features.arrowType) { //不同的箭头类型，数据表不一样\r\n            nowArrow = constants.sw_GetSQLData.GetAdjacentPanoFun(constants.c_StationInfo.panoID);\r\n        } else {\r\n            nowArrow = constants.sw_GetSQLData.GetStreetViewLinkFun(constants.c_StationInfo.panoID);\r\n        }\r\n\r\n        let nowArrowMarkerArr = [];\r\n        for (let i = 0; i < nowArrow.length; i++) { //查找所有箭头站点是否有热点\r\n            let arrowObj = nowArrow[i];\r\n            let nowMarkerArr = constants.sw_GetSQLData.getMarkByPanoIDFun(swExternalConst.server_json.features.arrowType ? arrowObj.DstImageID : arrowObj.DstImageName);\r\n            if (nowMarkerArr && nowMarkerArr.length > 0) {\r\n                nowArrowMarkerArr.push(nowMarkerArr);\r\n            }\r\n        }\r\n\r\n        if (nowArrowMarkerArr.length > 0) { //有\r\n            let nowAMArr = nowArrowMarkerArr[0];\r\n            let nowMarker = nowAMArr[Math.floor((Math.random() * 10 * nowAMArr.length) / 10)];\r\n            jumpSite(nowMarker.PanoID);\r\n            constants.c_JumpMarkerID = nowMarker.MarkerID;\r\n            return true;\r\n        } else { //没有\r\n            let buildingArr = constants.c_allExhibitsForBuildingTable.getValues();\r\n            if (buildingArr.length > 0) {\r\n                let aefb = buildingArr[Math.floor((Math.random() * 10 * buildingArr.length) / 10)];\r\n                jumpSite(aefb.panoID);\r\n                constants.c_JumpMarkerID = aefb.markerID[0];\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n/**开启VR */\r\nexport function VRShow() {\r\n    constants.c_mode = constants.c_modes.STEREO;\r\n    constants.sw_SWReticle.show();\r\n    gyroStatus(true);\r\n    let fov = constants.camera.fov;\r\n    // 强制效果立体相机通过刷新fov更新\r\n    constants.camera.fov = fov + 10e-3;\r\n    constants.c_effect.setSize(window.innerWidth, window.innerHeight);\r\n    constants.c_effect.render(constants.scene, constants.camera);\r\n    constants.camera.fov = fov;\r\n}\r\n\r\n/**关闭VR */\r\nexport function VRHide() {\r\n    constants.c_mode = constants.c_modes.NORMAL;\r\n    constants.sw_SWReticle.hide();\r\n    gyroStatus(false);\r\n}\r\n\r\n/**陀螺仪状态 */\r\nexport function gyroStatus(boo) {\r\n    constants.c_control.enabled = boo;\r\n}"]}]}