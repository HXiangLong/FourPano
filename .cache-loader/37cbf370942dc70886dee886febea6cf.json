{"remainingRequest":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js?cacheDirectory=true!D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\draw\\SWMeasureModule.js","dependencies":[{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\app\\src\\module\\draw\\SWMeasureModule.js","mtime":1541058873871},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540192322431},{"path":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global THREE*/\n\nvar _SWConstants = require('../../tool/SWConstants');\n\nvar _SWDrawPoint = require('./SWDrawPoint');\n\nvar _SWDrawPoint2 = _interopRequireDefault(_SWDrawPoint);\n\nvar _SWDrawLine = require('./SWDrawLine');\n\nvar _SWDrawLine2 = _interopRequireDefault(_SWDrawLine);\n\nvar _store = require('../../../views/redux/store/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _reapop = require('reapop');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 测量功能\r\n */\nvar SWMeasureModule = function () {\n    /**\r\n     * 测量功能的构造函数\r\n     */\n    function SWMeasureModule() {\n        _classCallCheck(this, SWMeasureModule);\n\n        this.swDrawPoint = new _SWDrawPoint2.default();\n\n        this.swDrawLine = new _SWDrawLine2.default();\n    }\n\n    /**\r\n     * \r\n     * @param {Object} obj 在墙上地上点击的点\r\n     * @param {Number} type 1-墙上点的  2-地面点的\r\n     */\n\n\n    _createClass(SWMeasureModule, [{\n        key: 'addPoint',\n        value: function addPoint(obj, type) {\n\n            if (obj) {\n\n                if (this.swDrawLine.lineTimeBoo) {\n                    var store = (0, _store2.default)();\n                    store.dispatch((0, _reapop.notify)({\n                        title: '\\u7ED8\\u5236\\u65F6\\u95F4\\u51B7\\u5374\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u540E\\u70B9\\u51FB\\u3002',\n                        message: '',\n                        position: 'tc',\n                        status: 'success',\n                        dismissible: true,\n                        dismissAfter: 5000\n                    }));\n                    return; //绘制中请稍等\n                }\n\n                var poi = new THREE.Vector3(obj.point.x, obj.point.y, obj.point.z);\n\n                if (type === 2) {\n                    poi.copy(new THREE.Vector3(obj.point.x / -_SWConstants.sw_groundMesh.groundDisplaySize * _SWConstants.c_WallDisplaySize, obj.point.y / -_SWConstants.sw_groundMesh.groundDisplaySize * _SWConstants.c_WallDisplaySize, obj.point.z / -_SWConstants.sw_groundMesh.groundDisplaySize * _SWConstants.c_WallDisplaySize));\n                }\n\n                this.swDrawPoint.drawPoint(poi);\n\n                this.swDrawLine.addPoint(poi);\n            }\n        }\n\n        /**清除所有 */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.swDrawPoint.clear(0);\n            this.swDrawLine.clear(0);\n        }\n    }]);\n\n    return SWMeasureModule;\n}();\n\nexports.default = SWMeasureModule;",{"version":3,"sources":["app\\src\\module\\draw\\SWMeasureModule.js"],"names":["SWMeasureModule","swDrawPoint","SWDrawPoint","swDrawLine","SWDrawLine","obj","type","lineTimeBoo","store","dispatch","title","message","position","status","dismissible","dismissAfter","poi","THREE","Vector3","point","x","y","z","copy","sw_groundMesh","groundDisplaySize","c_WallDisplaySize","drawPoint","addPoint","clear"],"mappings":";;;;;;qjBAAA;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAIA;;;IAGMA,e;AACF;;;AAGA,+BAAc;AAAA;;AAEV,aAAKC,WAAL,GAAmB,IAAIC,qBAAJ,EAAnB;;AAEA,aAAKC,UAAL,GAAkB,IAAIC,oBAAJ,EAAlB;AACH;;AAED;;;;;;;;;iCAKSC,G,EAAKC,I,EAAM;;AAEhB,gBAAID,GAAJ,EAAS;;AAEL,oBAAI,KAAKF,UAAL,CAAgBI,WAApB,EAAgC;AAC5B,wBAAIC,QAAQ,sBAAZ;AACAA,0BAAMC,QAAN,CAAe,oBAAO;AAClBC,qHADkB;AAElBC,iCAAS,EAFS;AAGlBC,kCAAU,IAHQ;AAIlBC,gCAAQ,SAJU;AAKlBC,qCAAa,IALK;AAMlBC,sCAAc;AANI,qBAAP,CAAf;AAQA,2BAV4B,CAUpB;AACX;;AAED,oBAAIC,MAAM,IAAIC,MAAMC,OAAV,CAAkBb,IAAIc,KAAJ,CAAUC,CAA5B,EAA+Bf,IAAIc,KAAJ,CAAUE,CAAzC,EAA4ChB,IAAIc,KAAJ,CAAUG,CAAtD,CAAV;;AAEA,oBAAIhB,SAAS,CAAb,EAAgB;AACZU,wBAAIO,IAAJ,CAAS,IAAIN,MAAMC,OAAV,CAAmBb,IAAIc,KAAJ,CAAUC,CAAV,GAAc,CAACI,2BAAcC,iBAA9B,GAAmDC,8BAArE,EACJrB,IAAIc,KAAJ,CAAUE,CAAV,GAAc,CAACG,2BAAcC,iBAA9B,GAAmDC,8BAD9C,EAEJrB,IAAIc,KAAJ,CAAUG,CAAV,GAAc,CAACE,2BAAcC,iBAA9B,GAAmDC,8BAF9C,CAAT;AAGH;;AAED,qBAAKzB,WAAL,CAAiB0B,SAAjB,CAA2BX,GAA3B;;AAEA,qBAAKb,UAAL,CAAgByB,QAAhB,CAAyBZ,GAAzB;AACH;AAEJ;;AAED;;;;gCACQ;AACJ,iBAAKf,WAAL,CAAiB4B,KAAjB,CAAuB,CAAvB;AACA,iBAAK1B,UAAL,CAAgB0B,KAAhB,CAAsB,CAAtB;AACH;;;;;;kBAEU7B,e","file":"SWMeasureModule.js","sourceRoot":"D:\\02数文\\WebProject\\NodeAllProject\\FourPano","sourcesContent":["/* global THREE*/\r\n\r\nimport { sw_groundMesh, c_WallDisplaySize } from '../../tool/SWConstants';\r\nimport SWDrawPoint from './SWDrawPoint';\r\nimport SWDrawLine from './SWDrawLine';\r\nimport initStore from '../../../views/redux/store/store';\r\nimport {\r\n    notify\r\n} from 'reapop';\r\n\r\n/**\r\n * 测量功能\r\n */\r\nclass SWMeasureModule {\r\n    /**\r\n     * 测量功能的构造函数\r\n     */\r\n    constructor() {\r\n\r\n        this.swDrawPoint = new SWDrawPoint();\r\n\r\n        this.swDrawLine = new SWDrawLine();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Object} obj 在墙上地上点击的点\r\n     * @param {Number} type 1-墙上点的  2-地面点的\r\n     */\r\n    addPoint(obj, type) {\r\n\r\n        if (obj) {\r\n\r\n            if (this.swDrawLine.lineTimeBoo){\r\n                let store = initStore();\r\n                store.dispatch(notify({\r\n                    title: `绘制时间冷却中，请稍后点击。`,\r\n                    message: '',\r\n                    position: 'tc',\r\n                    status: 'success',\r\n                    dismissible: true,\r\n                    dismissAfter: 5000\r\n                }));\r\n                return; //绘制中请稍等\r\n            }\r\n\r\n            let poi = new THREE.Vector3(obj.point.x, obj.point.y, obj.point.z);\r\n\r\n            if (type === 2) {\r\n                poi.copy(new THREE.Vector3((obj.point.x / -sw_groundMesh.groundDisplaySize) * c_WallDisplaySize,\r\n                    (obj.point.y / -sw_groundMesh.groundDisplaySize) * c_WallDisplaySize,\r\n                    (obj.point.z / -sw_groundMesh.groundDisplaySize) * c_WallDisplaySize));\r\n            }\r\n\r\n            this.swDrawPoint.drawPoint(poi);\r\n\r\n            this.swDrawLine.addPoint(poi);\r\n        }\r\n\r\n    }\r\n\r\n    /**清除所有 */\r\n    clear() {\r\n        this.swDrawPoint.clear(0);\r\n        this.swDrawLine.clear(0);\r\n    }\r\n}\r\nexport default SWMeasureModule;"]}]}